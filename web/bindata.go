// Code generated by go-bindata.
// sources:
// includes/authorize.html
// includes/client_detail.html
// includes/clients.html
// includes/index.html
// includes/login.html
// includes/new_client.html
// includes/register.html
// layouts/inside.html
// layouts/outside.html
// layouts/profile.html
// DO NOT EDIT!

package web

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _includesAuthorizeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xcd\x6a\xdb\x40\x10\xbe\xfb\x29\x86\xbd\xcb\xb2\x89\x31\x39\xc8\xea\xa5\x97\x5e\x7a\xe9\x13\xac\xa4\xb1\xbd\x78\xb5\x2b\x56\x6b\xa7\x46\xe8\xd2\xb4\xd4\xa1\x6d\x0a\x2d\xa5\x25\x38\x98\xd0\x40\xd3\x5b\x21\x50\x68\x43\xdf\xc6\xd9\xf8\x31\x8a\xfe\x2c\xb9\xb8\xc7\xe4\x62\x0f\xf3\x8d\xbe\x9f\x1d\xad\x92\x04\x02\x1c\x32\x81\x40\x34\xd3\x1c\x49\x9a\x9a\xd3\x85\x39\x3f\x4e\x12\x40\x11\x40\x9a\xb6\x5a\x8d\x19\x5f\x0a\x8d\x42\x93\xac\xef\x04\x6c\x06\x3e\xa7\x71\x3c\xc8\xfb\x94\x09\x54\xc4\x6d\x01\x34\x91\x88\x8e\xd0\x1a\x23\x0d\x4a\x0c\xc0\x19\x77\xdd\x42\xc3\xb1\xc7\xdd\x7c\xde\x0e\xd8\x2c\x2b\x92\x04\xd8\x10\xda\xa8\x94\x54\x99\xc4\x2e\x15\xe5\xa8\x34\xe4\xbf\x56\x40\xc5\x08\x15\x01\x25\x39\x96\x08\x71\x93\xa4\x7e\xb6\x66\x44\x1e\x63\x49\x36\x94\x2a\x04\xea\x6b\x26\xc5\x80\x10\x08\x51\x8f\x65\x30\x20\x91\x8c\x75\x65\xae\xa1\x97\x4d\x5b\x23\x25\xa7\x51\x09\x02\x38\x91\xeb\x78\x99\x8e\x54\xd0\xf6\x39\x43\xa1\x9f\xd2\x10\xdb\xcf\xb4\x62\x62\x54\xb5\x9e\x3c\x06\x48\x53\xc7\xf6\x5c\x30\xc7\xd7\xeb\x9b\xaf\x9b\x8b\x2b\xf3\xe2\xca\x9c\x7c\xdb\x5c\xbc\xbd\x3b\x7b\x69\x3e\xbe\x5b\xff\x59\xb6\x1d\x3b\xaa\x78\xcb\xe0\x5a\x4e\x50\x14\x5e\x4b\xb5\xe2\xa0\x6e\x2f\xcf\xd6\xbf\x5e\x99\xe5\x89\xf9\xb4\x30\xcb\x15\x14\x1e\x6a\xb5\x52\x6c\xf3\xfa\xfa\x51\x83\xb4\x99\x45\xd1\x80\xc9\x6d\x0c\x00\x87\x53\x0f\xf9\x0e\x6a\x31\xc1\x99\xc0\xc6\x10\x80\xc3\x44\x34\xd5\xa0\xe7\x11\x56\x1c\x20\x68\x88\x03\xc2\xd9\x10\x35\x0b\x91\xc0\x8c\xf2\x29\x0e\xc8\x41\xbf\xd3\x21\x2e\x74\xe1\xf6\xc7\x7b\xf3\xf9\x67\xad\x64\xe7\x52\xf7\x29\x7d\xd8\xef\x55\xda\x97\xdf\x1f\x52\xb8\xdf\xe9\x1d\x76\x3a\x04\xfc\x31\xfa\x13\x0c\x32\x07\xe6\xcb\xca\x2c\x57\xff\x33\xb1\x7d\xd3\xcb\xa5\x97\x57\xec\x1f\x68\x67\x71\xf2\x88\xec\x5b\xa8\x2f\xb9\x15\x06\xd6\x01\x64\x45\x1c\x5a\xbd\xbc\x78\x1e\x5b\xfd\xe6\x96\x9b\x51\xe2\xa9\x17\x32\x4d\x2a\x02\x4f\x0b\xf0\xb4\xb0\xf8\x28\xff\xf3\xb8\xf4\x27\x79\x15\x29\x16\x52\x35\xaf\x42\x53\xce\xe5\xd1\x36\xb1\x39\x5d\xac\x7f\x2f\xc8\xde\x3c\x0f\x63\xaf\xba\xf9\x85\xbb\x00\xc5\xbc\x36\xf7\xe6\xc3\xdd\xcd\xf9\x3e\x73\xdb\xd2\xb1\xb3\x5b\x5d\x7d\x19\x8a\xd3\x2f\xc1\xba\xf1\x37\x00\x00\xff\xff\xbe\x34\xe1\xbd\x15\x05\x00\x00")

func includesAuthorizeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesAuthorizeHtml,
		"includes/authorize.html",
	)
}

func includesAuthorizeHtml() (*asset, error) {
	bytes, err := includesAuthorizeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/authorize.html", size: 1301, mode: os.FileMode(420), modTime: time.Unix(1505119402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesClient_detailHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x6a\xf4\x30\x10\x85\x6b\xfb\x14\x83\x7a\xdb\x6c\xaf\x5f\x17\x58\xf8\x09\xe4\x04\x13\x6b\xbc\x16\xcc\xca\xc2\x52\x36\x2c\x42\x45\x9a\x25\xc7\x08\x29\xd2\x04\xe2\x32\x45\xce\xb3\x71\x8e\x11\x50\x58\xc7\x45\x9a\x34\x2a\x9e\x3e\xbe\x37\xbc\x18\x41\x53\x67\x2c\x81\x08\x26\x30\x89\x94\xce\xaf\x4f\x1f\x0f\x6f\xf3\xcb\xf4\x39\x3d\xcf\xef\xa7\x18\x81\xac\x86\x94\xca\x72\x05\xb7\x83\x0d\x64\x83\xc8\x39\x00\x80\xd4\xe6\x00\x2d\xa3\xf7\xff\x84\x1b\x87\xce\x30\x55\x17\x48\x65\xa2\x90\xfd\x66\x21\x70\x47\x55\x4f\xa8\x69\x14\x6a\x29\x04\xe9\xf7\xc8\xac\x62\xac\x5b\x36\x64\x43\xfd\x1f\xf7\x54\x5f\x87\xd1\xd8\x5d\x4a\xb2\xf9\xfe\x96\x4d\xbf\x51\x65\x51\x48\x77\xd1\x31\xa1\x16\x6a\x4b\x47\x90\xde\xa1\x5d\x62\xbc\x21\x86\xfc\x56\x9a\x3a\xbc\xe5\x20\x56\xf2\x2d\x1d\xb3\xd4\xa1\x55\xb2\x71\xbf\x29\xcf\xd3\x69\x7e\xbc\xff\x93\xf5\x0a\xbd\xbf\x1b\x46\xbd\x3e\x7b\x69\xc8\x4b\x35\xda\x1c\x54\xf9\xb3\xeb\x57\x00\x00\x00\xff\xff\x93\x65\x6c\x6e\x84\x01\x00\x00")

func includesClient_detailHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesClient_detailHtml,
		"includes/client_detail.html",
	)
}

func includesClient_detailHtml() (*asset, error) {
	bytes, err := includesClient_detailHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/client_detail.html", size: 388, mode: os.FileMode(420), modTime: time.Unix(1504778362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesClientsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x8b\xd4\x40\x10\x3d\x67\x7e\x45\xd1\x78\xcd\xc4\xb3\x24\xb9\x8b\xe0\x61\xc5\x1f\xd0\x93\xae\x64\x1a\x6a\x3a\xa1\x53\xd9\xdd\x21\xf6\x49\x90\x3d\x78\x5c\x3c\xb8\xe0\xc1\xd3\x82\xa0\x0b\x1e\x84\xd5\xbf\x93\x59\x6f\xfe\x05\x49\xe7\x63\x22\xce\x61\x6f\xd5\x55\xaf\xdf\xab\x7e\xfd\xda\x16\x14\xe6\xda\x20\x08\xd6\x4c\x28\x9c\xeb\xbe\x7e\x3e\x5c\xfd\x78\xf8\xf2\xad\xbb\xbf\x7e\xb8\xbe\x6d\x5b\x40\xa3\xc0\xb9\xd5\x6a\x01\xce\x4a\xc3\x68\x58\xf8\x3e\x00\x40\xac\xf4\x39\x64\x24\xeb\x3a\x11\x95\x2d\x73\x4d\x18\x4e\xa0\xd4\x23\x82\xb6\x05\x9d\x03\xa1\x81\x75\x46\x1a\x0d\xd7\xf0\x06\x88\xe1\x69\x4f\x02\x1e\xf2\x0f\x4b\x43\x14\x5a\x5d\x6c\x7b\x82\x60\x18\xcb\x69\xb8\x61\x03\x1b\x36\xa1\xc2\x5c\x36\xc4\x02\xb6\x16\xf3\x44\x44\x17\xb8\x89\x46\xf2\xc8\xe0\x85\x00\x5b\x12\x26\x62\xd3\x30\x97\x46\xa4\x71\x5d\x49\x33\x71\x14\xb4\xaf\xb6\x3a\x2b\x0d\xcc\x55\x58\x51\x53\x0b\x90\x56\xcb\x70\xab\x95\x42\x93\x08\xb6\x0d\x8a\x34\x8e\xfa\xab\x69\x1c\xc9\x74\xda\x35\x52\xfa\x7c\x3e\x54\x13\x2b\xa1\x54\x22\x3d\x7c\xbf\xed\xde\xbd\x1f\x1c\x8c\xa3\x2a\x5d\x05\x41\xdc\xd0\x8c\xd1\x35\x87\x85\x2d\x9b\xaa\x7f\x5a\xe0\xad\xb1\xd2\x14\x08\x4f\x86\xe5\xe1\x59\x72\x34\xc9\xb9\x55\x10\x04\x41\x4c\xfa\xff\xfb\xa1\x66\xdc\x79\x92\x1e\x21\x4f\xd9\xd0\xb6\x23\xe9\xfa\x05\xee\x9d\x13\xe9\xb1\xf1\x52\xee\x70\xfd\x8a\xad\x36\xc5\xa4\xb2\x78\xc9\xe2\x03\x60\x52\x58\xfa\x37\x18\x14\x5e\xd6\xc0\x78\xc9\xe1\xae\x61\x54\x22\xed\x6e\x3e\xfd\xbe\x7b\xfb\xe7\xd7\xc7\xa3\xcc\x19\x2a\x6d\x31\xe3\xd7\x67\xcf\x47\x35\xe7\x46\x3f\x47\xda\xc1\x21\x5f\xc9\xa1\x8a\x23\xd2\xb3\x37\x63\x00\x7d\x08\xe2\xa8\xa1\x31\x0f\xfd\x84\x6a\x9c\x47\x27\xf2\x51\x59\xbd\x93\x76\xef\x6b\x2a\x1e\x1b\x93\xee\xea\xa6\xfb\x79\x7f\xf8\x70\x37\x7d\xa0\x5c\x28\x0e\xbb\x0c\xab\xf8\x04\x1c\x9b\x7f\x03\x00\x00\xff\xff\x89\xf0\xe1\x68\x4e\x03\x00\x00")

func includesClientsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesClientsHtml,
		"includes/clients.html",
	)
}

func includesClientsHtml() (*asset, error) {
	bytes, err := includesClientsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/clients.html", size: 846, mode: os.FileMode(420), modTime: time.Unix(1504774954, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x7d\x6f\xdb\xc6\x19\xff\x3f\x9f\xe2\xd9\xed\xef\x3b\x8a\x94\x2d\xd7\x83\x24\xa0\x59\x5d\x2c\x43\xec\x06\x7e\xf9\x3b\x38\x91\x27\xe9\xda\x23\x29\x90\x47\x29\xa9\x67\xc0\xc9\xbc\xad\xe9\xd6\xc5\x41\x5d\xa0\xf0\x5c\xcc\x03\xd6\x75\x2b\x16\xb7\x7b\x69\x63\xd8\x71\xf2\x5d\x36\xbd\xc4\xdf\x62\x38\x52\x2f\xb4\x4c\x52\xb2\xe5\xd5\x30\x04\xf2\xee\xb9\xdf\xdd\xf3\xfc\x7e\xf7\xdc\xc3\xdb\xdc\x04\x8b\x55\xb9\xc3\x00\x49\x2e\x05\x43\x5b\x5b\x9d\xe3\xdd\xce\xd3\x17\x6f\x8e\x5e\xf5\xce\x8e\x00\xc3\xcf\x39\x7b\x9f\x33\xd8\xdc\x04\xe6\x58\xb0\xb5\x75\xeb\x56\x6c\x8c\xe9\x3a\x92\x39\x12\xa9\xf6\xa2\xc5\x9b\x60\x0a\xea\xfb\xa5\xb0\x9d\x72\x87\x79\xa8\x7c\x0b\x00\x20\xde\xe7\xb9\x2d\x68\x78\x6e\x95\x0b\xd6\xef\x1d\xb7\x30\x5d\x81\x6d\x0b\xe7\x63\xdd\xe3\x26\x7d\x00\xec\x73\x8b\x55\xa8\x37\x66\x19\x5a\xff\x08\x63\x58\xbb\xf3\xce\xd2\xed\xb7\x57\x61\x63\x6d\x69\xf5\xde\x9d\x9f\x02\xc6\x09\x86\x09\xb0\x81\xcf\xbc\x06\x37\x13\x60\xc3\x11\xdc\xae\x81\xef\x99\x25\xb4\xb9\x09\xc4\x0c\x3c\x8f\x39\x72\xc3\x67\x1e\x79\xbb\x49\x25\xf5\x60\x6b\x0b\x0d\x10\xb9\x5d\xc3\x1e\xf3\x1b\xae\xe3\xf3\x26\x43\x40\x85\x2c\xa1\xa4\xe5\x6a\x16\x6f\xa6\x78\xb1\xb4\xf2\xce\x74\x9e\x8c\xbb\x0c\xeb\x77\xd6\xef\x2e\x5d\xc9\xeb\x48\x05\x29\x7e\x67\x8d\xc1\x0e\xb5\xd3\x06\xaa\xbf\xf1\x50\xa9\x1f\x35\x44\x49\x27\x71\xb2\xe4\x80\x44\x50\xbc\x7a\x11\x6c\xd5\x15\x2c\x0d\x27\x73\xd1\xef\xbb\x95\x2b\xac\x59\x4d\x43\x56\xae\xbb\x68\xe6\x58\x09\xc3\xae\x42\x7c\x16\x9f\x71\xee\x6f\x6f\xac\xaf\xbf\xb7\xb2\x76\x25\xe2\x2b\x81\x94\xae\xe3\xa7\x51\x1f\x75\x83\x7c\xd8\x60\x25\x14\xbd\x0c\x35\x5e\x91\x0e\x54\xa4\x83\xfd\xc0\x34\x99\xef\x47\xcf\x36\x2a\xbf\xeb\x0a\xe1\xb6\x8a\x5a\x64\x3e\x03\xb0\x45\x9d\x1a\xf3\x86\xb8\xcb\xcc\xf7\x69\x8d\xa5\x03\x4f\x1b\xd3\xcc\x38\xc5\x03\xba\xbc\xb4\xb2\x71\xa5\x68\xda\xcc\x09\xd2\x42\x19\x88\xc1\x08\x87\x36\x33\xd4\x57\x14\x7c\x60\x48\x4d\xa9\xb2\x47\xba\x6d\x68\x4f\xa1\xee\xb1\x6a\x09\x69\x2d\x96\xa5\xea\xd0\x76\x08\x5d\x13\x0f\x1b\x75\x6e\xba\x0e\x0c\x9f\x42\x0f\x50\xb9\xa8\xf1\x6c\x90\xe8\xa4\x80\xa2\x46\x33\x9c\xd0\x44\x06\x4a\x31\xab\xf3\x92\x4f\x9a\x29\x38\x73\x64\x9a\x46\xa7\xf3\xcd\x14\x6e\x60\x4d\xe3\xdc\xc9\x5e\x6f\xef\xaf\x3f\x8c\x73\x3f\x9e\xc9\xa3\xaa\xa0\xb5\xa9\xd8\x3a\xea\x7c\xfc\xb7\xeb\x3a\x54\xd4\x02\x71\xf5\x8d\x96\xb8\x6f\xc6\x06\x8d\xbf\x5e\x2e\x04\x16\xa7\x28\x04\x06\x95\x48\xc2\x62\xaa\xae\x67\x03\x73\xcc\x28\xc5\xd8\x81\x90\xbc\x41\x3d\xa9\xa9\x76\x6c\x51\x49\x11\xd8\x4c\xd6\x5d\xab\x84\xee\xbd\xb7\xb6\x8e\x40\xed\x36\xd7\xe9\x6b\x2e\x91\x9a\xf8\x0a\x42\x98\x9a\xe7\x06\x8d\xf0\xbc\x50\xaf\x64\xc9\xf3\x5c\x6f\x4d\x52\x19\xf8\x80\x56\xb8\xf9\x81\x3a\x34\x54\x95\x94\x96\x13\x04\xad\x30\x11\xaf\x9e\x3c\x57\xe0\xb0\x11\x41\xd5\xf5\x4a\x48\x6d\xc9\xfb\x0e\x37\x3f\x88\x8e\xd9\xee\xe7\xdf\xf5\xbe\xfa\xb6\xa8\x85\x26\x69\x55\x8a\xd3\x08\x64\x3f\xb1\x4a\xf6\x40\xa2\x0b\x2b\xee\x4f\x82\x80\x5b\xe3\xe8\x40\x3d\x4e\xb1\xc5\x7c\xd3\xe3\x15\x66\x55\x1e\x96\xd0\xa0\xef\x67\x4c\x34\x10\xa8\xa7\x51\x1b\x82\x26\x15\x01\xbb\x5c\x0d\x0d\x1c\x27\x6b\xd2\xe3\x4e\x2d\x2c\x8b\x1a\x82\x9a\xac\xee\x0a\x8b\x79\x25\xd4\x3b\x7b\xd6\x3b\x3d\x88\x7c\x49\x89\xcc\xc5\x90\x2e\xfb\xb5\x78\x3c\x7f\x01\x1e\x6d\x25\x1e\xc5\x91\xa8\xc6\x5b\x27\x30\xe9\xb9\xad\x29\x2a\x9f\x89\x7c\xbf\xcb\x3d\x5f\x0e\x08\x87\xbe\x86\x0b\x99\x89\x7e\x2a\xf6\xab\x43\xdc\x72\xe7\xab\x4f\x33\xb9\xbf\x16\xff\x23\xfc\x04\x01\x84\x9d\xe3\x0a\x08\x1b\xef\x67\x6a\x60\x18\x8c\x54\x11\x20\xc8\x2e\xc0\xc6\xd8\x8f\x45\x37\x9d\xfe\xcc\x4a\xec\x4a\x64\xde\xa5\xff\x17\x2e\x05\x1d\x52\xb9\xfb\xc9\xcd\x53\x39\x84\x4f\x60\x52\xf5\x8d\x13\xa9\xda\xb2\x79\x1c\xc4\xe1\xa6\x68\x1c\xc5\x75\x32\x8b\x89\xfb\x36\x9d\xdf\x0b\x7f\xb3\x26\xef\xe8\x8b\x6e\x63\xf5\x6e\x56\xf6\x8e\xd3\x13\x7e\xd7\x26\xd1\x83\x55\x0f\xd0\x10\x2f\x46\x15\x1d\x4d\x10\x71\x11\x35\xdc\x0f\x3c\x91\x7d\x58\x8c\xc4\x34\x82\x28\x17\xfd\x66\x0d\x1e\xd8\xc2\xf1\x4b\xa8\x2e\x65\xe3\x27\x9a\xd6\x6a\xb5\x48\x2b\x4f\x5c\xaf\xa6\x19\xb9\x5c\x4e\xf3\x9b\x35\x04\x2d\x6e\xc9\x7a\x09\x19\x39\x04\x75\xc6\x6b\x75\x59\x42\xfa\x02\x82\x26\x67\xad\xdb\xee\x83\x12\xca\x41\x0e\x8c\x1c\xe8\x0b\xa8\x5c\x6c\x50\x59\x07\xab\x84\x96\xf5\x1c\xe4\x04\x9e\x27\x06\xcc\x91\xc5\x7a\x9e\xe4\x9b\xf3\x44\xaf\xe7\xc9\x5b\x4d\x1c\x3d\xe4\xc3\x5e\x3c\x47\x16\x3f\xb4\x17\x49\x1e\x74\x9d\xcc\x0b\x9c\x27\x06\x36\x88\x5e\xc7\x86\xc8\x93\x39\x30\x48\xa1\x8e\xf3\x64\xde\xc4\x44\x87\x1c\x26\x06\xd1\xc3\x1f\x81\xc9\x5b\x60\x90\x7c\x1d\x17\xd4\x23\x36\x88\xa1\x4c\x06\xff\x46\xf4\xaf\x86\x16\x14\x0e\x0e\x71\x8c\x10\x1e\x0c\xa2\x9b\x98\xcc\x91\x3c\x26\x0b\xa0\x63\x52\x00\x35\x33\x29\x40\x9e\xe8\x26\xd1\xc9\x3c\x59\x20\x8b\xa0\x13\x83\x2c\xd6\xf5\x02\xc9\x9b\xa4\x00\x39\xd0\x15\xee\x1c\xe8\x6a\xd8\xa2\x20\x05\x1c\x59\x63\x32\xaf\xe6\xd2\xd5\x7c\x0b\x58\x27\xf3\x1f\xaa\xea\x4a\x45\xa1\x5c\x54\xd1\x2b\x43\xd1\x6f\x50\xa7\xdc\x3e\xfe\xb8\xfd\xf2\xb0\xf3\xe7\x7f\x77\x7e\xf9\xb4\xf3\x87\x57\xbd\x27\xbf\xf9\xcf\xf6\x5f\x8a\x5a\xd8\x37\xd8\xd2\x53\x4a\x32\x71\x8b\xc4\xa4\x37\xe9\xa0\x9b\x55\xe5\xcb\x6e\x25\x94\xed\xac\x05\x8a\x1d\xe1\x94\xbb\x4f\x7e\xdb\x3d\x38\x99\xbe\x3c\xe9\x8f\x9b\x90\xd5\x06\x56\x97\x73\x5a\xd4\x13\xcf\x68\x03\xdb\x94\x74\x16\x39\x9c\x9a\xcc\xba\xbf\xff\xb2\xbb\xf7\x7d\xef\x8f\xcf\xdb\xaf\xff\x74\xfe\xf5\xef\xde\x7c\xf3\xa8\xb7\xbf\x13\x39\xd5\x79\xfa\xa2\x77\xf8\x28\x2d\x4c\xbe\x4d\x85\x08\x57\x1c\x5f\x52\xdc\x2d\x95\xbe\x41\xfd\x60\x3b\x90\xcc\x42\xe5\xee\x47\xcf\xda\xa7\x7f\x6f\x1f\x7f\xd2\x7e\xb9\xdf\xd9\x7d\xd6\x3e\x3d\x6d\x9f\x7d\xd6\x3e\x39\xe9\xfe\x6b\xe7\xfc\xe0\x9f\xed\xb3\xc3\xde\xfe\x4e\x34\xe9\x7f\xb7\x1f\x17\xb5\x70\x86\xa9\x6b\xa5\x01\xb1\x37\x26\xa0\xd9\xf4\xc1\x6c\xca\x05\x2a\xf7\xf6\xbe\xeb\x3c\xdf\x3d\x7f\x7c\xd4\x3e\xfd\x7e\x7a\x91\x44\x83\x27\x68\xa4\x6f\x74\x59\x22\x61\x47\x5c\x21\x41\xff\x02\x6a\x8c\xfa\x37\xaf\x3e\xed\xfc\xea\xcb\xee\xc1\x93\xf6\xf1\x76\xfb\xf8\xeb\xee\x67\x1f\xf5\xf6\x77\xce\x1f\x1f\xf5\x8e\xfe\xd1\x39\xf8\xb6\xf3\xc5\x76\xaa\xa6\x62\x37\x5a\x08\x2c\xee\xd3\x8a\x60\xd6\x44\x9d\xc4\xd6\x35\xb3\x4c\xe2\x71\xcd\x16\xcb\xcd\xa4\x8d\x7b\xd4\xf7\x5b\xae\x67\x85\xc5\xd1\x6c\xca\x68\x0c\xa0\xca\x9d\x6f\x7e\xdd\x3b\x7c\x34\xbd\x2c\x86\x23\x27\x28\x63\x64\x17\xf1\x3f\x7a\x4f\xe0\x3f\x5a\xc4\xf4\xdf\x24\xa3\x48\x5c\x67\xa7\x5d\xb8\x03\xf3\x83\x8a\xcd\x65\xda\xe5\x1a\x2a\xb7\x5f\x7f\xd1\x79\xfe\x79\xd6\xe5\x97\x5a\xdb\xb4\x9f\xdc\xfd\xc7\x7e\xa1\x15\x7e\xb8\x6b\xc3\xdb\xfb\xf0\xd3\x7d\x74\xf3\xff\xbf\x00\x00\x00\xff\xff\xc1\x44\xbb\x8e\x2d\x18\x00\x00")

func includesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesIndexHtml,
		"includes/index.html",
	)
}

func includesIndexHtml() (*asset, error) {
	bytes, err := includesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/index.html", size: 6189, mode: os.FileMode(420), modTime: time.Unix(1504777115, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesLoginHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xbf\xaa\xd5\x40\x10\x87\xfb\x3c\xc5\x38\x7d\x0c\xdc\x7a\xb3\x56\xf6\x82\x4f\xb0\xc9\x4e\x92\xc5\xcd\x6e\xee\xec\xe6\x5e\x0f\x21\xa5\x82\x20\x78\x3b\x15\x2c\xb4\x10\xac\xb5\x50\x10\xf1\x65\x3c\x47\x1f\x43\x92\x93\x9c\x28\xf7\x68\x95\xfd\x33\xbf\x6f\xbf\x09\x33\x0c\xa0\xa9\x32\x8e\x00\xa3\x89\x96\x70\x1c\x7f\xbe\xfe\xba\x7f\xf2\x7e\x18\x80\x9c\x86\x71\x4c\x92\x3f\x6a\x4a\xef\x22\xb9\x88\xd3\xb9\xd0\xe6\x0a\x4a\xab\x42\xc8\xe7\x73\x65\x1c\x31\xca\x24\x01\x10\x95\xe7\x76\xbd\x9b\xd6\x69\x30\xb5\x33\x0e\x41\x95\xd1\x78\x97\x23\x42\x4b\xb1\xf1\x3a\xc7\xce\x87\x88\x32\x01\x00\x10\xcd\xc5\x99\x50\xda\x90\xd2\xc6\xd5\x28\x8f\x66\x22\x6b\x2e\x8e\xf5\xc3\x00\xa6\x82\xbb\xc4\xec\x79\x32\x9a\x19\xdd\x8a\x88\xf4\x38\xa6\x5a\xb9\x7a\xb2\x1a\x86\xad\x4e\x64\xdd\x29\xbf\xf4\x38\x27\xad\x2a\xc8\x42\xe5\x39\x47\xe3\xba\x3e\xde\x6f\x95\xb1\xb8\xe2\x02\xa7\xde\xd9\x1d\xca\xf9\x18\x94\xd6\x4c\x21\x88\x6c\x4e\x2d\xfe\x73\x0c\xe2\xae\xa3\x1c\xe9\x98\x76\xaa\xdd\x36\x46\x9f\x45\xcf\xcd\x4e\xbf\x90\xbd\x45\xe8\xac\x2a\xa9\xf1\x56\x13\xe7\xf8\xd7\x63\x08\x4c\x97\xbd\x61\xd2\xa0\xfa\xe8\x2b\x5f\xf6\x41\x9e\x77\x7f\xa0\x42\xb8\xf6\xac\x6f\xeb\xaf\x37\xff\x36\xef\x4e\xd9\xa3\xfc\xb6\x3f\xf9\xdf\xc2\xff\xa7\x85\xad\x76\xb5\x5f\xde\x2c\xfa\x18\xbd\x5b\x09\x45\x74\x50\x44\x97\xda\x7a\xfe\x74\x6c\x5a\xc5\xbb\x79\x5d\x58\x5f\x3e\xc2\xc5\x2e\xf4\x45\x6b\xe2\x36\x0c\x47\xca\x82\xec\xe4\x8f\x6f\x6f\x7f\x7d\x7f\x75\xf8\xf8\xee\xf0\xe6\xd9\xfe\xcb\xcd\xfe\xc5\xe7\xfd\xcd\xcb\x7b\x20\x14\x34\x4c\x55\x8e\xd9\x35\x15\x19\x53\x6d\x42\x24\x9e\xa6\xe2\xb2\x27\xde\x3d\x8c\x6c\x5c\x0d\xe3\x88\xf2\xf0\xe9\xc3\xfe\xe9\x73\x91\xa9\x09\x29\xb2\xa9\x31\x99\x24\x22\xd3\xe6\x4a\x82\xb8\x93\xa6\x90\x9d\xa6\x1d\xd2\x54\x26\xdb\x14\xfd\x0e\x00\x00\xff\xff\xb4\xe6\x34\x1e\x4d\x03\x00\x00")

func includesLoginHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesLoginHtml,
		"includes/login.html",
	)
}

func includesLoginHtml() (*asset, error) {
	bytes, err := includesLoginHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/login.html", size: 845, mode: os.FileMode(420), modTime: time.Unix(1503999442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesNew_clientHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x4d\x8b\xd4\x40\x10\x3d\xcf\xfc\x8a\xa2\xee\x49\xfe\x40\x92\x9b\xa0\x07\x3f\xd8\xd5\xf3\x92\xa4\x6b\x76\x1b\x7a\xba\x43\x77\x65\xd7\x25\x06\x04\x3d\x8c\x07\xd1\xc3\x7a\x71\x57\x11\x2f\x0a\x82\xce\x4d\x58\xf7\xef\xf4\x8c\x3f\x43\x92\xcc\x30\xc9\xa2\x20\xba\x39\xa5\xaa\x5f\xbd\x7e\xf5\x1e\x5d\xd7\x20\x68\x26\x35\x01\xb2\x64\x45\xd8\x34\x7e\x71\xee\x7f\x5c\xfa\xaf\x1f\x57\x8b\xef\xeb\x2f\xdf\xea\x1a\x48\x0b\x68\x9a\xe9\x74\x00\x2e\x8c\x66\xd2\x8c\x5d\x1f\x00\x20\x16\xf2\x18\x0a\x95\x39\x97\x60\x69\xcd\x4c\x2a\x0a\xb6\xa0\xb4\x43\x4c\xe2\x99\xb1\x73\x98\x13\x1f\x19\x91\xe0\x83\xfb\xfb\x0f\x11\xb2\x82\xa5\xd1\x09\x46\x27\x94\x47\x85\x92\xa4\xd9\x6d\xf1\x93\x21\x67\x3b\x1b\x1c\x5a\x53\x95\x50\xd7\x10\xb6\x65\x78\xcb\x5a\x63\xf7\x39\xe3\xca\x01\xde\xcb\xe6\xd4\xca\xc1\x74\x3a\x81\xc1\x17\xab\x2c\x27\xb5\xa5\x69\x25\x59\xa3\x82\xae\x89\x30\x33\x36\xc1\xfe\xda\x03\xdd\x12\xa4\xfe\xf5\xcb\xf5\xa7\x65\x1c\x75\x80\xeb\x54\x52\x97\x15\x03\x9f\x96\x94\x20\xd3\x63\xc6\x91\xba\x0d\x37\x82\x14\x63\x52\xc8\xac\xcc\x02\x41\xae\xb0\x32\x27\x91\x9f\x26\xd8\xf6\x6f\x93\x2a\x11\xda\xbf\xbe\x46\x28\x55\x56\xd0\x91\x51\x82\x6c\x82\xfe\xf2\x6c\x7d\xf6\xb9\xd7\x13\x86\xe1\xf5\xbd\xc6\x2e\xdc\x75\x87\x5b\x0b\x9e\x80\xcd\x4e\x9a\x66\x87\x8e\x23\x21\x8f\xff\xc9\xd3\x3d\x12\xd2\x52\xc1\x8f\xf6\xee\xfc\x97\xb5\x76\xc3\x73\x50\x59\x89\xa9\x3f\x7f\xff\x73\xf9\xcc\x5f\x2c\xfd\xbb\xa7\x37\x66\xf4\xe8\x8a\xdf\x18\x3e\x3c\x1f\x1a\x3f\x9e\x1b\x05\xb0\xba\x78\xb1\x7a\xb3\x58\xbf\x7d\x0e\xab\x0f\x57\xfe\xea\xd5\xdf\x85\x30\xf2\xec\x0f\x59\x40\x57\x4f\x47\x2b\xe7\x15\xb3\xd1\x9b\x9d\x5d\x95\xcf\xe5\x6e\xeb\x9c\x35\xe4\xac\x03\x57\x15\x05\x39\x87\x69\xff\x46\xe3\xa8\x1f\x4a\xa7\x3b\xfa\x56\x4d\x5f\x6f\x62\xdf\xbd\xdf\x5f\x01\x00\x00\xff\xff\x67\x33\xe1\x1c\xec\x03\x00\x00")

func includesNew_clientHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesNew_clientHtml,
		"includes/new_client.html",
	)
}

func includesNew_clientHtml() (*asset, error) {
	bytes, err := includesNew_clientHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/new_client.html", size: 1004, mode: os.FileMode(420), modTime: time.Unix(1504768597, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesRegisterHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xb1\x8e\xd5\x3c\x10\x85\xfb\x3c\xc5\xfc\xd3\xe7\x8f\xb4\xb5\x63\x2a\x7a\x24\x9e\xc0\x89\x27\x89\x85\x63\x67\xed\xc9\x2e\x57\x51\x4a\xb6\x42\xa2\xe6\x01\x90\xa8\xa1\x40\x62\x5f\x87\xcb\xbe\x06\x8a\x93\xdc\x80\xf6\x42\x15\x7b\x66\xce\xf1\x37\xd1\x99\x26\xd0\xd4\x18\x47\x80\x6c\xd8\x12\xce\xf3\xcf\xaf\x9f\xcf\x0f\xef\xa7\x09\xc8\x69\x98\xe7\x2c\xfb\x6d\xa6\xf6\x8e\xc9\x31\x2e\x75\xa1\xcd\x1d\xd4\x56\xc5\x58\xa6\xba\x32\x8e\x02\xca\x2c\x03\x10\x8d\x0f\xfd\xde\x5b\xce\x79\x34\xad\x33\x0e\x41\xd5\x6c\xbc\x2b\x11\xa1\x27\xee\xbc\x2e\x71\xf0\x91\x51\x66\x00\x00\xa2\xbb\xb9\x22\xca\x3b\x52\xda\xb8\x16\xe5\x4a\x26\x8a\xee\x66\x9d\x9f\x26\x30\x0d\xfc\x4f\x21\xf8\xb0\x10\x25\x8f\x61\xb7\x60\x7a\xcb\xb9\x56\xae\x5d\xa8\xa6\xe9\x98\x13\xc5\x70\xd1\x6f\x3b\x26\xa5\x55\x15\x59\x68\x7c\x28\xd1\xb8\x61\xe4\x97\xbd\x32\x16\x77\xbb\x18\x72\xef\xec\x09\x65\x2a\x83\xd2\x3a\x50\x8c\xa2\x48\xaa\x8d\x3f\xc9\x80\x4f\x03\x95\x48\xab\xda\xa9\xfe\xb8\x18\x7d\xd5\x3a\x2d\xbb\xfc\xc2\xe0\x2d\xc2\x60\x55\x4d\x9d\xb7\x9a\x42\x89\x7f\x3c\x86\x10\xe8\x76\x34\x81\x34\xa8\x91\x7d\xe3\xeb\x31\xca\xeb\xec\xaf\x54\x8c\xf7\x3e\xe8\xe7\xf8\x7b\xe7\xef\xe4\xc3\x45\xbb\xc2\x1f\xf7\x0b\xff\x33\xfb\x7f\xac\x70\xcc\xee\xf4\xdb\x9b\xd5\xc8\xec\xdd\xee\x50\xb1\x83\x8a\x5d\x6e\xdb\xf4\x19\x82\xe9\x55\x38\xa5\x73\x65\x7d\xfd\x06\x37\xba\x38\x56\xbd\xe1\x23\x0c\xab\xcb\x66\x39\xc8\xf3\xb7\x2f\x4f\x8f\x1f\xd6\xe6\x8f\xef\x0f\x2f\x40\x28\xe8\x02\x35\x25\x16\xf7\x54\x15\xd6\xb7\xc6\x2d\x61\xb8\x1d\x29\x9c\x5e\x73\x30\xae\x85\x79\x46\xf9\xf4\xf1\xf1\xfc\xee\x93\x28\xd4\xe2\x24\x8a\x65\x1f\x99\x65\xa2\xd0\xe6\x4e\x82\xf8\x2f\xcf\xa1\xb8\x84\x1c\xf2\x5c\x66\x47\x78\x7e\x05\x00\x00\xff\xff\xdc\x4f\x27\xe6\x44\x03\x00\x00")

func includesRegisterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesRegisterHtml,
		"includes/register.html",
	)
}

func includesRegisterHtml() (*asset, error) {
	bytes, err := includesRegisterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/register.html", size: 836, mode: os.FileMode(420), modTime: time.Unix(1503999402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutsInsideHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x41\x6f\x1b\xc5\x17\xbf\xe7\x53\xbc\x4c\xa5\xff\xe5\xcf\xee\xe2\xa6\x69\x52\xd8\xb5\x94\x26\x2e\x6d\xd4\x2a\x69\x1d\x52\xa0\xea\x61\xbc\xf3\x76\x77\xdc\xd9\x99\xcd\xce\xac\x63\x63\x59\x02\x55\x08\x72\xa8\x80\x0b\xa8\x52\x7b\xe0\x8e\x04\x37\xa0\x08\xf1\x65\x1a\x17\xbe\x05\x1a\xef\xae\xbd\x71\x5d\xa9\x1c\xf0\xc5\x7e\xef\xcd\xbc\xf9\xbd\xdf\x9b\xf9\x3d\x8f\xc7\xc0\x30\xe2\x12\x81\xf4\xa8\x46\x02\x93\xc9\x9a\xbf\xbe\x77\xb0\x7b\xf4\xf1\x61\x07\x12\x93\x8a\xf6\x9a\x6f\xbf\x40\x50\x19\x07\x04\x25\xb1\x0e\xa4\xac\xbd\x06\xe0\xa7\x68\x28\x84\x09\xcd\x35\x9a\x80\x14\x26\x72\xb6\xc9\x22\x90\x18\x93\x39\x78\x52\xf0\x41\x40\x3e\x72\x3e\xdc\x71\x76\x55\x9a\x51\xc3\x7b\x02\x09\x84\x4a\x1a\x94\x26\x20\xb7\x3a\x01\xb2\x18\x1b\xfb\x24\x4d\x31\x20\x03\x8e\xa7\x99\xca\x4d\x63\xe9\x29\x67\x26\x09\x18\x0e\x78\x88\xce\xcc\x78\x07\xb8\xe4\x86\x53\xe1\xe8\x90\x0a\x0c\x5a\xa4\xbd\x66\xf3\x18\x6e\x04\xb6\xc7\x63\x30\x98\x66\x82\x1a\x04\x32\x73\x11\x70\x61\x32\xf1\xbd\x32\x6e\x57\x0a\x2e\x1f\x41\x8e\x22\x20\x3a\x51\xb9\x09\x0b\x03\x3c\x54\x92\x40\x92\x63\x14\x10\x2f\xa2\x03\x6b\xbb\x3c\x54\x55\xee\x75\xc7\x81\xeb\x4a\x19\x6d\x72\x9a\x41\xa8\x72\x84\xdd\x6e\x17\x1c\x67\x39\x9f\x19\x09\xd4\x09\xa2\xa9\x93\x59\x42\xf4\x7b\x9e\x97\xd2\x61\xc8\xa4\xdb\xab\x93\x58\x23\x54\xa9\x37\x77\x78\x1b\xee\x86\x7b\xd5\x0b\xb5\x5e\xf8\xdc\x94\x4b\x37\xd4\x9a\x00\x97\x06\xe3\x9c\x9b\x91\xc5\x4c\x37\xb6\xaf\x38\xad\x93\xed\xf4\x68\xff\x60\xa7\x3b\xdc\xee\xb7\x76\x8a\xff\xd3\xcd\xfb\x7b\xc7\xf2\x90\x5f\x16\x8f\x6e\x44\xa7\xa7\x9d\x1d\xba\x9d\xec\xed\xb1\xfe\x27\x22\xbb\x8d\xf1\x30\xe9\x1f\xdf\xe9\xb4\xa2\xb8\x7f\xff\xf0\x83\xf4\xd1\xa7\x7a\x8b\x40\x98\x2b\xad\x55\xce\x63\x2e\x03\x42\xa5\x92\xa3\x54\x15\xba\x51\xf1\x6e\xa1\x8d\x4a\x5f\xab\xb4\x62\xc9\x22\xe5\x52\x73\x86\x25\xc4\x65\x02\xda\x4b\x69\xca\x10\x44\x2a\x07\x93\x70\xbd\x68\x53\x99\xfb\x42\xe3\xec\x39\xba\x6c\xdc\x1c\xcd\xcd\xa3\x3b\xb7\x37\x41\x27\x3c\x05\x2a\x19\xdc\x43\x9d\x29\xc9\xdc\x7e\x99\xf2\x56\x67\x1b\x74\x91\xd9\xdb\x03\x2a\xaa\x16\xa3\xc0\x14\xa5\xd1\xb3\x0d\x29\x32\x4e\xe1\xa4\xc0\x9c\xa3\xae\x0b\x5a\x77\x9c\x07\x3c\x02\x61\xe0\x56\x07\xae\x3d\xb4\x3e\x00\x5f\x87\x39\xcf\x0c\xe8\x3c\x5c\x34\x50\x69\xed\x56\x4d\xb4\x7d\xb3\x0f\x64\x53\x27\x7c\xe0\x6d\xb8\x5b\xee\xe5\x85\x3d\xeb\x59\x5f\x93\xb6\xef\x95\x69\xde\x3e\x67\x5e\x96\xe4\xb5\xdc\x2b\xee\xe5\xda\x5a\x99\xcf\x5f\x7f\x80\x92\xf1\xe8\xa1\x2d\xa3\x26\xa8\x7f\xb7\xc0\x7c\x54\x57\xb6\xea\x3c\xda\xa7\x43\x37\x56\x2a\x16\x48\x33\xae\x67\x87\x5a\x9f\x27\x78\x4f\x7b\x7d\xcb\xcd\xc8\x6b\xb9\xad\x96\xbb\x51\x59\x2b\x4e\xf7\xbd\x52\x0b\xfc\x9e\x62\xa3\x79\x93\x6f\xf0\x21\x32\x90\x74\xd0\xa3\x79\x0d\x41\xd2\x01\x84\x82\x6a\x1d\x90\x2a\x50\x7e\x39\x0c\x23\x5a\x08\x53\x9b\x91\xdd\xeb\x18\x95\x91\x8a\x2b\xc6\xe7\x1b\xad\x10\x50\x2e\x31\xaf\x62\x17\xa3\x55\x02\x0b\xa8\xb1\x02\xc0\xef\x15\xc6\x28\x09\x66\x94\x61\x40\x4a\x83\x2c\x6d\x32\x2a\x8e\x05\x42\xa8\x84\xa0\x99\x46\x46\x80\x51\x43\x2b\xb7\x3d\xb8\xf4\xd7\x6e\x9a\xc7\x56\xf0\x2e\x95\xbb\x09\xd0\x9c\x53\x07\x87\x19\x95\x0c\x59\x40\x22\x2a\xec\xda\x99\xd7\x62\xce\x95\x98\x1f\xd5\x00\x66\x1b\x93\x51\x59\x43\xd1\xb9\xa3\xa4\x18\x91\xf6\x51\x09\x46\xd2\x01\x8f\xa9\xe1\x4a\xfa\x9e\x5d\xf7\xc6\x8d\x56\x9f\x9c\x59\xea\xff\x7e\xa1\xef\x95\x04\x36\x3c\x74\x89\xcb\x5e\x4e\x25\xab\x25\xef\x12\x69\x4f\x9f\xfc\x32\x7d\xfe\xf3\xf4\xe9\x8b\xbf\x1e\xff\xf1\xf2\xc5\xb7\xbe\x47\xe7\xdd\xf3\x18\x1f\x5c\x68\x25\x67\x73\x9e\x16\x4d\x2f\xb9\xaf\x2f\xc8\xbc\x17\x0d\x08\x85\x68\x60\xa8\x17\x36\x7e\xe6\x3c\x4e\xcc\x45\xe6\x05\x6f\xfb\xb4\x96\xaf\x53\xec\x79\x42\xc5\xaa\x30\xe3\x31\xb8\xb3\xcb\xde\x35\x39\x97\x31\x4c\x26\xa4\xfd\xea\xe9\xef\xe7\x5f\xbe\xb0\xb8\x7d\x4f\xf0\x26\x17\x85\xb8\x58\x8a\xbd\xfd\x9e\x2b\xe9\x60\x8e\xb2\xba\xfe\x8d\x5a\x7d\x4f\xd2\x41\x63\x92\x60\xcc\x25\x64\x34\xc6\x7a\xce\xad\xd2\xc0\x2a\xb4\xa4\x82\xe5\x3b\x8b\x94\x32\x38\x7f\x67\x95\x55\xd1\x51\x5a\x6f\xf7\x94\xb2\x3a\x66\x70\x68\x9c\xb4\x30\xc8\x48\xfb\x7f\xa1\xca\x46\xef\x4f\x7f\xfb\xee\xfc\xc9\xf7\x65\x23\x5f\xfe\xf9\xc3\xf4\xf3\x9f\xa6\xcf\xce\xfe\x7e\xfa\xcd\xf9\x17\x3f\x9e\x7f\xfd\xeb\xab\xb3\xaf\xa6\xcf\x1f\x4f\xcf\x3e\x9b\x3e\x3b\x73\x7d\x2f\x7b\xad\xe0\x12\xc5\x1b\xa7\xe7\x3e\x1d\xd0\xee\x4c\x50\xd6\x00\x82\x7f\xfd\x69\xc8\x37\x1c\x0a\x1a\x22\x03\x6a\xc0\x24\x08\x28\x99\xd5\x7f\xfb\x93\xa9\xb0\xb0\xf2\x0f\x5a\xcd\x6c\x4b\xb8\x06\xa1\x28\x83\x88\xea\x06\x7f\xab\xa4\xf2\x6d\xe7\x75\x7f\x79\x5c\xf7\x57\x4e\xeb\x77\xd3\x6e\x6f\x7f\xaf\x73\x93\x53\x11\xa5\xc5\xf5\xeb\x77\x0f\xaf\xee\x5c\xb9\x9b\x67\xf9\xc9\xe6\xc1\x71\x74\x7f\x63\xeb\xf0\xde\xbd\x8d\xfe\x66\xe7\xf6\xc9\x50\xeb\xd6\xe8\xf8\xe4\xc0\x48\xcc\xe4\xcd\xe3\xc3\x6b\x74\x7f\x6b\xd8\x7d\xf3\xb4\x5e\x08\xf3\xf2\xbc\x9d\xb9\xf5\xaa\xab\x55\x85\xaa\xab\xe5\x7b\xa5\x92\xfb\x5e\xf9\xe7\x6f\x3c\x9e\xb1\x38\x99\xac\x35\xfe\x2a\x56\x13\x79\x32\x59\x19\x9d\x27\x6c\xc6\xff\x09\x00\x00\xff\xff\x4f\xc0\xcb\x96\x69\x0a\x00\x00")

func layoutsInsideHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutsInsideHtml,
		"layouts/inside.html",
	)
}

func layoutsInsideHtml() (*asset, error) {
	bytes, err := layoutsInsideHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layouts/inside.html", size: 2665, mode: os.FileMode(420), modTime: time.Unix(1505127806, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutsOutsideHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x5f\x73\xea\xb6\x13\x7d\xe7\x53\x6c\xf4\xfa\xfb\xd9\x2e\x21\xb9\xe1\x76\x6c\x66\x48\xa0\x4d\x32\xb9\x13\x12\x52\xd2\xf6\xce\x7d\x10\xf6\xda\x96\x23\x4b\x46\x2b\x13\x28\xc3\x77\xef\x08\x43\xa0\x94\x76\x6e\xfd\x62\xef\xae\x74\xf6\xcf\xd1\xb1\x56\x2b\x48\x30\x15\x0a\x81\x4d\x39\x21\x83\xf5\xba\x15\x9e\x0d\x1e\x6f\x5e\x7e\x1b\x0d\x21\xb7\xa5\xec\xb5\x42\xf7\x02\xc9\x55\x16\x31\x54\xcc\x39\x90\x27\xbd\x16\x40\x58\xa2\xe5\x10\xe7\xdc\x10\xda\x88\xd5\x36\xf5\xba\x6c\x1f\xc8\xad\xad\x3c\x9c\xd5\x62\x1e\xb1\x5f\xbd\x5f\xfa\xde\x8d\x2e\x2b\x6e\xc5\x54\x22\x83\x58\x2b\x8b\xca\x46\xec\x6e\x18\x61\x92\xe1\xc1\x3e\xc5\x4b\x8c\xd8\x5c\xe0\x7b\xa5\x8d\x3d\x58\xfa\x2e\x12\x9b\x47\x09\xce\x45\x8c\xde\xc6\xf8\x3f\x08\x25\xac\xe0\xd2\xa3\x98\x4b\x8c\xda\xac\xd7\x72\x38\x56\x58\x89\xbd\xd5\x0a\x2c\x96\x95\xe4\x16\x81\x6d\x5c\x0c\x7c\x58\xaf\xc3\xa0\x89\xbb\x95\x52\xa8\x37\x30\x28\x23\x46\xb9\x36\x36\xae\x2d\x88\x58\x2b\x06\xb9\xc1\x34\x62\x41\xca\xe7\xce\xf6\x45\xac\xb7\xd8\x67\x9e\x07\xd7\x5a\x5b\xb2\x86\x57\x10\x6b\x83\x70\x33\x1e\x83\xe7\x1d\xe3\xd9\xa5\x44\xca\x11\xed\x0e\xcc\x0d\x84\x7e\x0c\x82\x92\x2f\xe2\x44\xf9\xd3\x1d\x88\x33\x62\x5d\x06\x1f\x8e\xa0\xe3\x77\xfc\x4f\x41\x4c\xb4\xf7\xf9\xa5\x50\x7e\x4c\xc4\x40\x28\x8b\x99\x11\x76\xe9\x6a\xe6\x9d\xee\x85\xd7\x9e\x75\xcb\x97\xfb\xc7\xfe\x78\xd1\x2d\xda\xfd\xfa\x7f\xfc\xf2\x75\x30\x51\x23\x71\x2e\xdf\x7e\x4a\xdf\xdf\x87\x7d\xde\xcd\x07\x83\xa4\xf8\x5d\x56\x0f\x98\x2d\xf2\x62\xf2\x65\xd8\x4e\xb3\xe2\x75\xf4\x73\xf9\xf6\x07\x5d\x31\x88\x8d\x26\xd2\x46\x64\x42\x45\x8c\x2b\xad\x96\xa5\xae\xe9\xa0\xe3\x9b\x9a\xac\x2e\xff\xd6\xe9\x76\x4a\xae\x52\x5d\x5b\x12\x09\x36\x35\x1e\x4f\xa0\x77\x84\xd3\x84\x20\xd5\x06\x6c\x2e\x68\xcf\x53\x03\xfe\x17\xe6\x5c\x22\x6a\x98\xfb\x28\xe7\xf6\xe5\xcb\xc3\x25\x50\x2e\x4a\xe0\x2a\x81\x67\xa4\x4a\xab\xc4\x2f\x1a\xc8\xbb\x61\x17\xa8\xae\xdc\xf1\x01\x9d\x6e\x17\xa3\xc4\x12\x95\xa5\xcd\x86\x12\x13\xc1\x61\x56\xa3\x11\x48\xbb\x8e\xce\x3c\xef\xab\x48\x41\x5a\xb8\x1b\xc2\xe7\x6f\xce\x07\x10\x52\x6c\x44\x65\x81\x4c\xbc\x67\x50\x13\xf9\x5b\x16\x1d\x71\x4e\x21\x97\x94\x8b\x79\xd0\xf1\xaf\xfc\xf3\xbd\xbd\x21\xad\x20\xd6\x0b\x83\x06\xe6\xfb\x31\x4d\xd3\x52\xd0\xf6\x2f\xfc\xf3\x9d\x75\x12\x2f\x3c\xfb\x8a\x2a\x11\xe9\x37\xd7\xc6\x6e\x40\xc5\x53\x8d\x66\xb9\xeb\xec\x54\x3e\x5e\xf0\x85\x9f\x69\x9d\x49\xe4\x95\xa0\x4d\x52\xe7\x0b\xa4\x98\x52\x50\xb8\xd9\x2c\x83\xb6\xdf\x6e\xfb\x9d\xad\x75\x22\x7b\x18\x34\x3f\x83\x70\xaa\x93\xe5\x07\xc9\xd7\x98\x09\x05\x15\xcf\x70\x27\xde\x53\xbc\x6e\x43\x47\xcc\x1e\x49\xeb\x9e\xcf\xf9\x78\x93\xac\x05\x10\xfd\xe7\xe7\x80\x5a\x18\x49\x1e\x63\x02\xdc\x82\xcd\x11\x50\x25\xee\x6c\xb8\xcf\x44\xc7\xb5\x3b\x1a\x40\x7a\x63\xbb\xc2\x09\xa4\xe6\x09\xa4\x9c\x2c\x9a\x7f\x1b\xe3\xf7\x8a\xb9\x38\xd6\x72\x71\x52\xca\x3f\x94\xe3\xe9\xfd\x60\x78\x2b\xb8\x4c\xcb\xfa\xfa\xfa\x69\xf4\xa9\x7f\xf1\x64\x2a\x33\xbb\x7c\x9c\xa4\xaf\x9d\xab\xd1\xf3\x73\xa7\xb8\x1c\x3e\xcc\x16\x44\xed\xe5\x64\xf6\x68\x15\x56\xea\x76\x32\xfa\xcc\xef\xaf\x16\xe3\x7f\x96\xf2\x9e\xb4\x63\x2d\x6e\xdc\x74\x8a\xa2\x6d\x68\x4b\x51\x18\x34\x2c\x87\x41\x73\x33\xac\x56\x9b\x29\xae\xd7\xad\x83\x7b\x64\xab\xd6\xf5\xfa\x64\xf4\x03\xf0\x30\xfe\x67\x00\x00\x00\xff\xff\x5d\xf0\x72\xfc\x86\x06\x00\x00")

func layoutsOutsideHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutsOutsideHtml,
		"layouts/outside.html",
	)
}

func layoutsOutsideHtml() (*asset, error) {
	bytes, err := layoutsOutsideHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layouts/outside.html", size: 1670, mode: os.FileMode(420), modTime: time.Unix(1505127811, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutsProfileHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x5b\x6f\x1c\x49\x15\x7e\x9f\x5f\x71\xd2\x59\xe1\x19\xb1\xdd\xcd\xc4\xf1\xc6\x21\xdd\x23\xf9\x32\x21\x8e\x92\xd8\xf1\xd8\x0e\xb0\xda\x87\x9a\xee\xea\x9e\x9a\x54\x57\xb5\xab\xaa\xe7\xc2\x68\x24\xd0\x0a\x41\x90\x56\xbb\x48\x2b\x50\xa4\xdd\x07\xde\x40\x42\xc0\xdb\x2e\x41\x88\x3f\x13\x4f\xe0\x5f\xa0\xea\xcb\x4c\xcf\xcd\xb1\xb1\x58\x3f\x78\xba\x4e\x9d\xf3\xd5\x39\xdf\x39\x75\x1d\x8d\xc0\xc7\x01\x61\x18\x8c\x36\x92\xd8\x80\xf1\xb8\xe2\xdc\xda\x3f\xdc\x3b\xf9\xc9\x51\x13\x3a\x2a\xa2\x8d\x8a\xa3\x7f\x80\x22\x16\xba\x06\x66\x86\x16\x60\xe4\x37\x2a\x00\x4e\x84\x15\x02\xaf\x83\x84\xc4\xca\x35\x12\x15\x98\xdb\xc6\xac\xa3\xa3\x54\x6c\xe2\xf3\x84\xf4\x5c\xe3\xc7\xe6\xe9\x8e\xb9\xc7\xa3\x18\x29\xd2\xa6\xd8\x00\x8f\x33\x85\x99\x72\x8d\x83\xa6\x8b\xfd\x10\x97\xec\x18\x8a\xb0\x6b\xf4\x08\xee\xc7\x5c\xa8\x92\x6a\x9f\xf8\xaa\xe3\xfa\xb8\x47\x3c\x6c\xa6\x8d\x0f\x81\x30\xa2\x08\xa2\xa6\xf4\x10\xc5\x6e\xdd\x68\x54\x34\x8e\x22\x8a\xe2\xc6\x68\x04\x0a\x47\x31\x45\x0a\x83\x91\x8a\x0c\xb0\x60\x3c\x76\xec\xac\x5f\x6b\x52\xc2\x5e\x82\xc0\xd4\x35\x64\x87\x0b\xe5\x25\x0a\x88\xc7\x99\x01\x1d\x81\x03\xd7\xb0\x03\xd4\xd3\x6d\x8b\x78\x3c\xc7\xbe\x65\x9a\xb0\xcb\xb9\x92\x4a\xa0\x18\x3c\x2e\x30\xec\xb5\x5a\x60\x9a\x8b\x78\x6a\x48\xb1\xec\x60\xac\x0a\x30\x4d\x88\xfc\xa1\x6d\x47\x68\xe0\xf9\xcc\x6a\x17\x20\xba\xe1\xf1\xc8\x9e\x0a\xec\x4d\x6b\xd3\xfa\xc8\xf6\xa4\x9c\xc9\xac\x88\x30\xcb\x93\xd2\x00\xc2\x14\x0e\x05\x51\x43\xed\x33\xda\xdc\xbe\x6b\xd6\xcf\xb7\xa3\x93\xc7\x87\x3b\xad\xc1\x76\xb7\xbe\x93\x7c\x1f\x6d\xbd\xd8\x3f\x63\x47\xe4\x0e\x7d\xf9\x30\xe8\xf7\x9b\x3b\x68\xbb\xb3\xbf\xef\x77\x7f\x4a\xe3\x27\x38\x1c\x74\xba\x67\x4f\x9b\xf5\x20\xec\xbe\x38\xfa\x51\xf4\xf2\x67\xf2\x9e\x01\x9e\xe0\x52\x72\x41\x42\xc2\x5c\x03\x31\xce\x86\x11\x4f\x64\x29\xe2\xbd\x44\x2a\x1e\x2d\x45\x9a\xb3\xa4\x3d\x25\x4c\x12\x1f\x67\x2e\x2e\x12\xb0\x84\x93\xf5\x41\xc0\x05\xa8\x0e\x91\xb3\x3c\x65\xe0\x73\x99\xd3\x03\xc9\x2c\x73\x53\x98\x47\x27\x4f\x9f\x6c\x81\xec\x90\x08\x10\xf3\xe1\x18\xcb\x98\x33\xdf\xea\x66\x90\x07\xcd\x6d\x90\x49\xac\xcb\x07\x78\x90\x2b\x63\x8a\x23\xcc\x94\x4c\x0d\x22\xec\x13\x04\xe7\x09\x16\x04\xcb\x22\xa2\x5b\xa6\xf9\x31\x09\x80\x2a\x38\x68\xc2\xfd\x4f\xb4\x0c\xc0\x91\x9e\x20\xb1\x02\x29\xbc\x59\x06\xb9\x94\x56\x9e\x45\x9d\x38\x3d\x43\xb6\x64\x87\xf4\xec\x4d\xeb\x9e\x75\x67\xd6\x4e\x93\xd6\x95\x46\xc3\xb1\x33\x98\xab\x63\x8a\x2c\x24\xbb\x6e\xdd\xb5\xee\x14\xad\x95\x78\xce\xad\x8f\x31\xf3\x49\xf0\x89\x0e\xa3\x20\xa8\xfb\x3c\xc1\x62\x58\x44\xb6\x6a\x3c\xd4\x45\x03\x2b\xe4\x3c\xa4\x18\xc5\x44\xa6\x83\x6a\x99\x4d\x49\x5b\xda\x5d\xcd\xcd\xd0\xae\x5b\xf5\xba\xb5\x99\xb7\x56\x8c\xee\xd8\xd9\x62\xe0\xb4\xb9\x3f\x2c\x48\x84\x87\x64\x80\x7d\x60\xa8\xd7\x46\xa2\x70\x81\xa1\x1e\x78\x14\x49\xe9\x1a\x79\x47\xf6\x63\xfa\x38\x40\x09\x55\x45\x33\xd0\xb6\xa6\xe2\xb1\x91\x73\xe5\x93\xa9\xa1\x5e\x09\x10\x61\x58\xe4\x7d\xf3\xbd\x39\x80\x76\xa8\xa4\x01\xe0\xb4\x13\xa5\x38\x03\x35\x8c\xb1\x6b\x64\x0d\x63\xc1\x48\xf1\x30\xa4\x18\x3c\x4e\x29\x8a\x25\xf6\x0d\xf0\x91\x42\xb9\x58\x0f\x9c\xc9\x0b\x31\x12\xa1\x5e\xf1\x6e\x67\xd6\x06\x20\x41\x90\x89\x07\x31\x62\x3e\xf6\x5d\x23\x40\x54\xeb\xa6\x52\xed\xb3\xe0\x74\x3a\x54\xc9\x31\x9d\x98\x18\xb1\xc2\x15\x29\x4c\xce\xe8\xd0\x68\x9c\x64\xce\x30\xd4\x23\x21\x52\x84\x33\xc7\xd6\x7a\x6b\x0d\xf5\x02\x65\xa6\xd0\xff\x7f\x45\xc7\xce\x08\x2c\x49\xd0\x02\x97\x6d\x81\x98\x5f\xac\x79\xb7\x8d\xc6\xe4\xb3\x6f\x26\x5f\xff\x6d\xf2\xfa\xcd\xbf\x3f\xfd\xe7\xdb\x37\xbf\x75\x6c\x34\xcd\x9e\xed\x93\xde\x5c\x2a\x89\x3f\xe5\x69\x96\xf4\x8c\xfb\xa2\x40\xa6\xb9\x28\xb9\x90\xd0\x92\x0f\x85\x62\xe9\x53\x90\xb0\xa3\xe6\x99\xa7\xa4\xe1\xa0\x62\xfd\xea\xe3\xb6\x4d\x79\xc8\x13\x35\x1a\x81\x95\x16\x7b\x4b\x09\xc2\x42\x18\x8f\x8d\xc6\xbb\xd7\xff\xb8\xf8\xd5\x1b\xed\xb7\x63\x53\x52\xe6\x22\xa1\xf3\xa1\xe8\xea\xb7\x2d\x86\x7a\x53\x2f\xf3\xf2\x2f\xc5\xea\xd8\x0c\xf5\xb2\x89\x7a\xe5\xd2\x16\xbc\x0f\xb1\xe0\x01\xa1\x78\x3e\x8a\x39\x04\x6a\x46\xbe\xb9\x39\xa7\xb0\xa8\x94\x83\x98\x7a\xa9\x5e\x2c\xc6\xa9\xbe\x9e\xc2\xad\x83\xfd\xe6\xee\xce\x31\x9c\xb6\x9a\xc7\x47\x07\x7b\xd3\x30\xde\x0f\x9d\x48\x2c\x62\xe2\xad\x84\x4e\x6d\x48\x14\x66\x2b\x91\xe6\xda\x4b\x84\xc0\x4c\x9d\x4a\x2c\xac\x9d\x1e\x52\x48\x68\xca\xa7\x75\x18\x85\x66\xb6\xf4\x49\xd2\xd3\x33\x8a\x2a\xd7\x58\xed\x74\xb9\x94\x96\xa2\x69\x3e\xdb\xbf\x6a\x44\x8b\xc1\xc3\xc9\xc1\xc9\x93\xe6\x35\xe3\xcf\x0e\x1b\x6b\x19\xb8\xcc\xca\xd4\xc7\x9f\xb5\xa6\xfa\x6f\x91\x36\xfd\x4f\x1b\xe9\xfd\x71\xcd\x80\xeb\xc8\xc9\xe0\x48\x30\x0f\x78\xcc\x29\x5e\x8f\x75\xa9\xf3\x5d\xde\xbe\x96\xef\x7a\x28\xeb\xd9\x4d\x9c\xc7\xcc\x5f\x69\x7a\xbd\x82\xb8\x3c\xcb\xe5\x9a\xd8\x3d\x3d\x39\x39\x7c\xd6\xba\x66\x41\x64\x8b\xa6\x5c\x5f\x12\x97\xed\x51\x6d\xc5\xa0\xad\x98\x29\x13\xcf\xc3\x52\x66\xdf\x91\xd1\x78\xc8\x29\xe5\xfd\xe5\x15\xf9\x7f\x80\xf6\x11\x0b\xb1\x98\x22\x3f\xc5\x52\xa2\x10\x5f\x06\x7d\x75\x7e\xdf\xc3\x58\x99\xdc\xa7\xcd\x67\xa7\xd7\x64\x36\xc2\x2c\x59\x4f\xeb\xdc\xc6\x70\x69\x65\x3a\xe5\x95\x7d\x8d\x4a\x79\xbf\xb8\x14\x2c\xd5\x26\xc5\xd0\x21\x1d\xc6\x1d\xbd\xa5\xc2\xf4\x2b\x75\x5d\xef\xae\xef\x1d\xf4\xe2\xdb\x2f\x2e\x3e\xff\x06\x4a\xbb\xe6\xca\xc1\xec\xcb\xdd\xbf\x6e\x74\xb6\x47\x89\x3e\x2c\xdf\x30\x4a\x8f\xf2\xc4\xbf\x5a\x98\x6f\xbe\x7c\xf7\xe5\x1f\xbf\xcb\x30\x6f\xdf\x30\xb6\x80\xa2\xf0\x8a\x19\xfc\xcb\xc5\x6f\xfe\x74\x93\xd0\xca\x07\x8d\x79\xf9\xfb\xe6\xe0\x9a\x09\xb5\x64\xb8\x2c\x58\x3e\x59\xdc\x5f\x20\x2c\xbb\x09\xe3\x90\x30\x88\x51\x88\x8b\x7b\xfa\xd2\x70\x73\x97\xb9\x5c\x69\x76\x9d\x5b\xe9\x41\xe9\xb0\xa4\x3f\xa0\x52\x29\xae\x30\xd9\x2a\xa6\xf0\x40\xd9\x5d\xd4\x43\x99\x34\x75\xac\x1a\x24\xcc\xd3\xa7\x65\xd8\xf1\x14\xe9\xe1\x03\x85\xa3\x6a\x0d\x60\x94\x62\x7e\x50\xdd\xb0\x16\x97\x0d\xa0\xa4\x81\x36\x6a\x16\x46\x5e\x67\x6a\x5d\x25\x1f\x02\xaa\xe5\x56\x00\x3d\x24\x20\x46\xaa\x93\x6e\xb0\x2e\xf4\x09\xf3\x79\xdf\xa2\xdc\x4b\x0f\xe6\x56\xd1\xf5\x20\x57\x27\x01\x54\x67\xea\x2e\x7c\x50\x45\x35\x0b\x29\x25\xaa\x1b\xba\xea\x36\x6a\x33\x64\xc8\x3a\x63\xa4\x37\xc3\x6a\xcd\x42\xbe\xbf\xa7\xf9\xae\x6e\xa0\xd4\xff\x8d\x5a\x01\x9a\x6d\x6f\xe3\x5a\x45\xff\xab\xd6\x1e\x54\xe6\x6f\x7f\xd3\x0b\x57\xc0\xb9\xc2\xd3\x0b\x57\xde\xca\x73\x98\xb5\xae\x76\xa7\x8a\x8b\x3e\x4d\xb3\x19\x25\x0a\xfb\x46\xe3\x7b\x1e\x8f\x87\x0f\x26\x7f\xff\xdd\xc5\x67\xbf\xcf\x4e\xf4\x6f\xff\xf5\x87\xc9\x2f\xfe\x3a\xf9\xea\xd5\x7f\x5e\x7f\x71\xf1\xcb\x3f\x5f\x7c\xfe\xed\xbb\x57\xbf\x9e\x7c\xfd\xe9\xe4\xd5\xcf\x27\x5f\xbd\xb2\x1c\x3b\x5e\x3a\xf9\x66\x5e\xac\x7d\x47\x79\x8c\x7a\xa8\x95\x46\x56\x01\x70\xaf\xfd\x57\xba\xc7\xc3\x11\x45\x1e\xf6\x01\x29\x50\x1d\x0c\x98\xf9\xc0\x83\xf4\xd3\xe7\x5e\x12\xe9\x32\x95\x3c\x6d\xeb\xd2\x95\x40\x39\xf2\x21\x40\xb2\xc4\xdf\xaa\x3b\xf3\x55\x5f\x6e\xba\x8b\x0f\x37\xdd\x95\xef\x36\x3f\x88\x5a\xed\xc7\xfb\xcd\x47\x04\xd1\x20\x4a\x76\x77\x9f\x1f\x7d\xb4\x73\xf7\xb9\x88\xc5\xf9\xd6\xe1\x59\xf0\x62\xf3\xde\xd1\xf1\xf1\x66\x77\xab\xf9\xe4\x7c\x20\x65\x7d\x78\x76\x7e\xa8\x18\x8e\xd9\xa3\xb3\xa3\xfb\xe8\xf1\xbd\x41\x6b\xfd\xbb\xcd\xac\x42\x16\x1f\x5e\x52\xb1\x5c\xf5\xce\x92\x77\xe5\x53\xd3\xb1\xb3\x2b\xbd\x63\x67\xcf\x80\xa3\x51\xca\xe2\x78\x5c\x29\x3d\x1a\xe6\x4f\x33\xe3\xf1\xca\xde\x29\x60\xb9\xff\xbf\x01\x00\x00\xff\xff\x17\x61\x90\xe1\x73\x14\x00\x00")

func layoutsProfileHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutsProfileHtml,
		"layouts/profile.html",
	)
}

func layoutsProfileHtml() (*asset, error) {
	bytes, err := layoutsProfileHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layouts/profile.html", size: 5235, mode: os.FileMode(420), modTime: time.Unix(1505127813, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"includes/authorize.html": includesAuthorizeHtml,
	"includes/client_detail.html": includesClient_detailHtml,
	"includes/clients.html": includesClientsHtml,
	"includes/index.html": includesIndexHtml,
	"includes/login.html": includesLoginHtml,
	"includes/new_client.html": includesNew_clientHtml,
	"includes/register.html": includesRegisterHtml,
	"layouts/inside.html": layoutsInsideHtml,
	"layouts/outside.html": layoutsOutsideHtml,
	"layouts/profile.html": layoutsProfileHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"includes": &bintree{nil, map[string]*bintree{
		"authorize.html": &bintree{includesAuthorizeHtml, map[string]*bintree{}},
		"client_detail.html": &bintree{includesClient_detailHtml, map[string]*bintree{}},
		"clients.html": &bintree{includesClientsHtml, map[string]*bintree{}},
		"index.html": &bintree{includesIndexHtml, map[string]*bintree{}},
		"login.html": &bintree{includesLoginHtml, map[string]*bintree{}},
		"new_client.html": &bintree{includesNew_clientHtml, map[string]*bintree{}},
		"register.html": &bintree{includesRegisterHtml, map[string]*bintree{}},
	}},
	"layouts": &bintree{nil, map[string]*bintree{
		"inside.html": &bintree{layoutsInsideHtml, map[string]*bintree{}},
		"outside.html": &bintree{layoutsOutsideHtml, map[string]*bintree{}},
		"profile.html": &bintree{layoutsProfileHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

