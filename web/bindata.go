// Code generated by go-bindata.
// sources:
// includes/authorize.html
// includes/client_detail.html
// includes/clients.html
// includes/index.html
// includes/login.html
// includes/new_client.html
// includes/register.html
// layouts/inside.html
// layouts/outside.html
// layouts/profile.html
// DO NOT EDIT!

package web

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _includesAuthorizeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xcd\x6a\xdb\x40\x10\xbe\xfb\x29\x86\xbd\xcb\xb2\x89\x31\x39\xc8\xea\xa5\x97\x5e\x7a\xe9\x13\xac\xa4\xb1\xbd\x78\xb5\x2b\x56\x6b\xa7\x46\xe8\xd2\xb4\xd4\xa1\x6d\x0a\x2d\xa5\x25\x38\x98\xd0\x40\xd3\x5b\x21\x50\x68\x43\xdf\xc6\xd9\xf8\x31\x8a\xfe\x2c\xb9\xb8\xc7\xe4\x62\x0f\xf3\x8d\xbe\x9f\x1d\xad\x92\x04\x02\x1c\x32\x81\x40\x34\xd3\x1c\x49\x9a\x9a\xd3\x85\x39\x3f\x4e\x12\x40\x11\x40\x9a\xb6\x5a\x8d\x19\x5f\x0a\x8d\x42\x93\xac\xef\x04\x6c\x06\x3e\xa7\x71\x3c\xc8\xfb\x94\x09\x54\xc4\x6d\x01\x34\x91\x88\x8e\xd0\x1a\x23\x0d\x4a\x0c\xc0\x19\x77\xdd\x42\xc3\xb1\xc7\xdd\x7c\xde\x0e\xd8\x2c\x2b\x92\x04\xd8\x10\xda\xa8\x94\x54\x99\xc4\x2e\x15\xe5\xa8\x34\xe4\xbf\x56\x40\xc5\x08\x15\x01\x25\x39\x96\x08\x71\x93\xa4\x7e\xb6\x66\x44\x1e\x63\x49\x36\x94\x2a\x04\xea\x6b\x26\xc5\x80\x10\x08\x51\x8f\x65\x30\x20\x91\x8c\x75\x65\xae\xa1\x97\x4d\x5b\x23\x25\xa7\x51\x09\x02\x38\x91\xeb\x78\x99\x8e\x54\xd0\xf6\x39\x43\xa1\x9f\xd2\x10\xdb\xcf\xb4\x62\x62\x54\xb5\x9e\x3c\x06\x48\x53\xc7\xf6\x5c\x30\xc7\xd7\xeb\x9b\xaf\x9b\x8b\x2b\xf3\xe2\xca\x9c\x7c\xdb\x5c\xbc\xbd\x3b\x7b\x69\x3e\xbe\x5b\xff\x59\xb6\x1d\x3b\xaa\x78\xcb\xe0\x5a\x4e\x50\x14\x5e\x4b\xb5\xe2\xa0\x6e\x2f\xcf\xd6\xbf\x5e\x99\xe5\x89\xf9\xb4\x30\xcb\x15\x14\x1e\x6a\xb5\x52\x6c\xf3\xfa\xfa\x51\x83\xb4\x99\x45\xd1\x80\xc9\x6d\x0c\x00\x87\x53\x0f\xf9\x0e\x6a\x31\xc1\x99\xc0\xc6\x10\x80\xc3\x44\x34\xd5\xa0\xe7\x11\x56\x1c\x20\x68\x88\x03\xc2\xd9\x10\x35\x0b\x91\xc0\x8c\xf2\x29\x0e\xc8\x41\xbf\xd3\x21\x2e\x74\xe1\xf6\xc7\x7b\xf3\xf9\x67\xad\x64\xe7\x52\xf7\x29\x7d\xd8\xef\x55\xda\x97\xdf\x1f\x52\xb8\xdf\xe9\x1d\x76\x3a\x04\xfc\x31\xfa\x13\x0c\x32\x07\xe6\xcb\xca\x2c\x57\xff\x33\xb1\x7d\xd3\xcb\xa5\x97\x57\xec\x1f\x68\x67\x71\xf2\x88\xec\x5b\xa8\x2f\xb9\x15\x06\xd6\x01\x64\x45\x1c\x5a\xbd\xbc\x78\x1e\x5b\xfd\xe6\x96\x9b\x51\xe2\xa9\x17\x32\x4d\x2a\x02\x4f\x0b\xf0\xb4\xb0\xf8\x28\xff\xf3\xb8\xf4\x27\x79\x15\x29\x16\x52\x35\xaf\x42\x53\xce\xe5\xd1\x36\xb1\x39\x5d\xac\x7f\x2f\xc8\xde\x3c\x0f\x63\xaf\xba\xf9\x85\xbb\x00\xc5\xbc\x36\xf7\xe6\xc3\xdd\xcd\xf9\x3e\x73\xdb\xd2\xb1\xb3\x5b\x5d\x7d\x19\x8a\xd3\x2f\xc1\xba\xf1\x37\x00\x00\xff\xff\xbe\x34\xe1\xbd\x15\x05\x00\x00")

func includesAuthorizeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesAuthorizeHtml,
		"includes/authorize.html",
	)
}

func includesAuthorizeHtml() (*asset, error) {
	bytes, err := includesAuthorizeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/authorize.html", size: 1301, mode: os.FileMode(420), modTime: time.Unix(1505119402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesClient_detailHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x6a\xf4\x30\x10\x85\x6b\xfb\x14\x83\x7a\xdb\x6c\xaf\x5f\x17\x58\xf8\x09\xe4\x04\x13\x6b\xbc\x16\xcc\xca\xc2\x52\x36\x2c\x42\x45\x9a\x25\xc7\x08\x29\xd2\x04\xe2\x32\x45\xce\xb3\x71\x8e\x11\x50\x58\xc7\x45\x9a\x34\x2a\x9e\x3e\xbe\x37\xbc\x18\x41\x53\x67\x2c\x81\x08\x26\x30\x89\x94\xce\xaf\x4f\x1f\x0f\x6f\xf3\xcb\xf4\x39\x3d\xcf\xef\xa7\x18\x81\xac\x86\x94\xca\x72\x05\xb7\x83\x0d\x64\x83\xc8\x39\x00\x80\xd4\xe6\x00\x2d\xa3\xf7\xff\x84\x1b\x87\xce\x30\x55\x17\x48\x65\xa2\x90\xfd\x66\x21\x70\x47\x55\x4f\xa8\x69\x14\x6a\x29\x04\xe9\xf7\xc8\xac\x62\xac\x5b\x36\x64\x43\xfd\x1f\xf7\x54\x5f\x87\xd1\xd8\x5d\x4a\xb2\xf9\xfe\x96\x4d\xbf\x51\x65\x51\x48\x77\xd1\x31\xa1\x16\x6a\x4b\x47\x90\xde\xa1\x5d\x62\xbc\x21\x86\xfc\x56\x9a\x3a\xbc\xe5\x20\x56\xf2\x2d\x1d\xb3\xd4\xa1\x55\xb2\x71\xbf\x29\xcf\xd3\x69\x7e\xbc\xff\x93\xf5\x0a\xbd\xbf\x1b\x46\xbd\x3e\x7b\x69\xc8\x4b\x35\xda\x1c\x54\xf9\xb3\xeb\x57\x00\x00\x00\xff\xff\x93\x65\x6c\x6e\x84\x01\x00\x00")

func includesClient_detailHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesClient_detailHtml,
		"includes/client_detail.html",
	)
}

func includesClient_detailHtml() (*asset, error) {
	bytes, err := includesClient_detailHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/client_detail.html", size: 388, mode: os.FileMode(420), modTime: time.Unix(1504778362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesClientsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x8b\xd4\x40\x10\x3d\x67\x7e\x45\xd1\x78\xcd\xc4\xb3\x24\xb9\x8b\xe0\x61\xc5\x1f\xd0\x93\xae\x64\x1a\x6a\x3a\xa1\x53\xd9\xdd\x21\xf6\x49\x90\x3d\x78\x5c\x3c\xb8\xe0\xc1\xd3\x82\xa0\x0b\x1e\x84\xd5\xbf\x93\x59\x6f\xfe\x05\x49\xe7\x63\x22\xce\x61\x6f\xd5\x55\xaf\xdf\xab\x7e\xfd\xda\x16\x14\xe6\xda\x20\x08\xd6\x4c\x28\x9c\xeb\xbe\x7e\x3e\x5c\xfd\x78\xf8\xf2\xad\xbb\xbf\x7e\xb8\xbe\x6d\x5b\x40\xa3\xc0\xb9\xd5\x6a\x01\xce\x4a\xc3\x68\x58\xf8\x3e\x00\x40\xac\xf4\x39\x64\x24\xeb\x3a\x11\x95\x2d\x73\x4d\x18\x4e\xa0\xd4\x23\x82\xb6\x05\x9d\x03\xa1\x81\x75\x46\x1a\x0d\xd7\xf0\x06\x88\xe1\x69\x4f\x02\x1e\xf2\x0f\x4b\x43\x14\x5a\x5d\x6c\x7b\x82\x60\x18\xcb\x69\xb8\x61\x03\x1b\x36\xa1\xc2\x5c\x36\xc4\x02\xb6\x16\xf3\x44\x44\x17\xb8\x89\x46\xf2\xc8\xe0\x85\x00\x5b\x12\x26\x62\xd3\x30\x97\x46\xa4\x71\x5d\x49\x33\x71\x14\xb4\xaf\xb6\x3a\x2b\x0d\xcc\x55\x58\x51\x53\x0b\x90\x56\xcb\x70\xab\x95\x42\x93\x08\xb6\x0d\x8a\x34\x8e\xfa\xab\x69\x1c\xc9\x74\xda\x35\x52\xfa\x7c\x3e\x54\x13\x2b\xa1\x54\x22\x3d\x7c\xbf\xed\xde\xbd\x1f\x1c\x8c\xa3\x2a\x5d\x05\x41\xdc\xd0\x8c\xd1\x35\x87\x85\x2d\x9b\xaa\x7f\x5a\xe0\xad\xb1\xd2\x14\x08\x4f\x86\xe5\xe1\x59\x72\x34\xc9\xb9\x55\x10\x04\x41\x4c\xfa\xff\xfb\xa1\x66\xdc\x79\x92\x1e\x21\x4f\xd9\xd0\xb6\x23\xe9\xfa\x05\xee\x9d\x13\xe9\xb1\xf1\x52\xee\x70\xfd\x8a\xad\x36\xc5\xa4\xb2\x78\xc9\xe2\x03\x60\x52\x58\xfa\x37\x18\x14\x5e\xd6\xc0\x78\xc9\xe1\xae\x61\x54\x22\xed\x6e\x3e\xfd\xbe\x7b\xfb\xe7\xd7\xc7\xa3\xcc\x19\x2a\x6d\x31\xe3\xd7\x67\xcf\x47\x35\xe7\x46\x3f\x47\xda\xc1\x21\x5f\xc9\xa1\x8a\x23\xd2\xb3\x37\x63\x00\x7d\x08\xe2\xa8\xa1\x31\x0f\xfd\x84\x6a\x9c\x47\x27\xf2\x51\x59\xbd\x93\x76\xef\x6b\x2a\x1e\x1b\x93\xee\xea\xa6\xfb\x79\x7f\xf8\x70\x37\x7d\xa0\x5c\x28\x0e\xbb\x0c\xab\xf8\x04\x1c\x9b\x7f\x03\x00\x00\xff\xff\x89\xf0\xe1\x68\x4e\x03\x00\x00")

func includesClientsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesClientsHtml,
		"includes/clients.html",
	)
}

func includesClientsHtml() (*asset, error) {
	bytes, err := includesClientsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/clients.html", size: 846, mode: os.FileMode(420), modTime: time.Unix(1504774954, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x7d\x6f\xdb\xc6\x19\xff\x3f\x9f\xe2\xd9\xed\xef\x3b\x8a\x94\x2d\xd7\x83\x24\xa0\x59\x5d\x2c\x43\xec\x06\x7e\xf9\x3b\x38\x91\x27\xe9\xda\x23\x29\x90\x47\x29\xa9\x67\xc0\xc9\xbc\xad\xe9\xd6\xc5\x41\x5d\xa0\xf0\x5c\xcc\x03\xd6\x75\x2b\x16\xb7\x7b\x69\x63\xd8\x71\xf2\x5d\x36\xbd\xc4\xdf\x62\x38\x52\x2f\xb4\x4c\x52\xb2\xe5\xd5\x30\x04\xf2\xee\xb9\xdf\xdd\xf3\xfc\x7e\xf7\xdc\xc3\xdb\xdc\x04\x8b\x55\xb9\xc3\x00\x49\x2e\x05\x43\x5b\x5b\x9d\xe3\xdd\xce\xd3\x17\x6f\x8e\x5e\xf5\xce\x8e\x00\xc3\xcf\x39\x7b\x9f\x33\xd8\xdc\x04\xe6\x58\xb0\xb5\x75\xeb\x56\x6c\x8c\xe9\x3a\x92\x39\x12\xa9\xf6\xa2\xc5\x9b\x60\x0a\xea\xfb\xa5\xb0\x9d\x72\x87\x79\xa8\x7c\x0b\x00\x20\xde\xe7\xb9\x2d\x68\x78\x6e\x95\x0b\xd6\xef\x1d\xb7\x30\x5d\x81\x6d\x0b\xe7\x63\xdd\xe3\x26\x7d\x00\xec\x73\x8b\x55\xa8\x37\x66\x19\x5a\xff\x08\x63\x58\xbb\xf3\xce\xd2\xed\xb7\x57\x61\x63\x6d\x69\xf5\xde\x9d\x9f\x02\xc6\x09\x86\x09\xb0\x81\xcf\xbc\x06\x37\x13\x60\xc3\x11\xdc\xae\x81\xef\x99\x25\xb4\xb9\x09\xc4\x0c\x3c\x8f\x39\x72\xc3\x67\x1e\x79\xbb\x49\x25\xf5\x60\x6b\x0b\x0d\x10\xb9\x5d\xc3\x1e\xf3\x1b\xae\xe3\xf3\x26\x43\x40\x85\x2c\xa1\xa4\xe5\x6a\x16\x6f\xa6\x78\xb1\xb4\xf2\xce\x74\x9e\x8c\xbb\x0c\xeb\x77\xd6\xef\x2e\x5d\xc9\xeb\x48\x05\x29\x7e\x67\x8d\xc1\x0e\xb5\xd3\x06\xaa\xbf\xf1\x50\xa9\x1f\x35\x44\x49\x27\x71\xb2\xe4\x80\x44\x50\xbc\x7a\x11\x6c\xd5\x15\x2c\x0d\x27\x73\xd1\xef\xbb\x95\x2b\xac\x59\x4d\x43\x56\xae\xbb\x68\xe6\x58\x09\xc3\xae\x42\x7c\x16\x9f\x71\xee\x6f\x6f\xac\xaf\xbf\xb7\xb2\x76\x25\xe2\x2b\x81\x94\xae\xe3\xa7\x51\x1f\x75\x83\x7c\xd8\x60\x25\x14\xbd\x0c\x35\x5e\x91\x0e\x54\xa4\x83\xfd\xc0\x34\x99\xef\x47\xcf\x36\x2a\xbf\xeb\x0a\xe1\xb6\x8a\x5a\x64\x3e\x03\xb0\x45\x9d\x1a\xf3\x86\xb8\xcb\xcc\xf7\x69\x8d\xa5\x03\x4f\x1b\xd3\xcc\x38\xc5\x03\xba\xbc\xb4\xb2\x71\xa5\x68\xda\xcc\x09\xd2\x42\x19\x88\xc1\x08\x87\x36\x33\xd4\x57\x14\x7c\x60\x48\x4d\xa9\xb2\x47\xba\x6d\x68\x4f\xa1\xee\xb1\x6a\x09\x69\x2d\x96\xa5\xea\xd0\x76\x08\x5d\x13\x0f\x1b\x75\x6e\xba\x0e\x0c\x9f\x42\x0f\x50\xb9\xa8\xf1\x6c\x90\xe8\xa4\x80\xa2\x46\x33\x9c\xd0\x44\x06\x4a\x31\xab\xf3\x92\x4f\x9a\x29\x38\x73\x64\x9a\x46\xa7\xf3\xcd\x14\x6e\x60\x4d\xe3\xdc\xc9\x5e\x6f\xef\xaf\x3f\x8c\x73\x3f\x9e\xc9\xa3\xaa\xa0\xb5\xa9\xd8\x3a\xea\x7c\xfc\xb7\xeb\x3a\x54\xd4\x02\x71\xf5\x8d\x96\xb8\x6f\xc6\x06\x8d\xbf\x5e\x2e\x04\x16\xa7\x28\x04\x06\x95\x48\xc2\x62\xaa\xae\x67\x03\x73\xcc\x28\xc5\xd8\x81\x90\xbc\x41\x3d\xa9\xa9\x76\x6c\x51\x49\x11\xd8\x4c\xd6\x5d\xab\x84\xee\xbd\xb7\xb6\x8e\x40\xed\x36\xd7\xe9\x6b\x2e\x91\x9a\xf8\x0a\x42\x98\x9a\xe7\x06\x8d\xf0\xbc\x50\xaf\x64\xc9\xf3\x5c\x6f\x4d\x52\x19\xf8\x80\x56\xb8\xf9\x81\x3a\x34\x54\x95\x94\x96\x13\x04\xad\x30\x11\xaf\x9e\x3c\x57\xe0\xb0\x11\x41\xd5\xf5\x4a\x48\x6d\xc9\xfb\x0e\x37\x3f\x88\x8e\xd9\xee\xe7\xdf\xf5\xbe\xfa\xb6\xa8\x85\x26\x69\x55\x8a\xd3\x08\x64\x3f\xb1\x4a\xf6\x40\xa2\x0b\x2b\xee\x4f\x82\x80\x5b\xe3\xe8\x40\x3d\x4e\xb1\xc5\x7c\xd3\xe3\x15\x66\x55\x1e\x96\xd0\xa0\xef\x67\x4c\x34\x10\xa8\xa7\x51\x1b\x82\x26\x15\x01\xbb\x5c\x0d\x0d\x1c\x27\x6b\xd2\xe3\x4e\x2d\x2c\x8b\x1a\x82\x9a\xac\xee\x0a\x8b\x79\x25\xd4\x3b\x7b\xd6\x3b\x3d\x88\x7c\x49\x89\xcc\xc5\x90\x2e\xfb\xb5\x78\x3c\x7f\x01\x1e\x6d\x25\x1e\xc5\x91\xa8\xc6\x5b\x27\x30\xe9\xb9\xad\x29\x2a\x9f\x89\x7c\xbf\xcb\x3d\x5f\x0e\x08\x87\xbe\x86\x0b\x99\x89\x7e\x2a\xf6\xab\x43\xdc\x72\xe7\xab\x4f\x33\xb9\xbf\x16\xff\x23\xfc\x04\x01\x84\x9d\xe3\x0a\x08\x1b\xef\x67\x6a\x60\x18\x8c\x54\x11\x20\xc8\x2e\xc0\xc6\xd8\x8f\x45\x37\x9d\xfe\xcc\x4a\xec\x4a\x64\xde\xa5\xff\x17\x2e\x05\x1d\x52\xb9\xfb\xc9\xcd\x53\x39\x84\x4f\x60\x52\xf5\x8d\x13\xa9\xda\xb2\x79\x1c\xc4\xe1\xa6\x68\x1c\xc5\x75\x32\x8b\x89\xfb\x36\x9d\xdf\x0b\x7f\xb3\x26\xef\xe8\x8b\x6e\x63\xf5\x6e\x56\xf6\x8e\xd3\x13\x7e\xd7\x26\xd1\x83\x55\x0f\xd0\x10\x2f\x46\x15\x1d\x4d\x10\x71\x11\x35\xdc\x0f\x3c\x91\x7d\x58\x8c\xc4\x34\x82\x28\x17\xfd\x66\x0d\x1e\xd8\xc2\xf1\x4b\xa8\x2e\x65\xe3\x27\x9a\xd6\x6a\xb5\x48\x2b\x4f\x5c\xaf\xa6\x19\xb9\x5c\x4e\xf3\x9b\x35\x04\x2d\x6e\xc9\x7a\x09\x19\x39\x04\x75\xc6\x6b\x75\x59\x42\xfa\x02\x82\x26\x67\xad\xdb\xee\x83\x12\xca\x41\x0e\x8c\x1c\xe8\x0b\xa8\x5c\x6c\x50\x59\x07\xab\x84\x96\xf5\x1c\xe4\x04\x9e\x27\x06\xcc\x91\xc5\x7a\x9e\xe4\x9b\xf3\x44\xaf\xe7\xc9\x5b\x4d\x1c\x3d\xe4\xc3\x5e\x3c\x47\x16\x3f\xb4\x17\x49\x1e\x74\x9d\xcc\x0b\x9c\x27\x06\x36\x88\x5e\xc7\x86\xc8\x93\x39\x30\x48\xa1\x8e\xf3\x64\xde\xc4\x44\x87\x1c\x26\x06\xd1\xc3\x1f\x81\xc9\x5b\x60\x90\x7c\x1d\x17\xd4\x23\x36\x88\xa1\x4c\x06\xff\x46\xf4\xaf\x86\x16\x14\x0e\x0e\x71\x8c\x10\x1e\x0c\xa2\x9b\x98\xcc\x91\x3c\x26\x0b\xa0\x63\x52\x00\x35\x33\x29\x40\x9e\xe8\x26\xd1\xc9\x3c\x59\x20\x8b\xa0\x13\x83\x2c\xd6\xf5\x02\xc9\x9b\xa4\x00\x39\xd0\x15\xee\x1c\xe8\x6a\xd8\xa2\x20\x05\x1c\x59\x63\x32\xaf\xe6\xd2\xd5\x7c\x0b\x58\x27\xf3\x1f\xaa\xea\x4a\x45\xa1\x5c\x54\xd1\x2b\x43\xd1\x6f\x50\xa7\xdc\x3e\xfe\xb8\xfd\xf2\xb0\xf3\xe7\x7f\x77\x7e\xf9\xb4\xf3\x87\x57\xbd\x27\xbf\xf9\xcf\xf6\x5f\x8a\x5a\xd8\x37\xd8\xd2\x53\x4a\x32\x71\x8b\xc4\xa4\x37\xe9\xa0\x9b\x55\xe5\xcb\x6e\x25\x94\xed\xac\x05\x8a\x1d\xe1\x94\xbb\x4f\x7e\xdb\x3d\x38\x99\xbe\x3c\xe9\x8f\x9b\x90\xd5\x06\x56\x97\x73\x5a\xd4\x13\xcf\x68\x03\xdb\x94\x74\x16\x39\x9c\x9a\xcc\xba\xbf\xff\xb2\xbb\xf7\x7d\xef\x8f\xcf\xdb\xaf\xff\x74\xfe\xf5\xef\xde\x7c\xf3\xa8\xb7\xbf\x13\x39\xd5\x79\xfa\xa2\x77\xf8\x28\x2d\x4c\xbe\x4d\x85\x08\x57\x1c\x5f\x52\xdc\x2d\x95\xbe\x41\xfd\x60\x3b\x90\xcc\x42\xe5\xee\x47\xcf\xda\xa7\x7f\x6f\x1f\x7f\xd2\x7e\xb9\xdf\xd9\x7d\xd6\x3e\x3d\x6d\x9f\x7d\xd6\x3e\x39\xe9\xfe\x6b\xe7\xfc\xe0\x9f\xed\xb3\xc3\xde\xfe\x4e\x34\xe9\x7f\xb7\x1f\x17\xb5\x70\x86\xa9\x6b\xa5\x01\xb1\x37\x26\xa0\xd9\xf4\xc1\x6c\xca\x05\x2a\xf7\xf6\xbe\xeb\x3c\xdf\x3d\x7f\x7c\xd4\x3e\xfd\x7e\x7a\x91\x44\x83\x27\x68\xa4\x6f\x74\x59\x22\x61\x47\x5c\x21\x41\xff\x02\x6a\x8c\xfa\x37\xaf\x3e\xed\xfc\xea\xcb\xee\xc1\x93\xf6\xf1\x76\xfb\xf8\xeb\xee\x67\x1f\xf5\xf6\x77\xce\x1f\x1f\xf5\x8e\xfe\xd1\x39\xf8\xb6\xf3\xc5\x76\xaa\xa6\x62\x37\x5a\x08\x2c\xee\xd3\x8a\x60\xd6\x44\x9d\xc4\xd6\x35\xb3\x4c\xe2\x71\xcd\x16\xcb\xcd\xa4\x8d\x7b\xd4\xf7\x5b\xae\x67\x85\xc5\xd1\x6c\xca\x68\x0c\xa0\xca\x9d\x6f\x7e\xdd\x3b\x7c\x34\xbd\x2c\x86\x23\x27\x28\x63\x64\x17\xf1\x3f\x7a\x4f\xe0\x3f\x5a\xc4\xf4\xdf\x24\xa3\x48\x5c\x67\xa7\x5d\xb8\x03\xf3\x83\x8a\xcd\x65\xda\xe5\x1a\x2a\xb7\x5f\x7f\xd1\x79\xfe\x79\xd6\xe5\x97\x5a\xdb\xb4\x9f\xdc\xfd\xc7\x7e\xa1\x15\x7e\xb8\x6b\xc3\xdb\xfb\xf0\xd3\x7d\x74\xf3\xff\xbf\x00\x00\x00\xff\xff\xc1\x44\xbb\x8e\x2d\x18\x00\x00")

func includesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesIndexHtml,
		"includes/index.html",
	)
}

func includesIndexHtml() (*asset, error) {
	bytes, err := includesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/index.html", size: 6189, mode: os.FileMode(420), modTime: time.Unix(1504777115, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesLoginHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xbf\xaa\xd5\x40\x10\x87\xfb\x3c\xc5\x38\x7d\x0c\xdc\x7a\xb3\x56\xf6\x82\x4f\xb0\xc9\x4e\x92\xc5\xcd\x6e\xee\xec\xe6\x5e\x0f\x21\xa5\x82\x20\x78\x3b\x15\x2c\xb4\x10\xac\xb5\x50\x10\xf1\x65\x3c\x47\x1f\x43\x92\x93\x9c\x28\xf7\x68\x95\xfd\x33\xbf\x6f\xbf\x09\x33\x0c\xa0\xa9\x32\x8e\x00\xa3\x89\x96\x70\x1c\x7f\xbe\xfe\xba\x7f\xf2\x7e\x18\x80\x9c\x86\x71\x4c\x92\x3f\x6a\x4a\xef\x22\xb9\x88\xd3\xb9\xd0\xe6\x0a\x4a\xab\x42\xc8\xe7\x73\x65\x1c\x31\xca\x24\x01\x10\x95\xe7\x76\xbd\x9b\xd6\x69\x30\xb5\x33\x0e\x41\x95\xd1\x78\x97\x23\x42\x4b\xb1\xf1\x3a\xc7\xce\x87\x88\x32\x01\x00\x10\xcd\xc5\x99\x50\xda\x90\xd2\xc6\xd5\x28\x8f\x66\x22\x6b\x2e\x8e\xf5\xc3\x00\xa6\x82\xbb\xc4\xec\x79\x32\x9a\x19\xdd\x8a\x88\xf4\x38\xa6\x5a\xb9\x7a\xb2\x1a\x86\xad\x4e\x64\xdd\x29\xbf\xf4\x38\x27\xad\x2a\xc8\x42\xe5\x39\x47\xe3\xba\x3e\xde\x6f\x95\xb1\xb8\xe2\x02\xa7\xde\xd9\x1d\xca\xf9\x18\x94\xd6\x4c\x21\x88\x6c\x4e\x2d\xfe\x73\x0c\xe2\xae\xa3\x1c\xe9\x98\x76\xaa\xdd\x36\x46\x9f\x45\xcf\xcd\x4e\xbf\x90\xbd\x45\xe8\xac\x2a\xa9\xf1\x56\x13\xe7\xf8\xd7\x63\x08\x4c\x97\xbd\x61\xd2\xa0\xfa\xe8\x2b\x5f\xf6\x41\x9e\x77\x7f\xa0\x42\xb8\xf6\xac\x6f\xeb\xaf\x37\xff\x36\xef\x4e\xd9\xa3\xfc\xb6\x3f\xf9\xdf\xc2\xff\xa7\x85\xad\x76\xb5\x5f\xde\x2c\xfa\x18\xbd\x5b\x09\x45\x74\x50\x44\x97\xda\x7a\xfe\x74\x6c\x5a\xc5\xbb\x79\x5d\x58\x5f\x3e\xc2\xc5\x2e\xf4\x45\x6b\xe2\x36\x0c\x47\xca\x82\xec\xe4\x8f\x6f\x6f\x7f\x7d\x7f\x75\xf8\xf8\xee\xf0\xe6\xd9\xfe\xcb\xcd\xfe\xc5\xe7\xfd\xcd\xcb\x7b\x20\x14\x34\x4c\x55\x8e\xd9\x35\x15\x19\x53\x6d\x42\x24\x9e\xa6\xe2\xb2\x27\xde\x3d\x8c\x6c\x5c\x0d\xe3\x88\xf2\xf0\xe9\xc3\xfe\xe9\x73\x91\xa9\x09\x29\xb2\xa9\x31\x99\x24\x22\xd3\xe6\x4a\x82\xb8\x93\xa6\x90\x9d\xa6\x1d\xd2\x54\x26\xdb\x14\xfd\x0e\x00\x00\xff\xff\xb4\xe6\x34\x1e\x4d\x03\x00\x00")

func includesLoginHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesLoginHtml,
		"includes/login.html",
	)
}

func includesLoginHtml() (*asset, error) {
	bytes, err := includesLoginHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/login.html", size: 845, mode: os.FileMode(420), modTime: time.Unix(1503999442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesNew_clientHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x4d\x8b\xd4\x40\x10\x3d\xcf\xfc\x8a\xa2\xee\x49\xfe\x40\x92\x9b\xa0\x07\x3f\xd8\xd5\xf3\x92\xa4\x6b\x76\x1b\x7a\xba\x43\x77\x65\xd7\x25\x06\x04\x3d\x8c\x07\xd1\xc3\x7a\x71\x57\x11\x2f\x0a\x82\xce\x4d\x58\xf7\xef\xf4\x8c\x3f\x43\x92\xcc\x30\xc9\xa2\x20\xba\x39\xa5\xaa\x5f\xbd\x7e\xf5\x1e\x5d\xd7\x20\x68\x26\x35\x01\xb2\x64\x45\xd8\x34\x7e\x71\xee\x7f\x5c\xfa\xaf\x1f\x57\x8b\xef\xeb\x2f\xdf\xea\x1a\x48\x0b\x68\x9a\xe9\x74\x00\x2e\x8c\x66\xd2\x8c\x5d\x1f\x00\x20\x16\xf2\x18\x0a\x95\x39\x97\x60\x69\xcd\x4c\x2a\x0a\xb6\xa0\xb4\x43\x4c\xe2\x99\xb1\x73\x98\x13\x1f\x19\x91\xe0\x83\xfb\xfb\x0f\x11\xb2\x82\xa5\xd1\x09\x46\x27\x94\x47\x85\x92\xa4\xd9\x6d\xf1\x93\x21\x67\x3b\x1b\x1c\x5a\x53\x95\x50\xd7\x10\xb6\x65\x78\xcb\x5a\x63\xf7\x39\xe3\xca\x01\xde\xcb\xe6\xd4\xca\xc1\x74\x3a\x81\xc1\x17\xab\x2c\x27\xb5\xa5\x69\x25\x59\xa3\x82\xae\x89\x30\x33\x36\xc1\xfe\xda\x03\xdd\x12\xa4\xfe\xf5\xcb\xf5\xa7\x65\x1c\x75\x80\xeb\x54\x52\x97\x15\x03\x9f\x96\x94\x20\xd3\x63\xc6\x91\xba\x0d\x37\x82\x14\x63\x52\xc8\xac\xcc\x02\x41\xae\xb0\x32\x27\x91\x9f\x26\xd8\xf6\x6f\x93\x2a\x11\xda\xbf\xbe\x46\x28\x55\x56\xd0\x91\x51\x82\x6c\x82\xfe\xf2\x6c\x7d\xf6\xb9\xd7\x13\x86\xe1\xf5\xbd\xc6\x2e\xdc\x75\x87\x5b\x0b\x9e\x80\xcd\x4e\x9a\x66\x87\x8e\x23\x21\x8f\xff\xc9\xd3\x3d\x12\xd2\x52\xc1\x8f\xf6\xee\xfc\x97\xb5\x76\xc3\x73\x50\x59\x89\xa9\x3f\x7f\xff\x73\xf9\xcc\x5f\x2c\xfd\xbb\xa7\x37\x66\xf4\xe8\x8a\xdf\x18\x3e\x3c\x1f\x1a\x3f\x9e\x1b\x05\xb0\xba\x78\xb1\x7a\xb3\x58\xbf\x7d\x0e\xab\x0f\x57\xfe\xea\xd5\xdf\x85\x30\xf2\xec\x0f\x59\x40\x57\x4f\x47\x2b\xe7\x15\xb3\xd1\x9b\x9d\x5d\x95\xcf\xe5\x6e\xeb\x9c\x35\xe4\xac\x03\x57\x15\x05\x39\x87\x69\xff\x46\xe3\xa8\x1f\x4a\xa7\x3b\xfa\x56\x4d\x5f\x6f\x62\xdf\xbd\xdf\x5f\x01\x00\x00\xff\xff\x67\x33\xe1\x1c\xec\x03\x00\x00")

func includesNew_clientHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesNew_clientHtml,
		"includes/new_client.html",
	)
}

func includesNew_clientHtml() (*asset, error) {
	bytes, err := includesNew_clientHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/new_client.html", size: 1004, mode: os.FileMode(420), modTime: time.Unix(1504768597, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesRegisterHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xb1\x8e\xd5\x3c\x10\x85\xfb\x3c\xc5\xfc\xd3\xe7\x8f\xb4\xb5\x63\x2a\x7a\x24\x9e\xc0\x89\x27\x89\x85\x63\x67\xed\xc9\x2e\x57\x51\x4a\xb6\x42\xa2\xe6\x01\x90\xa8\xa1\x40\x62\x5f\x87\xcb\xbe\x06\x8a\x93\xdc\x80\xf6\x42\x15\x7b\x66\xce\xf1\x37\xd1\x99\x26\xd0\xd4\x18\x47\x80\x6c\xd8\x12\xce\xf3\xcf\xaf\x9f\xcf\x0f\xef\xa7\x09\xc8\x69\x98\xe7\x2c\xfb\x6d\xa6\xf6\x8e\xc9\x31\x2e\x75\xa1\xcd\x1d\xd4\x56\xc5\x58\xa6\xba\x32\x8e\x02\xca\x2c\x03\x10\x8d\x0f\xfd\xde\x5b\xce\x79\x34\xad\x33\x0e\x41\xd5\x6c\xbc\x2b\x11\xa1\x27\xee\xbc\x2e\x71\xf0\x91\x51\x66\x00\x00\xa2\xbb\xb9\x22\xca\x3b\x52\xda\xb8\x16\xe5\x4a\x26\x8a\xee\x66\x9d\x9f\x26\x30\x0d\xfc\x4f\x21\xf8\xb0\x10\x25\x8f\x61\xb7\x60\x7a\xcb\xb9\x56\xae\x5d\xa8\xa6\xe9\x98\x13\xc5\x70\xd1\x6f\x3b\x26\xa5\x55\x15\x59\x68\x7c\x28\xd1\xb8\x61\xe4\x97\xbd\x32\x16\x77\xbb\x18\x72\xef\xec\x09\x65\x2a\x83\xd2\x3a\x50\x8c\xa2\x48\xaa\x8d\x3f\xc9\x80\x4f\x03\x95\x48\xab\xda\xa9\xfe\xb8\x18\x7d\xd5\x3a\x2d\xbb\xfc\xc2\xe0\x2d\xc2\x60\x55\x4d\x9d\xb7\x9a\x42\x89\x7f\x3c\x86\x10\xe8\x76\x34\x81\x34\xa8\x91\x7d\xe3\xeb\x31\xca\xeb\xec\xaf\x54\x8c\xf7\x3e\xe8\xe7\xf8\x7b\xe7\xef\xe4\xc3\x45\xbb\xc2\x1f\xf7\x0b\xff\x33\xfb\x7f\xac\x70\xcc\xee\xf4\xdb\x9b\xd5\xc8\xec\xdd\xee\x50\xb1\x83\x8a\x5d\x6e\xdb\xf4\x19\x82\xe9\x55\x38\xa5\x73\x65\x7d\xfd\x06\x37\xba\x38\x56\xbd\xe1\x23\x0c\xab\xcb\x66\x39\xc8\xf3\xb7\x2f\x4f\x8f\x1f\xd6\xe6\x8f\xef\x0f\x2f\x40\x28\xe8\x02\x35\x25\x16\xf7\x54\x15\xd6\xb7\xc6\x2d\x61\xb8\x1d\x29\x9c\x5e\x73\x30\xae\x85\x79\x46\xf9\xf4\xf1\xf1\xfc\xee\x93\x28\xd4\xe2\x24\x8a\x65\x1f\x99\x65\xa2\xd0\xe6\x4e\x82\xf8\x2f\xcf\xa1\xb8\x84\x1c\xf2\x5c\x66\x47\x78\x7e\x05\x00\x00\xff\xff\xdc\x4f\x27\xe6\x44\x03\x00\x00")

func includesRegisterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesRegisterHtml,
		"includes/register.html",
	)
}

func includesRegisterHtml() (*asset, error) {
	bytes, err := includesRegisterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/register.html", size: 836, mode: os.FileMode(420), modTime: time.Unix(1503999402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutsInsideHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xcd\x8e\xdc\x44\x10\xbe\xcf\x53\xd4\x76\x24\x4e\xd8\xad\x04\x22\x02\xd8\x23\xc1\xb2\x88\x20\x10\x81\x0d\x12\x28\xca\xa1\xc6\x5d\x1e\xf7\xd0\xee\x76\xdc\x6d\x67\x47\xa3\x91\x40\x11\x82\x3d\x44\xc0\x05\xb4\x52\x72\xe0\x8e\x04\x37\x60\x11\xe2\x65\xb2\x13\x78\x0b\xd4\xfe\x5b\xcf\xec\x46\x0a\x07\x7c\xb1\xeb\xef\xeb\xaa\xaf\xba\xab\xbd\x5a\x81\xa0\x54\x6a\x02\x36\x43\x4b\x0c\xd6\xeb\x49\xb4\xf7\xd6\x07\xfb\xb7\x3f\xbd\x75\x00\x99\xcb\xd5\x74\x12\xf9\x17\x28\xd4\xf3\x98\x91\x66\x5e\x41\x28\xa6\x13\x80\x28\x27\x87\x90\x64\x58\x5a\x72\x31\xab\x5c\x1a\xdc\x60\xe7\x86\xcc\xb9\x22\xa0\x7b\x95\xac\x63\xf6\x49\xf0\xf1\x1b\xc1\xbe\xc9\x0b\x74\x72\xa6\x88\x41\x62\xb4\x23\xed\x62\x76\xf3\x20\x26\x31\xa7\x51\x9c\xc6\x9c\x62\x56\x4b\xba\x5f\x98\xd2\x8d\x5c\xef\x4b\xe1\xb2\x58\x50\x2d\x13\x0a\x1a\xe1\x45\x90\x5a\x3a\x89\x2a\xb0\x09\x2a\x8a\xaf\xb2\xe9\xc4\xe3\x38\xe9\x14\x4d\x57\x2b\x70\x94\x17\x0a\x1d\x01\x6b\x54\x0c\x42\x58\xaf\x23\xde\xda\xbd\xa7\x92\xfa\x33\x28\x49\xc5\xcc\x66\xa6\x74\x49\xe5\x40\x26\x46\x33\xc8\x4a\x4a\x63\xc6\x53\xac\xbd\x1c\xca\xc4\x74\xd8\x7b\x41\x00\x6f\x1a\xe3\xac\x2b\xb1\x80\xc4\x94\x04\xfb\x87\x87\x10\x04\xbb\x78\x6e\xa9\xc8\x66\x44\x6e\x00\x4b\xac\xe5\xb3\x3e\x34\xcc\xa5\x0e\x13\x6b\x47\xb0\xfb\x95\x75\x26\xbf\x00\x37\x8a\x96\xda\x4a\x41\x4d\xd8\x85\x55\xa6\x3b\x30\xad\x09\x52\x53\x82\xcb\xa4\x3d\xe7\xa2\xc5\xde\x62\xc7\xaf\x63\x5b\x76\x86\x6c\xde\xb9\xfd\xfe\x7b\xd7\xc1\x66\x32\x07\xd4\x02\x3e\x22\x5b\x18\x2d\xc2\x45\x0b\x79\xf3\xe0\x06\xd8\xaa\xf0\x2d\x02\x93\x76\xce\xa4\x28\x27\xed\x6c\x13\x90\x93\x90\x08\xf7\x2a\x2a\x25\xd9\xbe\xa0\xbd\x20\xb8\x23\x53\x50\x0e\x6e\x1e\xc0\xab\x77\xbd\x0e\x20\xb2\x49\x29\x0b\x07\xb6\x4c\x62\xe6\xb7\x8d\x7d\x8d\x73\x63\x6d\x98\xe3\x51\x22\x74\x98\x98\x9c\xfb\x5d\x78\xdd\x66\xb2\xe6\x2f\x85\xaf\x84\xd7\xce\xe5\x86\xc7\x85\x65\xd3\x88\xb7\x30\xcf\x8f\x59\xb6\x25\xf1\xab\xe1\xcb\xe1\xb5\x5e\xba\x14\x2f\xda\xbb\x43\x5a\xc8\xf4\xae\x2f\xa3\x27\x68\xf1\x61\x45\xe5\xb2\xaf\x6c\xbc\x1e\x5f\x58\xbe\xf0\x95\x2f\x2f\x41\x8b\x78\x7b\x80\xa2\x99\x11\xcb\xa1\x69\x6f\xcb\x23\x12\xa0\xb1\x9e\x61\xd9\x43\x6a\xac\x21\x51\x68\x6d\xcc\x3a\x43\xfb\x0a\x04\xa5\x58\x29\xd7\x8b\xa9\x8f\x0d\x9c\x29\x58\x57\xbb\x90\x43\xa0\x3f\x3d\x28\x35\x95\x9d\x6d\xdb\xda\x01\xf8\x84\x46\x1e\x00\xd1\xac\x72\xce\x68\x70\xcb\x82\x62\xd6\x0a\x6c\x27\xc8\x99\xf9\x5c\x11\x24\x46\x29\x2c\x2c\x09\x06\x02\x1d\x76\x6a\xbf\x70\xab\xef\xd5\x58\xce\xfd\x94\xb8\xd2\x46\x33\xc0\x52\x62\x40\x47\x05\x6a\x41\x22\x66\x29\x2a\xef\xdb\x68\x7d\xce\xa5\x51\xc3\x52\xa3\xc4\x3c\xd1\x05\xea\x3e\x15\x5b\x06\x46\xab\x25\x9b\xde\x6e\x93\xd1\x58\xcb\x39\x3a\x69\x74\xc4\xbd\xdf\x33\x03\xfd\xa1\x0e\x1a\xe8\xff\xdf\x31\xe2\x2d\x81\x23\x0d\xee\x70\x39\x2b\x51\x8b\x7e\x4e\x5c\x61\xd3\xcd\xc3\x5f\x37\x8f\x7f\xd9\x9c\x9c\xfe\xfd\xe0\xcf\x27\xa7\xdf\x45\x1c\x87\xee\x71\x21\xeb\xad\x56\x4a\x31\xf0\x74\xde\xf4\x96\xfb\x7e\x83\x0c\xbd\x18\xa5\x50\xa9\x51\x0e\xbd\xe3\xe8\xb3\x94\xf3\xcc\x6d\x33\xaf\xe4\x34\xc2\x7e\x1c\xdd\xa7\x19\x57\x66\x6e\x2a\xb7\x5a\x41\xd8\x6c\xf6\x43\x57\x4a\x3d\x87\xf5\x9a\x4d\x9f\x9e\xfc\x71\xf6\xd5\xa9\xcf\x3b\xe2\x4a\x8e\xb9\xa8\xd4\x76\x29\x7e\xf7\xf3\x50\x63\x3d\x64\xd9\x6d\xff\x51\xad\x11\xd7\x58\x8f\xc6\x2f\xcd\xa5\x86\x02\xe7\xd4\x5f\x0e\x97\xcd\xb4\xce\xb4\x33\xd5\xda\x73\x96\x1a\xe3\x68\x38\x67\x9d\xd4\xd1\xd1\x4a\xcf\x77\x94\x8a\xde\xe6\xe8\xc8\x05\x79\xe5\x48\xb0\xe9\x0b\x89\x29\x96\xaf\x6f\x7e\xff\xfe\xec\xe1\x0f\x6d\x23\x9f\xfc\xf5\xe3\xe6\x8b\x9f\x37\x8f\x8e\xff\x39\xf9\xf6\xec\xcb\x9f\xce\xbe\xf9\xed\xe9\xf1\xd7\x9b\xc7\x0f\x36\xc7\x9f\x6f\x1e\x1d\x87\x11\x2f\x2e\x14\xdc\x66\xf1\xcc\x2b\xe7\x5d\xac\xf1\xb0\x19\x28\x13\x80\xf8\x3f\x3f\xa3\x71\x0c\xb7\x14\x26\x24\x00\x1d\xb8\x8c\x80\xb4\xf0\xf3\xdc\x7f\x0a\x93\x54\x7e\x9c\x83\x35\x8d\xec\x09\xb7\xa0\x0c\x0a\x48\xd1\x8e\xf8\xdb\x1d\x7d\xdb\x77\xdc\xc2\x32\x18\x8d\xbf\xdd\x5b\xaa\x51\xdb\xcb\x1a\xd8\x99\xba\x06\x46\xbc\x9d\x97\x11\x6f\xff\x4b\x56\xab\x26\xd7\xf5\x7a\x32\xfa\x8b\xe9\xee\xb1\xf5\xfa\x52\xeb\x00\x38\xb6\xff\x1b\x00\x00\xff\xff\x7c\x91\x5a\x0c\x04\x09\x00\x00")

func layoutsInsideHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutsInsideHtml,
		"layouts/inside.html",
	)
}

func layoutsInsideHtml() (*asset, error) {
	bytes, err := layoutsInsideHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layouts/inside.html", size: 2308, mode: os.FileMode(420), modTime: time.Unix(1506066945, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutsOutsideHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x51\x6f\xd3\x40\x0c\xc7\xdf\xfb\x29\xdc\x7b\x26\x89\x36\x98\x18\x28\xa9\xc4\x4a\x25\x86\x40\x0c\x36\x24\xd0\xb4\x87\xeb\x9d\xd3\x5c\x49\xee\xb2\xb3\xd3\x51\x55\xf9\xee\xe8\x92\xb6\xcb\xba\x22\x41\x5f\x1a\xdb\xe7\x9f\xcf\x7f\x3b\xd9\x6c\x40\x63\x6e\x2c\x82\x98\x4b\x42\x01\x6d\x3b\x4a\xc7\xef\xbf\x4c\x6f\x7e\x5e\xcd\xa0\xe0\xaa\x9c\x8c\xd2\xf0\x07\xa5\xb4\x8b\x4c\xa0\x15\xc1\x81\x52\x4f\x46\x00\x69\x85\x2c\x41\x15\xd2\x13\x72\x26\x1a\xce\xa3\x73\xf1\x18\x28\x98\xeb\x08\xef\x1b\xb3\xca\xc4\x8f\xe8\xfb\xbb\x68\xea\xaa\x5a\xb2\x99\x97\x28\x40\x39\xcb\x68\x39\x13\x97\xb3\x0c\xf5\x02\x07\x79\x56\x56\x98\x89\x95\xc1\x87\xda\x79\x1e\x1c\x7d\x30\x9a\x8b\x4c\xe3\xca\x28\x8c\x3a\xe3\x05\x18\x6b\xd8\xc8\x32\x22\x25\x4b\xcc\x4e\xc4\x64\x14\x38\x6c\xb8\xc4\xc9\x66\x03\x8c\x55\x5d\x4a\x46\x10\x9d\x4b\x40\x0c\x6d\x9b\x26\x7d\x3c\x9c\x2c\x8d\xfd\x05\x1e\xcb\x4c\x50\xe1\x3c\xab\x86\xc1\x28\x67\x05\x14\x1e\xf3\x4c\x24\xb9\x5c\x05\x3b\x36\xca\x6d\xd9\xe3\x28\x82\x0b\xe7\x98\xd8\xcb\x1a\x94\xf3\x08\xd3\xeb\x6b\x88\xa2\x43\x1e\xaf\x4b\xa4\x02\x91\xf7\x30\x45\x94\xcc\x77\xa9\x71\x65\x6c\xac\x88\x02\x76\xc7\x9d\x36\xc4\xae\x7a\xc6\x1b\xa4\xbb\x86\xc9\x68\xec\x12\x9f\xd5\x99\x1c\x70\xfa\x10\xe4\xce\x03\x17\x86\x1e\xd5\xe8\xe1\x4f\xf4\x09\x85\xa8\xd7\x67\x7f\x9d\x0f\x37\x9f\x3f\x9d\x01\x15\xa6\x02\x69\x35\x7c\x43\xaa\x9d\xd5\xf1\xb2\x47\x5e\xce\xce\x81\x9a\x3a\x0c\x09\x5c\xbe\x3d\x8c\x25\x56\x68\x99\xba\x84\x0a\xb5\x91\x70\xdf\xa0\x37\x48\xbb\x8e\xc6\x51\x74\x6b\x72\x28\x19\x2e\x67\xf0\xe6\x2e\xf8\x00\x52\x52\xde\xd4\x0c\xe4\x55\x26\xc2\xe2\xd0\xdb\x24\x71\x44\x71\x25\x7f\x2b\x6d\x63\xe5\xaa\x24\xec\xe1\x19\x15\x66\x95\xbc\x8c\x5f\xc7\xa7\x8f\x76\xa7\xe4\x92\xc4\x24\x4d\x7a\xcc\xbf\x33\x7d\xdf\x52\x72\x12\xbf\x8a\x4f\x77\xd6\x51\x5e\x3a\xbe\x45\xab\x4d\x7e\x17\xda\xd8\x09\xb4\xfc\xda\xa0\x5f\xef\x3a\x1b\xd6\x4b\x96\x94\x2c\x43\xe7\xeb\x23\xb4\x34\xe9\x5f\xa1\x74\xee\xf4\x7a\x3f\xb4\x0b\x5c\x18\x0b\xb5\x5c\xe0\x6e\xe5\x8f\xcd\x69\x1b\x3a\x98\xd4\xc1\x42\x7e\x94\x2b\x79\xdd\x15\x1b\x01\x64\xff\xfd\x1b\x8c\x0a\xae\x4a\xa9\x50\x83\x64\xe0\x02\x01\xad\x0e\xb3\x0e\x8f\xda\xa9\x26\x8c\x1a\xc8\x75\x76\xb8\x38\x41\xe9\xa4\x86\x5c\x12\xa3\xff\x9b\x2c\x4f\xdf\x80\x25\x09\x18\x48\x73\xb8\xc1\x9d\x9b\x8e\x09\xb1\x0d\x6d\x85\x48\x93\x5e\xcb\x34\xe9\xbf\x5a\x9b\x4d\x77\xd7\xb6\x1d\x0d\xbe\x71\xdb\x1d\x6f\xdb\xa3\xd1\x3d\x70\x18\xff\x13\x00\x00\xff\xff\xb1\x7e\x9f\x27\x22\x05\x00\x00")

func layoutsOutsideHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutsOutsideHtml,
		"layouts/outside.html",
	)
}

func layoutsOutsideHtml() (*asset, error) {
	bytes, err := layoutsOutsideHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layouts/outside.html", size: 1314, mode: os.FileMode(420), modTime: time.Unix(1506067033, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutsProfileHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x5f\x8f\xe4\x46\x11\x7f\x9f\x4f\x51\xe7\x8b\xd8\x19\x29\xb6\x95\x84\x88\x84\xb3\x47\xba\xdb\x9b\x88\x45\xb9\xcb\x71\xbb\x2b\x81\xa2\x3c\xf4\xb8\xcb\x9e\x5e\xda\xdd\x4e\x77\xdb\x7b\xab\xd1\x48\xa0\x08\xc1\x21\x45\x09\x52\x04\x3a\x29\x79\xe0\x0d\x24\x04\xbc\x25\x1c\x42\x7c\x99\xec\x1c\x7c\x0b\xd4\x6e\xdb\xeb\xf9\x7b\xbb\x9c\x60\x1f\x76\xdc\x5d\x55\xbf\xae\xfa\x75\xf5\x9f\xea\xf9\x1c\x28\xa6\x4c\x20\x78\x53\xa2\xd1\x83\xc5\x62\x10\xdd\xba\xff\xc1\xe1\xc9\x4f\x1e\x4d\x60\x66\x72\x3e\x1e\x44\xf6\x07\x38\x11\x59\xec\xa1\xf0\x6c\x07\x12\x3a\x1e\x00\x44\x39\x1a\x02\xc9\x8c\x28\x8d\x26\xf6\x4a\x93\xfa\xef\x78\x57\x82\x99\x31\x85\x8f\x1f\x97\xac\x8a\xbd\x1f\xfb\xa7\x77\xfd\x43\x99\x17\xc4\xb0\x29\x47\x0f\x12\x29\x0c\x0a\x13\x7b\x47\x93\x18\x69\x86\x3d\x3b\x41\x72\x8c\xbd\x8a\xe1\x79\x21\x95\xe9\xa9\x9e\x33\x6a\x66\x31\xc5\x8a\x25\xe8\xd7\x8d\xd7\x81\x09\x66\x18\xe1\xbe\x4e\x08\xc7\xf8\x0d\x6f\x3c\xb0\x38\x86\x19\x8e\xe3\xf9\x1c\x0c\xe6\x05\x27\x06\xc1\xab\xbb\x3c\x08\x60\xb1\x88\x42\x27\xb7\x9a\x9c\x89\x9f\x82\x42\x1e\x7b\x7a\x26\x95\x49\x4a\x03\x2c\x91\xc2\x83\x99\xc2\x34\xf6\xc2\x94\x54\xb6\x1d\xb0\x44\x36\xd8\xb7\x7c\x1f\xee\x49\x69\xb4\x51\xa4\x80\x44\x2a\x84\xc3\xe3\x63\xf0\xfd\x75\x3c\x73\xc1\x51\xcf\x10\x4d\x07\x96\x68\x1d\x4e\x5b\xd3\x20\x67\x22\x48\xb4\xb6\xb0\x2d\xee\x61\xa9\x8d\xcc\x37\xf0\x7a\xe6\x4c\x68\x46\xb1\xb6\xdb\x18\x66\xbc\x8e\xe3\x64\x90\x4a\x05\x66\xc6\xf4\x15\x1b\x0e\x7c\x85\x1f\x3b\x90\x76\xfc\x74\x30\x3f\x38\x79\xf0\xfe\xdb\xa0\x67\x2c\x07\x22\x28\x3c\x46\x5d\x48\x41\x83\x33\x07\x79\x34\x79\x07\x74\x59\xd8\x49\x02\x99\x36\xca\xc8\x31\x47\x61\x74\x6d\x90\x23\x65\x04\x3e\x2e\x51\x31\xd4\x6d\x44\xb7\x7c\xff\x43\x96\x02\x37\x70\x34\x81\x77\x3f\xb2\x7d\x00\x91\x4e\x14\x2b\x0c\x68\x95\xc4\x9e\x4d\x1c\xfd\xfd\x30\x94\x5a\x07\x39\x79\x92\x50\x11\x24\x32\x0f\x6d\x1e\xbe\xad\x67\xac\x0a\xdf\x0a\xbe\x17\xbc\x79\xd5\xae\x99\x3c\xd3\xde\x38\x0a\x1d\xcc\xf5\x31\x95\x0b\x29\x7c\x23\xf8\x6e\xf0\x66\xdb\xda\x8a\x17\xdd\xfa\x10\x05\x65\xe9\x47\x36\x8c\x96\xa0\xb3\x1f\x95\xa8\x2e\xda\xc8\xfa\xe3\x85\x67\x3a\x3c\xb3\x91\x5f\x6c\x41\x8b\x42\xb7\x84\xa2\xa9\xa4\x17\x2d\x29\xf0\x1e\x7b\x82\x14\x04\xa9\xa6\x44\xb5\x90\x82\x54\x90\x70\xa2\x75\xec\x35\x02\xf7\xe3\x53\x4c\x49\xc9\x4d\xdb\x4c\xad\xad\x6f\x64\xe1\x35\xb1\x53\xd6\x19\xda\xf5\x43\x98\x40\xd5\xc8\x56\xa5\x0d\x80\x75\xa8\xa7\x01\x10\x4d\x4b\x63\xa4\x00\x73\x51\x60\xec\xb9\x86\xb7\x66\x64\x64\x96\x71\x84\x44\x72\x4e\x0a\x8d\xd4\x03\x4a\x0c\x69\xba\xed\xc0\xae\xbf\xed\x26\x2a\xb3\xfb\xc4\x6d\x67\xed\x01\x51\x8c\xf8\xf8\xa4\x20\x82\x22\x8d\xbd\x94\x70\xab\x5b\xf7\x5a\x9f\x95\xe4\xdd\x50\x3d\xc7\x2c\xd1\x05\x11\xad\x2b\x5a\xf9\x52\xf0\x0b\x6f\x7c\xe2\x9c\x11\xa4\x62\x19\x31\x4c\x8a\x28\xb4\x7a\x3b\x0d\xed\xb2\xf6\x6b\xe8\xff\xbd\x62\x14\x3a\x02\x7b\x3d\x64\x8d\xcb\xa9\x22\x82\xb6\x3b\xc5\x6d\x6f\xbc\xfc\xf4\xeb\xe5\x57\x7f\x5d\x3e\x7b\xfe\xaf\x4f\xfe\xf1\xed\xf3\xdf\x44\x21\xe9\x66\x2f\xa4\xac\x5a\x99\x4a\x46\x3b\x9e\xae\x26\xdd\x71\xdf\x26\x48\x37\x17\x3d\x17\x4a\xde\xf3\xa1\x55\xec\x7d\x2a\x96\xcd\xcc\x2a\xf3\x9c\x8d\x23\xd2\xee\x47\xe7\x38\x0d\xb9\xcc\x64\x69\xe6\x73\x08\xea\x64\x3f\x36\x8a\x89\x0c\x16\x0b\x6f\xfc\xe2\xd9\xdf\x2f\x7f\xf9\xdc\xfa\x1d\x85\x9c\xf5\xb9\x28\xf9\x6a\x28\x36\xfb\xc3\x40\x90\xaa\xf3\xb2\x49\xff\x5e\xac\x51\x28\x48\xe5\x16\xde\xb5\x53\x5b\xc9\x73\x28\x94\x4c\x19\xc7\xd5\x28\x56\x10\xb8\x9f\x53\xff\xad\x15\x85\x75\xa5\x06\xc4\xb7\x5b\xef\x7a\x32\x76\xfa\x76\x09\x1f\x1f\xdd\x9f\xdc\xbb\xfb\x18\x4e\x8f\x27\x8f\x1f\x1d\x1d\x76\x61\xbc\x1c\xba\xd4\xa8\x0a\x96\x6c\x85\xae\x6d\x58\x9e\xb9\x9d\xc5\x72\x9d\x94\x4a\xa1\x30\xa7\x1a\x55\x70\xb7\x22\x86\x28\x4b\x79\x97\x87\x79\xe6\xbb\xad\x4c\xb3\xca\xae\x28\x6e\x62\x6f\xbb\xd3\xfd\x54\xda\x88\x66\xf2\xf0\xfe\x75\x23\x5a\x0f\x1e\x4e\x8e\x4e\xde\x9f\xdc\x30\x7e\x77\x44\xef\x64\x60\x9f\x95\x6f\x2f\x0d\x3b\x4d\xed\xdf\x3a\x6d\xf6\x9f\x35\xb2\xe7\xdd\x8e\x01\x77\x91\xe3\xe0\x58\xba\x0a\xf8\x58\x72\xdc\x8d\xb5\xd7\xf9\x33\x39\xbd\x91\xef\x76\xa8\xe0\xe1\xab\x38\x8f\x82\x6e\x35\xbd\x59\x42\xec\x9f\xe5\x7e\x4e\xdc\x3b\x3d\x39\xf9\xe0\xe1\xf1\x0d\x13\xc2\x6d\x9a\x7a\x77\x4a\xec\x3b\xa3\xa6\x46\xc0\xd4\x08\x5f\x97\x49\x82\x5a\xbb\xef\xdc\x1b\xbf\x27\x39\x97\xe7\x9b\x3b\xf2\x7f\x01\x4d\x89\xc8\x50\x75\xc8\x0f\x50\x6b\x92\xe1\x3e\xe8\xeb\xf3\xfb\x12\xc6\xfa\xe4\x3e\x98\x3c\x3c\xbd\x21\xb3\x39\x8a\x72\x37\xad\x2b\x07\xc3\xde\xcc\x8c\xfa\x3b\xfb\x0e\x95\xfe\x79\xb1\x17\xac\xd6\x66\xed\xd0\x19\xbf\x28\x66\xf6\x48\x85\xee\xab\x76\xdd\x9e\xae\x2f\x1d\xf4\xf2\x9b\xcf\x2f\x3f\xfb\x1a\x7a\xa7\xe6\xd6\xc1\xc2\xfd\xee\xdf\x34\xba\x30\xe1\xcc\x5e\x7e\x5f\x31\xca\x84\xcb\x92\x5e\x2f\xcc\xe7\x5f\xbc\xf8\xe2\x0f\xff\xcf\x30\x6f\xbf\x62\x6c\x29\x27\xd9\x35\x67\xf0\xcf\x97\xbf\xfe\xe3\xab\x84\xd6\xbf\x68\xac\xf6\xbf\x6c\x0d\xee\x58\x50\x1b\x86\x9b\x1d\x9b\x37\x8b\x77\xd7\x08\x73\xf5\x23\x66\x4c\x40\x41\x32\x6c\xab\xdb\x8d\xe1\x56\x8a\xb3\x46\xe9\xaa\x3c\xdb\xea\x41\xef\xb2\x64\x3f\x60\x30\x68\x4b\x12\xb7\x8b\x19\x7c\x62\xc2\x33\x52\x11\xd7\x5b\x3b\x36\x4c\x4b\x91\xd8\xdb\x32\xdc\x4d\x0c\xab\xf0\xc8\x60\x3e\x1c\x01\xcc\x6b\xcc\xd7\x86\x07\xc1\xfa\xb6\x01\x9c\x8d\xc9\xc1\x28\x40\x92\xcc\x3a\xeb\x21\x7b\x1d\xc8\xa8\xb1\x02\xa8\x88\x82\x82\x98\x59\x7d\xc0\xc6\x70\xce\x04\x95\xe7\x01\x97\x49\x7d\x31\x0f\x5a\xd1\x9d\x46\x9d\xa5\x30\xbc\x52\x8f\xe1\xb5\x21\x19\x05\xc4\x18\x35\x3c\xb0\x59\x77\x30\xba\x42\x06\x27\x2c\x88\x3d\x0c\x87\xa3\x80\x50\x7a\x68\xf9\x1e\x1e\x90\xda\xff\x83\x51\x0b\xea\x8e\xb7\xc5\x68\x60\xff\x0d\x47\x77\x06\xab\xd5\x5c\x57\x70\xa5\x52\x1a\xec\x0a\xae\xa6\xd5\xcc\xa1\x6b\x5d\xaf\xa6\x2a\x5a\x99\xa5\xd9\xcf\x4b\x83\xd4\x1b\x7f\x27\x91\xc5\xc5\x9d\xe5\xdf\x7e\x7b\xf9\xe9\xef\xdc\x8d\xfe\xdb\x7f\xfe\x7e\xf9\xf3\xbf\x2c\xbf\x7c\xfa\xef\x67\x9f\x5f\xfe\xe2\x4f\x97\x9f\x7d\xf3\xe2\xe9\xaf\x96\x5f\x7d\xb2\x7c\xfa\xb3\xe5\x97\x4f\x83\x28\x2c\x36\x6e\xbe\xce\x8b\x9d\xaf\x0f\x3f\x24\x15\x39\xae\x23\x1b\x00\xc4\x37\xfe\xeb\xd5\xe5\xf0\x88\x93\x04\x29\x10\x03\x66\x86\x80\x82\xda\xc2\xde\x7e\x52\x99\x94\xb6\xae\x07\x2d\xeb\xb6\x4d\x5d\x0d\x5c\x12\x0a\x29\xd1\x3d\xfe\xd6\x6b\xe0\xd5\xe7\x8e\x33\xed\x41\xaf\x0e\x5e\x7f\xae\xa8\xbb\xf5\xb6\xd7\x89\x46\xd4\x2c\x80\x28\x74\x85\x73\x14\xba\x27\xaa\xf9\xbc\xf6\x75\xb1\x18\xf4\x1e\xb4\x9a\x07\x8d\xc5\x62\xab\xb4\x03\xec\xcb\xff\x13\x00\x00\xff\xff\x6a\x2a\x22\x96\x0f\x13\x00\x00")

func layoutsProfileHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutsProfileHtml,
		"layouts/profile.html",
	)
}

func layoutsProfileHtml() (*asset, error) {
	bytes, err := layoutsProfileHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layouts/profile.html", size: 4879, mode: os.FileMode(420), modTime: time.Unix(1506067693, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"includes/authorize.html": includesAuthorizeHtml,
	"includes/client_detail.html": includesClient_detailHtml,
	"includes/clients.html": includesClientsHtml,
	"includes/index.html": includesIndexHtml,
	"includes/login.html": includesLoginHtml,
	"includes/new_client.html": includesNew_clientHtml,
	"includes/register.html": includesRegisterHtml,
	"layouts/inside.html": layoutsInsideHtml,
	"layouts/outside.html": layoutsOutsideHtml,
	"layouts/profile.html": layoutsProfileHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"includes": &bintree{nil, map[string]*bintree{
		"authorize.html": &bintree{includesAuthorizeHtml, map[string]*bintree{}},
		"client_detail.html": &bintree{includesClient_detailHtml, map[string]*bintree{}},
		"clients.html": &bintree{includesClientsHtml, map[string]*bintree{}},
		"index.html": &bintree{includesIndexHtml, map[string]*bintree{}},
		"login.html": &bintree{includesLoginHtml, map[string]*bintree{}},
		"new_client.html": &bintree{includesNew_clientHtml, map[string]*bintree{}},
		"register.html": &bintree{includesRegisterHtml, map[string]*bintree{}},
	}},
	"layouts": &bintree{nil, map[string]*bintree{
		"inside.html": &bintree{layoutsInsideHtml, map[string]*bintree{}},
		"outside.html": &bintree{layoutsOutsideHtml, map[string]*bintree{}},
		"profile.html": &bintree{layoutsProfileHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

