// Code generated by go-bindata.
// sources:
// includes/authorize.html
// includes/client_detail.html
// includes/clients.html
// includes/index.html
// includes/login.html
// includes/new_client.html
// includes/register.html
// layouts/inside.html
// layouts/outside.html
// layouts/profile.html
// DO NOT EDIT!

package web

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _includesAuthorizeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xcd\x6a\xdb\x40\x10\xbe\xfb\x29\x86\xbd\xcb\xb2\x89\x31\x39\xc8\xea\xa5\x97\x5e\x7a\xe9\x13\xac\xa4\xb1\xbd\x78\xb5\x2b\x56\x6b\xa7\x46\xe8\xd2\xb4\xd4\xa1\x6d\x0a\x2d\xa5\x25\x38\x98\xd0\x40\xd3\x5b\x21\x50\x68\x43\xdf\xc6\xd9\xf8\x31\x8a\xfe\x2c\xb9\xb8\xc7\xe4\x62\x0f\xf3\x8d\xbe\x9f\x1d\xad\x92\x04\x02\x1c\x32\x81\x40\x34\xd3\x1c\x49\x9a\x9a\xd3\x85\x39\x3f\x4e\x12\x40\x11\x40\x9a\xb6\x5a\x8d\x19\x5f\x0a\x8d\x42\x93\xac\xef\x04\x6c\x06\x3e\xa7\x71\x3c\xc8\xfb\x94\x09\x54\xc4\x6d\x01\x34\x91\x88\x8e\xd0\x1a\x23\x0d\x4a\x0c\xc0\x19\x77\xdd\x42\xc3\xb1\xc7\xdd\x7c\xde\x0e\xd8\x2c\x2b\x92\x04\xd8\x10\xda\xa8\x94\x54\x99\xc4\x2e\x15\xe5\xa8\x34\xe4\xbf\x56\x40\xc5\x08\x15\x01\x25\x39\x96\x08\x71\x93\xa4\x7e\xb6\x66\x44\x1e\x63\x49\x36\x94\x2a\x04\xea\x6b\x26\xc5\x80\x10\x08\x51\x8f\x65\x30\x20\x91\x8c\x75\x65\xae\xa1\x97\x4d\x5b\x23\x25\xa7\x51\x09\x02\x38\x91\xeb\x78\x99\x8e\x54\xd0\xf6\x39\x43\xa1\x9f\xd2\x10\xdb\xcf\xb4\x62\x62\x54\xb5\x9e\x3c\x06\x48\x53\xc7\xf6\x5c\x30\xc7\xd7\xeb\x9b\xaf\x9b\x8b\x2b\xf3\xe2\xca\x9c\x7c\xdb\x5c\xbc\xbd\x3b\x7b\x69\x3e\xbe\x5b\xff\x59\xb6\x1d\x3b\xaa\x78\xcb\xe0\x5a\x4e\x50\x14\x5e\x4b\xb5\xe2\xa0\x6e\x2f\xcf\xd6\xbf\x5e\x99\xe5\x89\xf9\xb4\x30\xcb\x15\x14\x1e\x6a\xb5\x52\x6c\xf3\xfa\xfa\x51\x83\xb4\x99\x45\xd1\x80\xc9\x6d\x0c\x00\x87\x53\x0f\xf9\x0e\x6a\x31\xc1\x99\xc0\xc6\x10\x80\xc3\x44\x34\xd5\xa0\xe7\x11\x56\x1c\x20\x68\x88\x03\xc2\xd9\x10\x35\x0b\x91\xc0\x8c\xf2\x29\x0e\xc8\x41\xbf\xd3\x21\x2e\x74\xe1\xf6\xc7\x7b\xf3\xf9\x67\xad\x64\xe7\x52\xf7\x29\x7d\xd8\xef\x55\xda\x97\xdf\x1f\x52\xb8\xdf\xe9\x1d\x76\x3a\x04\xfc\x31\xfa\x13\x0c\x32\x07\xe6\xcb\xca\x2c\x57\xff\x33\xb1\x7d\xd3\xcb\xa5\x97\x57\xec\x1f\x68\x67\x71\xf2\x88\xec\x5b\xa8\x2f\xb9\x15\x06\xd6\x01\x64\x45\x1c\x5a\xbd\xbc\x78\x1e\x5b\xfd\xe6\x96\x9b\x51\xe2\xa9\x17\x32\x4d\x2a\x02\x4f\x0b\xf0\xb4\xb0\xf8\x28\xff\xf3\xb8\xf4\x27\x79\x15\x29\x16\x52\x35\xaf\x42\x53\xce\xe5\xd1\x36\xb1\x39\x5d\xac\x7f\x2f\xc8\xde\x3c\x0f\x63\xaf\xba\xf9\x85\xbb\x00\xc5\xbc\x36\xf7\xe6\xc3\xdd\xcd\xf9\x3e\x73\xdb\xd2\xb1\xb3\x5b\x5d\x7d\x19\x8a\xd3\x2f\xc1\xba\xf1\x37\x00\x00\xff\xff\xbe\x34\xe1\xbd\x15\x05\x00\x00")

func includesAuthorizeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesAuthorizeHtml,
		"includes/authorize.html",
	)
}

func includesAuthorizeHtml() (*asset, error) {
	bytes, err := includesAuthorizeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/authorize.html", size: 1301, mode: os.FileMode(420), modTime: time.Unix(1505119402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesClient_detailHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x6a\xf4\x30\x10\x85\x6b\xfb\x14\x83\x7a\xdb\x6c\xaf\x5f\x17\x58\xf8\x09\xe4\x04\x13\x6b\xbc\x16\xcc\xca\xc2\x52\x36\x2c\x42\x45\x9a\x25\xc7\x08\x29\xd2\x04\xe2\x32\x45\xce\xb3\x71\x8e\x11\x50\x58\xc7\x45\x9a\x34\x2a\x9e\x3e\xbe\x37\xbc\x18\x41\x53\x67\x2c\x81\x08\x26\x30\x89\x94\xce\xaf\x4f\x1f\x0f\x6f\xf3\xcb\xf4\x39\x3d\xcf\xef\xa7\x18\x81\xac\x86\x94\xca\x72\x05\xb7\x83\x0d\x64\x83\xc8\x39\x00\x80\xd4\xe6\x00\x2d\xa3\xf7\xff\x84\x1b\x87\xce\x30\x55\x17\x48\x65\xa2\x90\xfd\x66\x21\x70\x47\x55\x4f\xa8\x69\x14\x6a\x29\x04\xe9\xf7\xc8\xac\x62\xac\x5b\x36\x64\x43\xfd\x1f\xf7\x54\x5f\x87\xd1\xd8\x5d\x4a\xb2\xf9\xfe\x96\x4d\xbf\x51\x65\x51\x48\x77\xd1\x31\xa1\x16\x6a\x4b\x47\x90\xde\xa1\x5d\x62\xbc\x21\x86\xfc\x56\x9a\x3a\xbc\xe5\x20\x56\xf2\x2d\x1d\xb3\xd4\xa1\x55\xb2\x71\xbf\x29\xcf\xd3\x69\x7e\xbc\xff\x93\xf5\x0a\xbd\xbf\x1b\x46\xbd\x3e\x7b\x69\xc8\x4b\x35\xda\x1c\x54\xf9\xb3\xeb\x57\x00\x00\x00\xff\xff\x93\x65\x6c\x6e\x84\x01\x00\x00")

func includesClient_detailHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesClient_detailHtml,
		"includes/client_detail.html",
	)
}

func includesClient_detailHtml() (*asset, error) {
	bytes, err := includesClient_detailHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/client_detail.html", size: 388, mode: os.FileMode(420), modTime: time.Unix(1504778362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesClientsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x8b\xd4\x40\x10\x3d\x67\x7e\x45\xd1\x78\xcd\xc4\xb3\x24\xb9\x8b\xe0\x61\xc5\x1f\xd0\x93\xae\x64\x1a\x6a\x3a\xa1\x53\xd9\xdd\x21\xf6\x49\x90\x3d\x78\x5c\x3c\xb8\xe0\xc1\xd3\x82\xa0\x0b\x1e\x84\xd5\xbf\x93\x59\x6f\xfe\x05\x49\xe7\x63\x22\xce\x61\x6f\xd5\x55\xaf\xdf\xab\x7e\xfd\xda\x16\x14\xe6\xda\x20\x08\xd6\x4c\x28\x9c\xeb\xbe\x7e\x3e\x5c\xfd\x78\xf8\xf2\xad\xbb\xbf\x7e\xb8\xbe\x6d\x5b\x40\xa3\xc0\xb9\xd5\x6a\x01\xce\x4a\xc3\x68\x58\xf8\x3e\x00\x40\xac\xf4\x39\x64\x24\xeb\x3a\x11\x95\x2d\x73\x4d\x18\x4e\xa0\xd4\x23\x82\xb6\x05\x9d\x03\xa1\x81\x75\x46\x1a\x0d\xd7\xf0\x06\x88\xe1\x69\x4f\x02\x1e\xf2\x0f\x4b\x43\x14\x5a\x5d\x6c\x7b\x82\x60\x18\xcb\x69\xb8\x61\x03\x1b\x36\xa1\xc2\x5c\x36\xc4\x02\xb6\x16\xf3\x44\x44\x17\xb8\x89\x46\xf2\xc8\xe0\x85\x00\x5b\x12\x26\x62\xd3\x30\x97\x46\xa4\x71\x5d\x49\x33\x71\x14\xb4\xaf\xb6\x3a\x2b\x0d\xcc\x55\x58\x51\x53\x0b\x90\x56\xcb\x70\xab\x95\x42\x93\x08\xb6\x0d\x8a\x34\x8e\xfa\xab\x69\x1c\xc9\x74\xda\x35\x52\xfa\x7c\x3e\x54\x13\x2b\xa1\x54\x22\x3d\x7c\xbf\xed\xde\xbd\x1f\x1c\x8c\xa3\x2a\x5d\x05\x41\xdc\xd0\x8c\xd1\x35\x87\x85\x2d\x9b\xaa\x7f\x5a\xe0\xad\xb1\xd2\x14\x08\x4f\x86\xe5\xe1\x59\x72\x34\xc9\xb9\x55\x10\x04\x41\x4c\xfa\xff\xfb\xa1\x66\xdc\x79\x92\x1e\x21\x4f\xd9\xd0\xb6\x23\xe9\xfa\x05\xee\x9d\x13\xe9\xb1\xf1\x52\xee\x70\xfd\x8a\xad\x36\xc5\xa4\xb2\x78\xc9\xe2\x03\x60\x52\x58\xfa\x37\x18\x14\x5e\xd6\xc0\x78\xc9\xe1\xae\x61\x54\x22\xed\x6e\x3e\xfd\xbe\x7b\xfb\xe7\xd7\xc7\xa3\xcc\x19\x2a\x6d\x31\xe3\xd7\x67\xcf\x47\x35\xe7\x46\x3f\x47\xda\xc1\x21\x5f\xc9\xa1\x8a\x23\xd2\xb3\x37\x63\x00\x7d\x08\xe2\xa8\xa1\x31\x0f\xfd\x84\x6a\x9c\x47\x27\xf2\x51\x59\xbd\x93\x76\xef\x6b\x2a\x1e\x1b\x93\xee\xea\xa6\xfb\x79\x7f\xf8\x70\x37\x7d\xa0\x5c\x28\x0e\xbb\x0c\xab\xf8\x04\x1c\x9b\x7f\x03\x00\x00\xff\xff\x89\xf0\xe1\x68\x4e\x03\x00\x00")

func includesClientsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesClientsHtml,
		"includes/clients.html",
	)
}

func includesClientsHtml() (*asset, error) {
	bytes, err := includesClientsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/clients.html", size: 846, mode: os.FileMode(420), modTime: time.Unix(1504774954, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x7d\x6f\xdb\xc6\x19\xff\x3f\x9f\xe2\xd9\xed\xef\x3b\x8a\x94\x2d\xd7\x83\x24\xa0\x59\x5d\x2c\x43\xec\x06\x7e\xf9\x3b\x38\x91\x27\xe9\xda\x23\x29\x90\x47\x29\xa9\x67\xc0\xc9\xbc\xad\xe9\xd6\xc5\x41\x5d\xa0\xf0\x5c\xcc\x03\xd6\x75\x2b\x16\xb7\x7b\x69\x63\xd8\x71\xf2\x5d\x36\xbd\xc4\xdf\x62\x38\x52\x2f\xb4\x4c\x52\xb2\xe5\xd5\x30\x04\xf2\xee\xb9\xdf\xdd\xf3\xfc\x7e\xf7\xdc\xc3\xdb\xdc\x04\x8b\x55\xb9\xc3\x00\x49\x2e\x05\x43\x5b\x5b\x9d\xe3\xdd\xce\xd3\x17\x6f\x8e\x5e\xf5\xce\x8e\x00\xc3\xcf\x39\x7b\x9f\x33\xd8\xdc\x04\xe6\x58\xb0\xb5\x75\xeb\x56\x6c\x8c\xe9\x3a\x92\x39\x12\xa9\xf6\xa2\xc5\x9b\x60\x0a\xea\xfb\xa5\xb0\x9d\x72\x87\x79\xa8\x7c\x0b\x00\x20\xde\xe7\xb9\x2d\x68\x78\x6e\x95\x0b\xd6\xef\x1d\xb7\x30\x5d\x81\x6d\x0b\xe7\x63\xdd\xe3\x26\x7d\x00\xec\x73\x8b\x55\xa8\x37\x66\x19\x5a\xff\x08\x63\x58\xbb\xf3\xce\xd2\xed\xb7\x57\x61\x63\x6d\x69\xf5\xde\x9d\x9f\x02\xc6\x09\x86\x09\xb0\x81\xcf\xbc\x06\x37\x13\x60\xc3\x11\xdc\xae\x81\xef\x99\x25\xb4\xb9\x09\xc4\x0c\x3c\x8f\x39\x72\xc3\x67\x1e\x79\xbb\x49\x25\xf5\x60\x6b\x0b\x0d\x10\xb9\x5d\xc3\x1e\xf3\x1b\xae\xe3\xf3\x26\x43\x40\x85\x2c\xa1\xa4\xe5\x6a\x16\x6f\xa6\x78\xb1\xb4\xf2\xce\x74\x9e\x8c\xbb\x0c\xeb\x77\xd6\xef\x2e\x5d\xc9\xeb\x48\x05\x29\x7e\x67\x8d\xc1\x0e\xb5\xd3\x06\xaa\xbf\xf1\x50\xa9\x1f\x35\x44\x49\x27\x71\xb2\xe4\x80\x44\x50\xbc\x7a\x11\x6c\xd5\x15\x2c\x0d\x27\x73\xd1\xef\xbb\x95\x2b\xac\x59\x4d\x43\x56\xae\xbb\x68\xe6\x58\x09\xc3\xae\x42\x7c\x16\x9f\x71\xee\x6f\x6f\xac\xaf\xbf\xb7\xb2\x76\x25\xe2\x2b\x81\x94\xae\xe3\xa7\x51\x1f\x75\x83\x7c\xd8\x60\x25\x14\xbd\x0c\x35\x5e\x91\x0e\x54\xa4\x83\xfd\xc0\x34\x99\xef\x47\xcf\x36\x2a\xbf\xeb\x0a\xe1\xb6\x8a\x5a\x64\x3e\x03\xb0\x45\x9d\x1a\xf3\x86\xb8\xcb\xcc\xf7\x69\x8d\xa5\x03\x4f\x1b\xd3\xcc\x38\xc5\x03\xba\xbc\xb4\xb2\x71\xa5\x68\xda\xcc\x09\xd2\x42\x19\x88\xc1\x08\x87\x36\x33\xd4\x57\x14\x7c\x60\x48\x4d\xa9\xb2\x47\xba\x6d\x68\x4f\xa1\xee\xb1\x6a\x09\x69\x2d\x96\xa5\xea\xd0\x76\x08\x5d\x13\x0f\x1b\x75\x6e\xba\x0e\x0c\x9f\x42\x0f\x50\xb9\xa8\xf1\x6c\x90\xe8\xa4\x80\xa2\x46\x33\x9c\xd0\x44\x06\x4a\x31\xab\xf3\x92\x4f\x9a\x29\x38\x73\x64\x9a\x46\xa7\xf3\xcd\x14\x6e\x60\x4d\xe3\xdc\xc9\x5e\x6f\xef\xaf\x3f\x8c\x73\x3f\x9e\xc9\xa3\xaa\xa0\xb5\xa9\xd8\x3a\xea\x7c\xfc\xb7\xeb\x3a\x54\xd4\x02\x71\xf5\x8d\x96\xb8\x6f\xc6\x06\x8d\xbf\x5e\x2e\x04\x16\xa7\x28\x04\x06\x95\x48\xc2\x62\xaa\xae\x67\x03\x73\xcc\x28\xc5\xd8\x81\x90\xbc\x41\x3d\xa9\xa9\x76\x6c\x51\x49\x11\xd8\x4c\xd6\x5d\xab\x84\xee\xbd\xb7\xb6\x8e\x40\xed\x36\xd7\xe9\x6b\x2e\x91\x9a\xf8\x0a\x42\x98\x9a\xe7\x06\x8d\xf0\xbc\x50\xaf\x64\xc9\xf3\x5c\x6f\x4d\x52\x19\xf8\x80\x56\xb8\xf9\x81\x3a\x34\x54\x95\x94\x96\x13\x04\xad\x30\x11\xaf\x9e\x3c\x57\xe0\xb0\x11\x41\xd5\xf5\x4a\x48\x6d\xc9\xfb\x0e\x37\x3f\x88\x8e\xd9\xee\xe7\xdf\xf5\xbe\xfa\xb6\xa8\x85\x26\x69\x55\x8a\xd3\x08\x64\x3f\xb1\x4a\xf6\x40\xa2\x0b\x2b\xee\x4f\x82\x80\x5b\xe3\xe8\x40\x3d\x4e\xb1\xc5\x7c\xd3\xe3\x15\x66\x55\x1e\x96\xd0\xa0\xef\x67\x4c\x34\x10\xa8\xa7\x51\x1b\x82\x26\x15\x01\xbb\x5c\x0d\x0d\x1c\x27\x6b\xd2\xe3\x4e\x2d\x2c\x8b\x1a\x82\x9a\xac\xee\x0a\x8b\x79\x25\xd4\x3b\x7b\xd6\x3b\x3d\x88\x7c\x49\x89\xcc\xc5\x90\x2e\xfb\xb5\x78\x3c\x7f\x01\x1e\x6d\x25\x1e\xc5\x91\xa8\xc6\x5b\x27\x30\xe9\xb9\xad\x29\x2a\x9f\x89\x7c\xbf\xcb\x3d\x5f\x0e\x08\x87\xbe\x86\x0b\x99\x89\x7e\x2a\xf6\xab\x43\xdc\x72\xe7\xab\x4f\x33\xb9\xbf\x16\xff\x23\xfc\x04\x01\x84\x9d\xe3\x0a\x08\x1b\xef\x67\x6a\x60\x18\x8c\x54\x11\x20\xc8\x2e\xc0\xc6\xd8\x8f\x45\x37\x9d\xfe\xcc\x4a\xec\x4a\x64\xde\xa5\xff\x17\x2e\x05\x1d\x52\xb9\xfb\xc9\xcd\x53\x39\x84\x4f\x60\x52\xf5\x8d\x13\xa9\xda\xb2\x79\x1c\xc4\xe1\xa6\x68\x1c\xc5\x75\x32\x8b\x89\xfb\x36\x9d\xdf\x0b\x7f\xb3\x26\xef\xe8\x8b\x6e\x63\xf5\x6e\x56\xf6\x8e\xd3\x13\x7e\xd7\x26\xd1\x83\x55\x0f\xd0\x10\x2f\x46\x15\x1d\x4d\x10\x71\x11\x35\xdc\x0f\x3c\x91\x7d\x58\x8c\xc4\x34\x82\x28\x17\xfd\x66\x0d\x1e\xd8\xc2\xf1\x4b\xa8\x2e\x65\xe3\x27\x9a\xd6\x6a\xb5\x48\x2b\x4f\x5c\xaf\xa6\x19\xb9\x5c\x4e\xf3\x9b\x35\x04\x2d\x6e\xc9\x7a\x09\x19\x39\x04\x75\xc6\x6b\x75\x59\x42\xfa\x02\x82\x26\x67\xad\xdb\xee\x83\x12\xca\x41\x0e\x8c\x1c\xe8\x0b\xa8\x5c\x6c\x50\x59\x07\xab\x84\x96\xf5\x1c\xe4\x04\x9e\x27\x06\xcc\x91\xc5\x7a\x9e\xe4\x9b\xf3\x44\xaf\xe7\xc9\x5b\x4d\x1c\x3d\xe4\xc3\x5e\x3c\x47\x16\x3f\xb4\x17\x49\x1e\x74\x9d\xcc\x0b\x9c\x27\x06\x36\x88\x5e\xc7\x86\xc8\x93\x39\x30\x48\xa1\x8e\xf3\x64\xde\xc4\x44\x87\x1c\x26\x06\xd1\xc3\x1f\x81\xc9\x5b\x60\x90\x7c\x1d\x17\xd4\x23\x36\x88\xa1\x4c\x06\xff\x46\xf4\xaf\x86\x16\x14\x0e\x0e\x71\x8c\x10\x1e\x0c\xa2\x9b\x98\xcc\x91\x3c\x26\x0b\xa0\x63\x52\x00\x35\x33\x29\x40\x9e\xe8\x26\xd1\xc9\x3c\x59\x20\x8b\xa0\x13\x83\x2c\xd6\xf5\x02\xc9\x9b\xa4\x00\x39\xd0\x15\xee\x1c\xe8\x6a\xd8\xa2\x20\x05\x1c\x59\x63\x32\xaf\xe6\xd2\xd5\x7c\x0b\x58\x27\xf3\x1f\xaa\xea\x4a\x45\xa1\x5c\x54\xd1\x2b\x43\xd1\x6f\x50\xa7\xdc\x3e\xfe\xb8\xfd\xf2\xb0\xf3\xe7\x7f\x77\x7e\xf9\xb4\xf3\x87\x57\xbd\x27\xbf\xf9\xcf\xf6\x5f\x8a\x5a\xd8\x37\xd8\xd2\x53\x4a\x32\x71\x8b\xc4\xa4\x37\xe9\xa0\x9b\x55\xe5\xcb\x6e\x25\x94\xed\xac\x05\x8a\x1d\xe1\x94\xbb\x4f\x7e\xdb\x3d\x38\x99\xbe\x3c\xe9\x8f\x9b\x90\xd5\x06\x56\x97\x73\x5a\xd4\x13\xcf\x68\x03\xdb\x94\x74\x16\x39\x9c\x9a\xcc\xba\xbf\xff\xb2\xbb\xf7\x7d\xef\x8f\xcf\xdb\xaf\xff\x74\xfe\xf5\xef\xde\x7c\xf3\xa8\xb7\xbf\x13\x39\xd5\x79\xfa\xa2\x77\xf8\x28\x2d\x4c\xbe\x4d\x85\x08\x57\x1c\x5f\x52\xdc\x2d\x95\xbe\x41\xfd\x60\x3b\x90\xcc\x42\xe5\xee\x47\xcf\xda\xa7\x7f\x6f\x1f\x7f\xd2\x7e\xb9\xdf\xd9\x7d\xd6\x3e\x3d\x6d\x9f\x7d\xd6\x3e\x39\xe9\xfe\x6b\xe7\xfc\xe0\x9f\xed\xb3\xc3\xde\xfe\x4e\x34\xe9\x7f\xb7\x1f\x17\xb5\x70\x86\xa9\x6b\xa5\x01\xb1\x37\x26\xa0\xd9\xf4\xc1\x6c\xca\x05\x2a\xf7\xf6\xbe\xeb\x3c\xdf\x3d\x7f\x7c\xd4\x3e\xfd\x7e\x7a\x91\x44\x83\x27\x68\xa4\x6f\x74\x59\x22\x61\x47\x5c\x21\x41\xff\x02\x6a\x8c\xfa\x37\xaf\x3e\xed\xfc\xea\xcb\xee\xc1\x93\xf6\xf1\x76\xfb\xf8\xeb\xee\x67\x1f\xf5\xf6\x77\xce\x1f\x1f\xf5\x8e\xfe\xd1\x39\xf8\xb6\xf3\xc5\x76\xaa\xa6\x62\x37\x5a\x08\x2c\xee\xd3\x8a\x60\xd6\x44\x9d\xc4\xd6\x35\xb3\x4c\xe2\x71\xcd\x16\xcb\xcd\xa4\x8d\x7b\xd4\xf7\x5b\xae\x67\x85\xc5\xd1\x6c\xca\x68\x0c\xa0\xca\x9d\x6f\x7e\xdd\x3b\x7c\x34\xbd\x2c\x86\x23\x27\x28\x63\x64\x17\xf1\x3f\x7a\x4f\xe0\x3f\x5a\xc4\xf4\xdf\x24\xa3\x48\x5c\x67\xa7\x5d\xb8\x03\xf3\x83\x8a\xcd\x65\xda\xe5\x1a\x2a\xb7\x5f\x7f\xd1\x79\xfe\x79\xd6\xe5\x97\x5a\xdb\xb4\x9f\xdc\xfd\xc7\x7e\xa1\x15\x7e\xb8\x6b\xc3\xdb\xfb\xf0\xd3\x7d\x74\xf3\xff\xbf\x00\x00\x00\xff\xff\xc1\x44\xbb\x8e\x2d\x18\x00\x00")

func includesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesIndexHtml,
		"includes/index.html",
	)
}

func includesIndexHtml() (*asset, error) {
	bytes, err := includesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/index.html", size: 6189, mode: os.FileMode(420), modTime: time.Unix(1504777115, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesLoginHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xbf\xaa\xd5\x40\x10\x87\xfb\x3c\xc5\x38\x7d\x0c\xdc\x7a\xb3\x56\xf6\x82\x4f\xb0\xc9\x4e\x92\xc5\xcd\x6e\xee\xec\xe6\x5e\x0f\x21\xa5\x82\x20\x78\x3b\x15\x2c\xb4\x10\xac\xb5\x50\x10\xf1\x65\x3c\x47\x1f\x43\x92\x93\x9c\x28\xf7\x68\x95\xfd\x33\xbf\x6f\xbf\x09\x33\x0c\xa0\xa9\x32\x8e\x00\xa3\x89\x96\x70\x1c\x7f\xbe\xfe\xba\x7f\xf2\x7e\x18\x80\x9c\x86\x71\x4c\x92\x3f\x6a\x4a\xef\x22\xb9\x88\xd3\xb9\xd0\xe6\x0a\x4a\xab\x42\xc8\xe7\x73\x65\x1c\x31\xca\x24\x01\x10\x95\xe7\x76\xbd\x9b\xd6\x69\x30\xb5\x33\x0e\x41\x95\xd1\x78\x97\x23\x42\x4b\xb1\xf1\x3a\xc7\xce\x87\x88\x32\x01\x00\x10\xcd\xc5\x99\x50\xda\x90\xd2\xc6\xd5\x28\x8f\x66\x22\x6b\x2e\x8e\xf5\xc3\x00\xa6\x82\xbb\xc4\xec\x79\x32\x9a\x19\xdd\x8a\x88\xf4\x38\xa6\x5a\xb9\x7a\xb2\x1a\x86\xad\x4e\x64\xdd\x29\xbf\xf4\x38\x27\xad\x2a\xc8\x42\xe5\x39\x47\xe3\xba\x3e\xde\x6f\x95\xb1\xb8\xe2\x02\xa7\xde\xd9\x1d\xca\xf9\x18\x94\xd6\x4c\x21\x88\x6c\x4e\x2d\xfe\x73\x0c\xe2\xae\xa3\x1c\xe9\x98\x76\xaa\xdd\x36\x46\x9f\x45\xcf\xcd\x4e\xbf\x90\xbd\x45\xe8\xac\x2a\xa9\xf1\x56\x13\xe7\xf8\xd7\x63\x08\x4c\x97\xbd\x61\xd2\xa0\xfa\xe8\x2b\x5f\xf6\x41\x9e\x77\x7f\xa0\x42\xb8\xf6\xac\x6f\xeb\xaf\x37\xff\x36\xef\x4e\xd9\xa3\xfc\xb6\x3f\xf9\xdf\xc2\xff\xa7\x85\xad\x76\xb5\x5f\xde\x2c\xfa\x18\xbd\x5b\x09\x45\x74\x50\x44\x97\xda\x7a\xfe\x74\x6c\x5a\xc5\xbb\x79\x5d\x58\x5f\x3e\xc2\xc5\x2e\xf4\x45\x6b\xe2\x36\x0c\x47\xca\x82\xec\xe4\x8f\x6f\x6f\x7f\x7d\x7f\x75\xf8\xf8\xee\xf0\xe6\xd9\xfe\xcb\xcd\xfe\xc5\xe7\xfd\xcd\xcb\x7b\x20\x14\x34\x4c\x55\x8e\xd9\x35\x15\x19\x53\x6d\x42\x24\x9e\xa6\xe2\xb2\x27\xde\x3d\x8c\x6c\x5c\x0d\xe3\x88\xf2\xf0\xe9\xc3\xfe\xe9\x73\x91\xa9\x09\x29\xb2\xa9\x31\x99\x24\x22\xd3\xe6\x4a\x82\xb8\x93\xa6\x90\x9d\xa6\x1d\xd2\x54\x26\xdb\x14\xfd\x0e\x00\x00\xff\xff\xb4\xe6\x34\x1e\x4d\x03\x00\x00")

func includesLoginHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesLoginHtml,
		"includes/login.html",
	)
}

func includesLoginHtml() (*asset, error) {
	bytes, err := includesLoginHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/login.html", size: 845, mode: os.FileMode(420), modTime: time.Unix(1507005560, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesNew_clientHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x4d\x8b\xd4\x40\x10\x3d\xcf\xfc\x8a\xa2\xee\x49\xfe\x40\x92\x9b\xa0\x07\x3f\xd8\xd5\xf3\x92\xa4\x6b\x76\x1b\x7a\xba\x43\x77\x65\xd7\x25\x06\x04\x3d\x8c\x07\xd1\xc3\x7a\x71\x57\x11\x2f\x0a\x82\xce\x4d\x58\xf7\xef\xf4\x8c\x3f\x43\x92\xcc\x30\xc9\xa2\x20\xba\x39\xa5\xaa\x5f\xbd\x7e\xf5\x1e\x5d\xd7\x20\x68\x26\x35\x01\xb2\x64\x45\xd8\x34\x7e\x71\xee\x7f\x5c\xfa\xaf\x1f\x57\x8b\xef\xeb\x2f\xdf\xea\x1a\x48\x0b\x68\x9a\xe9\x74\x00\x2e\x8c\x66\xd2\x8c\x5d\x1f\x00\x20\x16\xf2\x18\x0a\x95\x39\x97\x60\x69\xcd\x4c\x2a\x0a\xb6\xa0\xb4\x43\x4c\xe2\x99\xb1\x73\x98\x13\x1f\x19\x91\xe0\x83\xfb\xfb\x0f\x11\xb2\x82\xa5\xd1\x09\x46\x27\x94\x47\x85\x92\xa4\xd9\x6d\xf1\x93\x21\x67\x3b\x1b\x1c\x5a\x53\x95\x50\xd7\x10\xb6\x65\x78\xcb\x5a\x63\xf7\x39\xe3\xca\x01\xde\xcb\xe6\xd4\xca\xc1\x74\x3a\x81\xc1\x17\xab\x2c\x27\xb5\xa5\x69\x25\x59\xa3\x82\xae\x89\x30\x33\x36\xc1\xfe\xda\x03\xdd\x12\xa4\xfe\xf5\xcb\xf5\xa7\x65\x1c\x75\x80\xeb\x54\x52\x97\x15\x03\x9f\x96\x94\x20\xd3\x63\xc6\x91\xba\x0d\x37\x82\x14\x63\x52\xc8\xac\xcc\x02\x41\xae\xb0\x32\x27\x91\x9f\x26\xd8\xf6\x6f\x93\x2a\x11\xda\xbf\xbe\x46\x28\x55\x56\xd0\x91\x51\x82\x6c\x82\xfe\xf2\x6c\x7d\xf6\xb9\xd7\x13\x86\xe1\xf5\xbd\xc6\x2e\xdc\x75\x87\x5b\x0b\x9e\x80\xcd\x4e\x9a\x66\x87\x8e\x23\x21\x8f\xff\xc9\xd3\x3d\x12\xd2\x52\xc1\x8f\xf6\xee\xfc\x97\xb5\x76\xc3\x73\x50\x59\x89\xa9\x3f\x7f\xff\x73\xf9\xcc\x5f\x2c\xfd\xbb\xa7\x37\x66\xf4\xe8\x8a\xdf\x18\x3e\x3c\x1f\x1a\x3f\x9e\x1b\x05\xb0\xba\x78\xb1\x7a\xb3\x58\xbf\x7d\x0e\xab\x0f\x57\xfe\xea\xd5\xdf\x85\x30\xf2\xec\x0f\x59\x40\x57\x4f\x47\x2b\xe7\x15\xb3\xd1\x9b\x9d\x5d\x95\xcf\xe5\x6e\xeb\x9c\x35\xe4\xac\x03\x57\x15\x05\x39\x87\x69\xff\x46\xe3\xa8\x1f\x4a\xa7\x3b\xfa\x56\x4d\x5f\x6f\x62\xdf\xbd\xdf\x5f\x01\x00\x00\xff\xff\x67\x33\xe1\x1c\xec\x03\x00\x00")

func includesNew_clientHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesNew_clientHtml,
		"includes/new_client.html",
	)
}

func includesNew_clientHtml() (*asset, error) {
	bytes, err := includesNew_clientHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/new_client.html", size: 1004, mode: os.FileMode(420), modTime: time.Unix(1504768597, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _includesRegisterHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xb1\x8e\xd5\x3c\x10\x85\xfb\x3c\xc5\xfc\xd3\xe7\x8f\xb4\xb5\x63\x2a\x7a\x24\x9e\xc0\x89\x27\x89\x85\x63\x67\xed\xc9\x2e\x57\x51\x4a\xb6\x42\xa2\xe6\x01\x90\xa8\xa1\x40\x62\x5f\x87\xcb\xbe\x06\x8a\x93\xdc\x80\xf6\x42\x15\x7b\x66\xce\xf1\x37\xd1\x99\x26\xd0\xd4\x18\x47\x80\x6c\xd8\x12\xce\xf3\xcf\xaf\x9f\xcf\x0f\xef\xa7\x09\xc8\x69\x98\xe7\x2c\xfb\x6d\xa6\xf6\x8e\xc9\x31\x2e\x75\xa1\xcd\x1d\xd4\x56\xc5\x58\xa6\xba\x32\x8e\x02\xca\x2c\x03\x10\x8d\x0f\xfd\xde\x5b\xce\x79\x34\xad\x33\x0e\x41\xd5\x6c\xbc\x2b\x11\xa1\x27\xee\xbc\x2e\x71\xf0\x91\x51\x66\x00\x00\xa2\xbb\xb9\x22\xca\x3b\x52\xda\xb8\x16\xe5\x4a\x26\x8a\xee\x66\x9d\x9f\x26\x30\x0d\xfc\x4f\x21\xf8\xb0\x10\x25\x8f\x61\xb7\x60\x7a\xcb\xb9\x56\xae\x5d\xa8\xa6\xe9\x98\x13\xc5\x70\xd1\x6f\x3b\x26\xa5\x55\x15\x59\x68\x7c\x28\xd1\xb8\x61\xe4\x97\xbd\x32\x16\x77\xbb\x18\x72\xef\xec\x09\x65\x2a\x83\xd2\x3a\x50\x8c\xa2\x48\xaa\x8d\x3f\xc9\x80\x4f\x03\x95\x48\xab\xda\xa9\xfe\xb8\x18\x7d\xd5\x3a\x2d\xbb\xfc\xc2\xe0\x2d\xc2\x60\x55\x4d\x9d\xb7\x9a\x42\x89\x7f\x3c\x86\x10\xe8\x76\x34\x81\x34\xa8\x91\x7d\xe3\xeb\x31\xca\xeb\xec\xaf\x54\x8c\xf7\x3e\xe8\xe7\xf8\x7b\xe7\xef\xe4\xc3\x45\xbb\xc2\x1f\xf7\x0b\xff\x33\xfb\x7f\xac\x70\xcc\xee\xf4\xdb\x9b\xd5\xc8\xec\xdd\xee\x50\xb1\x83\x8a\x5d\x6e\xdb\xf4\x19\x82\xe9\x55\x38\xa5\x73\x65\x7d\xfd\x06\x37\xba\x38\x56\xbd\xe1\x23\x0c\xab\xcb\x66\x39\xc8\xf3\xb7\x2f\x4f\x8f\x1f\xd6\xe6\x8f\xef\x0f\x2f\x40\x28\xe8\x02\x35\x25\x16\xf7\x54\x15\xd6\xb7\xc6\x2d\x61\xb8\x1d\x29\x9c\x5e\x73\x30\xae\x85\x79\x46\xf9\xf4\xf1\xf1\xfc\xee\x93\x28\xd4\xe2\x24\x8a\x65\x1f\x99\x65\xa2\xd0\xe6\x4e\x82\xf8\x2f\xcf\xa1\xb8\x84\x1c\xf2\x5c\x66\x47\x78\x7e\x05\x00\x00\xff\xff\xdc\x4f\x27\xe6\x44\x03\x00\x00")

func includesRegisterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_includesRegisterHtml,
		"includes/register.html",
	)
}

func includesRegisterHtml() (*asset, error) {
	bytes, err := includesRegisterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "includes/register.html", size: 836, mode: os.FileMode(420), modTime: time.Unix(1503999402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutsInsideHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4f\x6f\xdc\x44\x14\xbf\xef\xa7\x78\x99\x4a\x9c\xb0\xa7\x49\x88\x48\xc1\x5e\x09\x42\x10\x41\x20\x02\x09\x12\xa8\xea\x61\xd6\xf3\xbc\x9e\x65\x3c\xe3\x7a\xc6\x4e\x56\xab\x95\x40\x15\x2a\x39\x54\x85\x0b\x10\xa9\x3d\x20\x71\x44\x82\x5b\x69\x10\xe2\xcb\x74\xb7\xf0\x2d\xd0\xf8\x5f\xbc\x9b\x54\x2a\x07\x7c\xb1\xdf\xbf\xdf\xbc\xf7\x7b\x33\x6f\x3c\x9b\x01\xc7\x58\x28\x04\x32\x62\x06\x09\xcc\xe7\x83\x60\xe3\x9d\x8f\xf6\x8e\x3f\x3f\xdc\x87\xc4\xa6\x72\x38\x08\xdc\x0b\x24\x53\xe3\x90\xa0\x22\x4e\x81\x8c\x0f\x07\x00\x41\x8a\x96\x41\x94\xb0\xdc\xa0\x0d\x49\x61\x63\x6f\x97\x5c\x1a\x12\x6b\x33\x0f\xef\x16\xa2\x0c\xc9\x67\xde\xa7\x6f\x79\x7b\x3a\xcd\x98\x15\x23\x89\x04\x22\xad\x2c\x2a\x1b\x92\x83\xfd\x10\xf9\x18\x7b\x71\x8a\xa5\x18\x92\x52\xe0\x49\xa6\x73\xdb\x73\x3d\x11\xdc\x26\x21\xc7\x52\x44\xe8\x55\xc2\xab\x20\x94\xb0\x82\x49\xcf\x44\x4c\x62\xb8\x49\x86\x03\x87\x63\x85\x95\x38\x9c\xcd\xc0\x62\x9a\x49\x66\x11\x48\xa5\x22\xe0\xc3\x7c\x1e\xd0\xda\xee\x3c\xa5\x50\x5f\x40\x8e\x32\x24\x26\xd1\xb9\x8d\x0a\x0b\x22\xd2\x8a\x40\x92\x63\x1c\x12\x1a\xb3\xd2\xc9\xbe\x88\x74\x83\xbd\xe1\x79\xf0\xb6\xd6\xd6\xd8\x9c\x65\x10\xe9\x1c\x61\xef\xe8\x08\x3c\x6f\x1d\xcf\x4e\x25\x9a\x04\xd1\x76\x60\xb5\x8a\x8e\xda\x68\x3f\x15\xca\x8f\x8c\xe9\x21\xef\x15\xc6\xea\xf4\x0a\xe2\x2a\x80\x50\x46\x70\xac\x22\xaf\xac\x35\x5c\x43\xaa\x4d\x10\xeb\x1c\x6c\x22\xcc\x25\x23\x35\xfc\x0a\x47\x6e\x29\x53\x73\xd4\x25\xf4\xde\xf1\x87\x1f\xec\x80\x49\x44\x0a\x4c\x71\xf8\x04\x4d\xa6\x15\xf7\x27\x35\xe4\xc1\xfe\x2e\x98\x22\x73\x8d\x02\x1d\x37\xce\x28\x31\x45\x65\x4d\x15\x90\x22\x17\x0c\xee\x16\x98\x0b\x34\x6d\x4d\x1b\x9e\x77\x5b\xc4\x20\x2d\x1c\xec\xc3\xad\x3b\x4e\x07\x10\x98\x28\x17\x99\x05\x93\x47\x21\x71\x9b\xc7\xbc\x41\xa9\x36\xc6\x4f\xd9\x69\xc4\x95\x1f\xe9\x94\xba\xbd\xb8\x63\x12\x51\xd2\x6d\xff\x75\x7f\xeb\x52\xae\xa8\x9c\x18\x32\x0c\x68\x0d\xf3\xf2\x98\x79\x5d\x12\xdd\xf4\x5f\xf3\xb7\x5a\xe9\x5a\xbc\x60\xe3\x36\x2a\x2e\xe2\x3b\xae\x8c\x96\xa0\xc9\xc7\x05\xe6\xd3\xb6\xb2\xfe\x7a\x74\x62\xe8\xc4\x55\x3e\xbd\x06\x2d\xa0\xf5\x31\x0a\x46\x9a\x4f\xbb\xa6\xbd\x2b\x4e\x91\x83\x62\xe5\x88\xe5\x2d\xa4\x62\x25\x44\x92\x19\x13\x92\xc6\x50\xbf\x3c\x8e\x31\x2b\xa4\x6d\xc5\xd8\xc5\x7a\x56\x67\xa4\xa9\x9d\x8b\x2e\xd0\x9d\x21\x26\x14\xe6\x8d\x6d\xd5\xda\x00\xb8\x84\x7a\x1e\x00\xc1\xa8\xb0\x56\x2b\xb0\xd3\x0c\x43\x52\x0b\x64\x2d\xc8\xea\xf1\x58\x22\x44\x5a\x4a\x96\x19\xe4\x04\x38\xb3\xac\x51\xbb\x85\x6b\x7d\xab\x66\xf9\xd8\xcd\x8a\x1b\x75\x34\x01\x96\x0b\xe6\xe1\x69\xc6\x14\x47\x1e\x92\x98\x49\xe7\x5b\x69\x5d\xce\xb9\x96\xdd\x52\xbd\xc4\x1c\xd1\x19\x53\x6d\x2a\x26\xf7\xb4\x92\x53\x32\x3c\xae\x93\x51\xac\x14\x63\x66\x85\x56\x01\x75\x7e\x2f\x0c\x74\x47\xdb\xab\xa0\xff\x7f\xc7\x80\xd6\x04\xf6\x34\x6c\x8d\xcb\x51\xce\x14\x6f\xa7\xc5\x0d\x32\x5c\x3e\x78\xb2\x7c\xfc\xdb\xf2\xfc\xe2\xef\x7b\x7f\x3e\xbb\xf8\x2e\xa0\xac\xeb\x1e\xe5\xa2\x5c\x69\xa5\xe0\x1d\x4f\x97\x4d\xaf\xb9\x6f\x37\x48\xd7\x8b\x5e\x0a\x85\xec\xe5\xd0\x3a\xf6\x3e\x73\x31\x4e\xec\x2a\xf3\x52\x0c\x03\xd6\x4e\xa4\x13\x1c\x51\xa9\xc7\xba\xb0\xb3\x19\xf8\xd5\x66\x3f\xb2\xb9\x50\x63\x98\xcf\xc9\xf0\xf9\xf9\x1f\x8b\xfb\x17\x2e\xef\x80\x4a\xd1\xe7\xa2\x90\xab\xa5\xb8\xdd\x4f\x7d\xc5\xca\x2e\xcb\x66\xfb\xf7\x6a\x0d\xa8\x62\x65\x6f\x08\xe3\x58\x28\xc8\xd8\x18\xdb\x2b\xe2\xba\x99\xd6\x98\xd6\xa6\x5a\x7d\xce\x62\xad\x2d\x76\xe7\xac\x91\x1a\x3a\x6a\xe9\xe5\x8e\x52\xd6\xda\x2c\x9e\x5a\x2f\x2d\x2c\x72\x32\x7c\x25\xd2\xd9\xf4\xcd\xe5\xd3\xef\x17\x0f\x7e\xa8\x1b\xf9\xec\xaf\x9f\x96\x5f\xfd\xba\x7c\x74\xf6\xcf\xf9\xb7\x8b\xaf\x7f\x59\x3c\xfc\xfd\xf9\xd9\x37\xcb\xc7\xf7\x96\x67\x5f\x2e\x1f\x9d\xf9\xb0\x7c\xfa\xe3\xc1\xde\xe1\xe2\xe7\xfb\x9b\xdb\x37\x6f\xee\x6c\xed\xde\x5a\x3c\x7c\xe2\x6d\x07\x34\xbb\xc2\x43\x9d\xdc\x0b\xef\xa3\xf7\x59\xc9\x8e\xaa\x39\x33\x00\x08\xff\xf3\xd3\x9b\xd2\x70\x28\x59\x84\x1c\x98\x05\x9b\x20\xa0\xe2\x6e\xcc\xbb\x4f\xae\xa3\xc2\x4d\x79\x30\xba\x92\x5d\x1f\x0c\x48\xcd\x38\xc4\xcc\xf4\x68\x5d\x9f\x88\xab\xb7\xdf\xc4\x10\xe8\x4d\xc5\xf5\xcb\xab\x52\x9b\xeb\xfa\xda\x98\x9a\xbe\x06\xb4\x1e\xa3\x01\xad\x7f\x5a\x66\xb3\x2a\xd7\xf9\x7c\xd0\xfb\xc5\x69\xae\xb7\xf9\xfc\x5a\x6b\x07\xd8\xb7\xff\x1b\x00\x00\xff\xff\x41\x95\x65\x24\x21\x09\x00\x00")

func layoutsInsideHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutsInsideHtml,
		"layouts/inside.html",
	)
}

func layoutsInsideHtml() (*asset, error) {
	bytes, err := layoutsInsideHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layouts/inside.html", size: 2337, mode: os.FileMode(420), modTime: time.Unix(1508812826, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutsOutsideHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcd\x6e\x1c\x45\x10\xbe\xef\x53\x94\xfb\xc0\x89\x99\x8e\x6d\x2c\x1c\x98\x59\x89\x2c\x46\x18\x81\x30\x38\x48\xa0\x28\x87\x76\x77\x8d\xa7\x97\x99\xee\xc9\x74\xcd\xc6\xab\xd5\x48\x20\x84\xc0\x87\x28\x9c\xf8\x91\x92\x03\x12\x47\x24\xb8\x85\x9c\x78\x19\x76\x10\x6f\x81\x7a\x7e\xd6\x63\x67\x91\xc8\x5e\x76\xaa\xbe\xae\xaf\xab\xea\xab\xea\xd5\x0a\x14\x26\xda\x20\xb0\x33\xe1\x90\x41\x5d\x4f\xa2\x9d\xb7\x3f\x9c\xdd\xfd\xec\xe4\x08\x52\xca\xb3\xe9\x24\xf2\x7f\x90\x09\x73\x1e\x33\x34\xcc\x3b\x50\xa8\xe9\x04\x20\xca\x91\x04\xc8\x54\x94\x0e\x29\x66\x15\x25\xc1\x21\xbb\x02\x52\xa2\x22\xc0\x07\x95\x5e\xc4\xec\xd3\xe0\x93\xb7\x82\x99\xcd\x0b\x41\xfa\x2c\x43\x06\xd2\x1a\x42\x43\x31\x3b\x3e\x8a\x51\x9d\xe3\x28\xce\x88\x1c\x63\xb6\xd0\xf8\xb0\xb0\x25\x8d\x8e\x3e\xd4\x8a\xd2\x58\xe1\x42\x4b\x0c\x5a\xe3\x55\xd0\x46\x93\x16\x59\xe0\xa4\xc8\x30\xde\x65\xd3\x89\xe7\x21\x4d\x19\x4e\x57\x2b\x20\xcc\x8b\x4c\x10\x02\x6b\x5d\x0c\x42\xa8\xeb\x88\x77\xb8\x3f\x99\x69\xf3\x39\x94\x98\xc5\xcc\xa5\xb6\x24\x59\x11\x68\x69\x0d\x83\xb4\xc4\x24\x66\x3c\x11\x0b\x6f\x87\x5a\xda\x9e\x7b\x27\x08\xe0\x8e\xb5\xe4\xa8\x14\x05\x48\x5b\x22\xcc\x4e\x4f\x21\x08\x6e\xf2\xd1\x32\x43\x97\x22\xd2\x86\xac\x73\xf1\xb3\x21\x3a\xcc\xb5\x09\xa5\x73\x9e\x79\xa0\x9e\x55\x8e\x6c\xfe\x02\xe5\x75\x06\x5b\x91\xd3\x0a\xdb\xd8\x17\x6e\x9b\xde\xa0\xea\x20\x48\x6c\x09\x94\x6a\x77\xd5\x93\x8e\xff\x5a\x97\xfc\x5d\xae\xeb\xd2\x26\xa3\x77\xef\x7e\xf0\xfe\x01\xb8\x54\xe7\x20\x8c\x82\x8f\xd1\x15\xd6\xa8\x70\xde\x51\x1e\x1f\x1d\x82\xab\x0a\x2f\x15\xd8\xa4\x3f\x8c\x19\xe6\x68\xc8\xb5\x01\x39\x2a\x2d\xe0\x41\x85\xa5\x46\x37\x14\xb5\x13\x04\xf7\x74\x02\x19\xc1\xf1\x11\xdc\xbe\xef\x7d\x00\x91\x93\xa5\x2e\x08\x5c\x29\x63\xe6\xc7\xc7\xbd\xc1\xb9\x75\x2e\xcc\xc5\x85\x54\x26\x94\x36\xe7\x7e\x1a\x0f\x5c\xaa\x17\x7c\x3f\x7c\x3d\xdc\xbb\xb2\xdb\x66\xce\x1d\x9b\x46\xbc\xa3\xf9\xff\x9c\x65\x57\x12\xdf\x0d\x5f\x0b\xf7\x06\x6b\x2b\x5f\xb4\x73\x0f\x8d\xd2\xc9\x7d\x5f\xc6\xd0\xa0\xf9\x47\x15\x96\xcb\xa1\xb2\xf1\x7d\x7c\xee\xf8\xdc\x57\xbe\xdc\xc2\x16\xf1\x6e\x91\xa2\x33\xab\x96\x1b\xd1\xee\xe0\xb9\x36\x50\x88\x73\x1c\x06\x7f\x9b\x4e\x3d\xd4\x29\x05\x43\xec\x3b\xfa\x02\x15\x24\xd6\x12\x96\x43\x3a\xbd\x25\x33\xe1\x5c\xcc\x3a\x8b\xf5\xad\x51\x7a\x31\x00\x9e\x50\x68\xb3\xc1\x00\xa2\x62\xc0\x08\x2f\x28\xc8\x2b\x42\xc5\xa6\xaf\x48\x5b\x2c\xdf\x6c\x9e\x7f\xbf\x7e\xf4\x43\xf3\xe8\x59\xf3\xf4\xf7\xbf\xfe\xfc\xb9\xf9\xf2\xb7\xe6\xc9\xe5\x3f\x3f\x7d\xb7\xfe\xfa\xd7\xf5\xe3\x3f\xfe\xbe\xfc\xb6\x79\xfa\x55\x73\xf9\x45\xf3\xe4\x32\x84\xe6\xf9\x8f\xc7\xb3\x93\xf5\x2f\xdf\xec\xee\xdf\xba\x75\xb0\x77\x78\x7b\xfd\xf8\x59\xb0\x1f\xf1\xa2\x4f\x82\x2b\xbd\x68\x33\xe5\x5d\x72\xff\xb9\x65\xef\x89\x85\x38\x6d\x7b\x37\x01\x88\x5f\xfa\x37\x9a\x3c\x38\xc9\x84\x44\x05\x82\x80\x52\x04\x34\xca\x8f\xae\xff\x54\x56\x56\x7e\x72\xc1\xd9\xd6\xf6\x3a\x38\xc8\xac\x50\x90\x08\x37\x6a\xeb\x4d\x95\xaf\xef\xf4\xdc\x31\x18\x29\x7d\x73\x21\x5b\xb7\xdb\xa6\x6b\x0f\xf5\x1b\x18\xf1\x6e\x34\x22\xde\x3d\xc5\xab\x55\x9b\x6b\x5d\x4f\x46\x0f\x77\xbf\xb2\x75\xbd\x15\xdd\x10\x8e\xf1\x7f\x03\x00\x00\xff\xff\x3c\x3c\xa7\x04\xf7\x05\x00\x00")

func layoutsOutsideHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutsOutsideHtml,
		"layouts/outside.html",
	)
}

func layoutsOutsideHtml() (*asset, error) {
	bytes, err := layoutsOutsideHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layouts/outside.html", size: 1527, mode: os.FileMode(420), modTime: time.Unix(1508812834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutsProfileHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x5f\x8f\xdc\x48\x11\x7f\x9f\x4f\x51\x71\x4e\xec\x8c\x74\xb6\x2f\x09\x11\x09\xb1\x47\x4a\x36\x73\x62\xd1\x25\x17\xb2\xbb\x12\xe8\x74\x0f\x3d\xee\xb2\xa7\x97\x76\xb7\xcf\xdd\xf6\x66\x35\x1a\x09\x74\x42\x47\x90\x4e\x39\xa4\x13\x10\xe9\xee\x01\x89\x07\x90\x10\xf0\x96\xbb\x20\xc4\x97\xc9\x4c\xe0\x5b\xa0\x76\xdb\x5e\xcf\xdf\xec\x12\xc1\x3e\xec\xb8\xab\xab\x7e\x5d\xf5\xeb\xea\x3f\xd5\xd3\x29\x50\x8c\x99\x40\x70\xc6\x44\xa1\x03\xb3\x59\x2f\xb8\x72\xff\xc3\xfd\xa3\x9f\x3c\x1a\xc1\x44\xa7\x7c\xd8\x0b\xcc\x0f\x70\x22\x92\xd0\x41\xe1\x18\x01\x12\x3a\xec\x01\x04\x29\x6a\x02\xd1\x84\xe4\x0a\x75\xe8\x14\x3a\x76\x6f\x39\xe7\x1d\x13\xad\x33\x17\x3f\x29\x58\x19\x3a\x3f\x76\x8f\xef\xba\xfb\x32\xcd\x88\x66\x63\x8e\x0e\x44\x52\x68\x14\x3a\x74\x0e\x46\x21\xd2\x04\x3b\x76\x82\xa4\x18\x3a\x25\xc3\xd3\x4c\xe6\xba\xa3\x7a\xca\xa8\x9e\x84\x14\x4b\x16\xa1\x5b\x35\xde\x05\x26\x98\x66\x84\xbb\x2a\x22\x1c\xc3\x6b\xce\xb0\x67\x70\x34\xd3\x1c\x87\xd3\x29\x68\x4c\x33\x4e\x34\x82\x53\x89\x1c\xf0\x60\x36\x0b\x7c\xdb\x6f\x34\x39\x13\x3f\x85\x1c\x79\xe8\xa8\x89\xcc\x75\x54\x68\x60\x91\x14\x0e\x4c\x72\x8c\x43\xc7\x8f\x49\x69\xda\x1e\x8b\x64\x8d\x7d\xc5\x75\xe1\x9e\x94\x5a\xe9\x9c\x64\x10\xc9\x1c\x61\xff\xf0\x10\x5c\x77\x15\x4f\x9f\x71\x54\x13\x44\xdd\x82\x59\x91\x3f\x6e\xac\xbd\x94\x09\x2f\x52\xca\x20\x37\xd0\xfb\x85\xd2\x32\x5d\x83\x5c\x46\x60\x42\x31\x8a\x95\xe9\xda\x60\xc3\x55\x28\xdb\x07\xb1\xcc\x41\x4f\x98\x3a\xe7\xc4\xe2\x2f\xb1\x64\xc6\x52\x96\xa5\x16\xe6\x07\x47\x0f\x3e\xb8\x09\x6a\xc2\x52\x20\x82\xc2\x63\x54\x99\x14\xd4\x3b\xb1\x90\x07\xa3\x5b\xa0\x8a\xcc\x4c\x15\xc8\xb8\x56\x46\x8e\x29\x0a\xad\x2a\x83\x14\x29\x23\xf0\x49\x81\x39\x43\xd5\x04\x75\xc5\x75\x3f\x62\x31\x70\x0d\x07\x23\xb8\xfd\xb1\x91\x01\x04\x2a\xca\x59\xa6\x41\xe5\x51\xe8\x98\xf4\x51\xdf\xf7\x7d\xa9\x94\x97\x92\x27\x11\x15\x5e\x24\x53\xdf\x64\xe3\x4d\x35\x61\xa5\x7f\xc3\xfb\x9e\x77\xfd\xbc\x5d\x91\x79\xa2\x9c\x61\xe0\x5b\x98\x8b\x63\xe6\x36\x24\xff\x9a\xf7\x5d\xef\x7a\xd3\xda\x88\x17\x5c\xf9\x08\x05\x65\xf1\xc7\x26\x8c\x86\xa0\x93\x1f\x15\x98\x9f\x35\x91\x75\xc7\xf3\x4f\x94\x7f\x62\x22\x3f\xdb\x80\x16\xf8\x76\x21\x05\x63\x49\xcf\x1a\x52\xe0\x7d\xf6\x04\x29\x08\x52\x8e\x49\xde\x40\x0a\x52\x42\xc4\x89\x52\xa1\x53\x77\xd8\x1f\x97\x62\x4c\x0a\xae\x9b\x66\x6c\x6c\x5d\x2d\x33\xa7\x8e\x9d\xb2\xd6\xd0\xac\x22\xc2\x04\xe6\x75\xdf\x72\x6f\x0d\x60\x1c\xea\x68\x00\x04\xe3\x42\x6b\x29\x40\x9f\x65\x18\x3a\xb6\xe1\xac\x18\x69\x99\x24\x1c\x21\x92\x9c\x93\x4c\x21\x75\x80\x12\x4d\x6a\xb1\x19\xd8\xca\x1b\x31\xc9\x13\xb3\x5b\x5c\xb5\xd6\x0e\x90\x9c\x11\x17\x9f\x64\x44\x50\xa4\xa1\x13\x13\x6e\x74\x2b\xa9\xf1\x39\x97\xbc\x1d\xaa\xe3\x98\x21\x3a\x23\xa2\x71\x45\xe5\xae\x14\xfc\xcc\x19\x1e\x59\x67\x04\x29\x59\x42\x34\x93\x22\xf0\x8d\xde\x56\x43\xb3\xb8\xdd\x0a\xfa\x7f\xaf\x18\xf8\x96\xc0\x8e\x84\xac\x70\x39\xce\x89\xa0\xcd\x7e\x71\xd5\x19\x2e\x3e\x7f\xb1\xf8\xfa\x6f\x8b\xe7\x2f\xff\xf5\xe9\x3f\x5e\xbd\xfc\x75\xe0\x93\x76\xf6\x7c\xca\xca\xa5\xa9\x64\xb4\xe5\xe9\x7c\xd2\x2d\xf7\x4d\x82\xb4\x73\xd1\x71\xa1\xe0\x1d\x1f\x1a\xc5\xce\x67\xce\x92\x89\x5e\x66\x9e\xb3\x61\x40\x9a\x2d\xe9\x14\xc7\x3e\x97\x89\x2c\xf4\x74\x0a\x5e\x95\xec\x87\x3a\x67\x22\x81\xd9\xcc\x19\xbe\x7e\xfe\xf7\xf9\x67\x2f\x8d\xdf\x81\xcf\x59\x97\x8b\x82\x2f\x87\x62\xb2\xdf\xf7\x04\x29\x5b\x2f\xeb\xf4\xef\xc4\x1a\xf8\x82\x94\x76\xe1\x5d\x38\xb5\x73\x79\x0a\x59\x2e\x63\xc6\x71\x39\x8a\x25\x04\xee\xa6\xd4\xbd\xb1\xa4\xb0\xaa\x54\x83\xb8\x66\xeb\x5d\x4d\xc6\x56\xdf\x2c\xe1\xc3\x83\xfb\xa3\x7b\x77\x1f\xc3\xf1\xe1\xe8\xf1\xa3\x83\xfd\x36\x8c\x37\x43\x17\x0a\xf3\x8c\x45\x1b\xa1\x2b\x1b\x96\x26\x76\x67\x31\x5c\x47\x45\x9e\xa3\xd0\xc7\x0a\x73\xef\x6e\x49\x34\xc9\x0d\xe5\x6d\x1e\xa6\x89\x6b\xb7\x32\xc5\x4a\xb3\xa2\xb8\x0e\x9d\xcd\x4e\x77\x53\x69\x2d\x9a\xd1\xc3\xfb\x17\x8d\x68\x35\x78\x38\x3a\x38\xfa\x60\x74\xc9\xf8\xed\x41\xbd\x95\x81\x5d\x56\xae\xb9\x3a\x6c\x35\x35\x7f\xab\xb4\x99\x7f\xc6\xc8\x9c\x77\x5b\x06\xdc\x46\x8e\x85\x63\xf1\x32\xe0\x63\xc9\x71\x3b\xd6\x4e\xe7\x4f\xe4\xf8\x52\xbe\x9b\xa1\xbc\x87\x6f\xe3\x3c\x0a\xba\xd1\xf4\x72\x09\xb1\x7b\x96\xbb\x39\x71\xef\xf8\xe8\xe8\xc3\x87\x87\x97\x4c\x08\xbb\x69\xaa\xed\x29\xb1\xeb\x8c\x1a\x6b\x01\x63\x2d\x5c\x55\x44\x11\x2a\x65\xbf\x53\x67\xf8\xbe\xe4\x5c\x9e\xae\xef\xc8\xff\x05\x34\x25\x22\xc1\xbc\x45\x7e\x80\x4a\x91\x04\x77\x41\x5f\x9c\xdf\x37\x30\xd6\x25\xf7\xc1\xe8\xe1\xf1\x25\x99\x4d\x51\x14\xdb\x69\x5d\x3a\x18\x76\x66\x66\xd0\xdd\xd9\xb7\xa8\x74\xcf\x8b\x9d\x60\x95\x36\x6b\x86\x4e\xf8\x59\x36\x31\x47\x2a\xb4\x5f\x95\xeb\xe6\x74\x7d\xe3\xa0\xf3\x6f\xbe\x98\x3f\x7b\x01\x9d\x53\x73\xe3\x60\xfe\x6e\xf7\x2f\x1b\x9d\x1f\x71\x66\x2e\xbf\x6f\x19\x65\xc4\x65\x41\x2f\x16\xe6\xcb\x2f\x5f\x7f\xf9\xc7\xff\x67\x98\x57\xdf\x32\xb6\x98\x93\xe4\x82\x33\xf8\x97\xf9\xaf\xfe\xf4\x36\xa1\x75\x2f\x1a\xcb\xf2\x37\xad\xc1\x2d\x0b\x6a\xcd\x70\x5d\xb0\x7e\xb3\xb8\xbd\x42\x98\xad\x22\x31\x61\x02\x32\x92\x60\x53\xe3\xae\x0d\xb7\x54\x9c\xd5\x4a\xe7\xe5\xd9\x46\x0f\x3a\x97\x25\xf3\x01\xbd\x5e\x53\x92\xd8\x5d\x4c\xe3\x13\xed\x9f\x90\x92\x58\x69\xe5\x58\x3f\x2e\x44\x64\x6e\xcb\x70\x37\xd2\xac\xc4\x03\x8d\x69\x7f\x00\x30\xad\x30\xdf\xe9\xef\x79\xab\xdb\x06\x70\x36\x24\x7b\x03\x0f\x49\x34\x69\xad\xfb\xec\x5d\x20\x83\xda\x0a\xa0\x24\x39\x64\x44\x4f\xaa\x03\x36\x84\x53\x26\xa8\x3c\xf5\xb8\x8c\xaa\x8b\xb9\xd7\x74\xdd\xa9\xd5\x59\x0c\xfd\x73\xf5\x10\xde\xe9\x93\x81\x47\xb4\xce\xfb\x7b\x26\xeb\xf6\x06\xe7\xc8\x60\x3b\x33\x62\x0e\xc3\xfe\xc0\x23\x94\xee\x1b\xbe\xfb\x7b\xa4\xf2\x7f\x6f\xd0\x80\xda\xe3\x6d\x36\xe8\x99\x7f\xfd\xc1\x9d\xde\x72\x35\xd7\x16\x5c\xb1\x94\x1a\xdb\x82\xab\x6e\xd5\x73\x68\x5b\x17\xab\xa9\xb2\xa6\xcf\xd0\xec\xa6\x85\x46\xea\x0c\xbf\x13\xc9\xec\xec\xce\xe2\xdb\xdf\xcc\x3f\xff\xad\xbd\xd1\xbf\xfa\xe7\xef\x17\x3f\xff\xeb\xe2\xab\xa7\xff\x7e\xfe\xc5\xfc\x17\x7f\x9e\x3f\xfb\xe6\xf5\xd3\x5f\x2e\xbe\xfe\x74\xf1\xf4\x67\x8b\xaf\x9e\x7a\xb0\xf8\xf6\x77\x07\xfb\x8f\xe6\x7f\xf8\xec\xda\x8d\xf7\xde\xbb\x79\xfd\xd6\xed\xf9\xb3\x17\xee\x8d\xc0\xcf\xd6\x2e\xc4\xd6\xb9\xad\x4f\x13\x3f\x24\x25\x39\xac\x02\xee\x01\x84\x97\xfe\xeb\x94\xeb\xf0\x88\x93\x08\x29\x10\x0d\x7a\x82\x80\x82\x9a\x7a\xdf\x7c\x52\x19\x15\xa6\xdc\x07\x25\xab\xb6\xc9\x68\x05\x5c\x12\x0a\x31\x51\x1d\x5a\x57\x4b\xe3\xe5\x87\x90\x13\xe5\x40\xa7\x3c\x5e\x7d\xc5\xa8\xc4\x6a\xd3\xa3\x45\xdd\x55\xaf\x8b\xc0\xb7\xf5\x74\xe0\xdb\xf7\xab\xe9\xb4\xf2\x75\x36\xeb\x75\x5e\xbb\xea\x77\x8e\xd9\x6c\x63\x6f\x0b\xd8\xed\xff\x4f\x00\x00\x00\xff\xff\x8c\x08\xdb\xc6\x2c\x13\x00\x00")

func layoutsProfileHtmlBytes() ([]byte, error) {
	return bindataRead(
		_layoutsProfileHtml,
		"layouts/profile.html",
	)
}

func layoutsProfileHtml() (*asset, error) {
	bytes, err := layoutsProfileHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layouts/profile.html", size: 4908, mode: os.FileMode(420), modTime: time.Unix(1508812848, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"includes/authorize.html": includesAuthorizeHtml,
	"includes/client_detail.html": includesClient_detailHtml,
	"includes/clients.html": includesClientsHtml,
	"includes/index.html": includesIndexHtml,
	"includes/login.html": includesLoginHtml,
	"includes/new_client.html": includesNew_clientHtml,
	"includes/register.html": includesRegisterHtml,
	"layouts/inside.html": layoutsInsideHtml,
	"layouts/outside.html": layoutsOutsideHtml,
	"layouts/profile.html": layoutsProfileHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"includes": &bintree{nil, map[string]*bintree{
		"authorize.html": &bintree{includesAuthorizeHtml, map[string]*bintree{}},
		"client_detail.html": &bintree{includesClient_detailHtml, map[string]*bintree{}},
		"clients.html": &bintree{includesClientsHtml, map[string]*bintree{}},
		"index.html": &bintree{includesIndexHtml, map[string]*bintree{}},
		"login.html": &bintree{includesLoginHtml, map[string]*bintree{}},
		"new_client.html": &bintree{includesNew_clientHtml, map[string]*bintree{}},
		"register.html": &bintree{includesRegisterHtml, map[string]*bintree{}},
	}},
	"layouts": &bintree{nil, map[string]*bintree{
		"inside.html": &bintree{layoutsInsideHtml, map[string]*bintree{}},
		"outside.html": &bintree{layoutsOutsideHtml, map[string]*bintree{}},
		"profile.html": &bintree{layoutsProfileHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

